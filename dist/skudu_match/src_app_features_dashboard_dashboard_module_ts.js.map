{"version":3,"file":"src_app_features_dashboard_dashboard_module_ts.js","mappings":"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","sources":["./src/app/core/ngrx/market/index.ts","./src/app/core/ngrx/market/market.actions.ts","./src/app/core/ngrx/market/market.effects.ts","./src/app/core/ngrx/market/market.reducer.ts","./src/app/core/ngrx/market/market.selectors.ts","./src/app/core/services/confirmation-modal/confirmation-modal.service.ts","./src/app/features/dashboard/components/agents/brokers.component.ts","./src/app/features/dashboard/components/agents/brokers.component.html","./src/app/features/dashboard/components/agents/components/broker-requests/broker-requests.component.ts","./src/app/features/dashboard/components/agents/components/broker-requests/broker-requests.component.html","./src/app/features/dashboard/components/agents/components/confirm-broker-admin-permission/confirm-broker-admin-permission.component.ts","./src/app/features/dashboard/components/agents/components/confirm-broker-admin-permission/confirm-broker-admin-permission.component.html","./src/app/features/dashboard/components/agents/components/how-it-works-modal/how-it-works-modal.component.ts","./src/app/features/dashboard/components/agents/components/how-it-works-modal/how-it-works-modal.component.html","./src/app/features/dashboard/components/agents/components/pending-request-modal/pending-request-modal.component.ts","./src/app/features/dashboard/components/agents/components/pending-request-modal/pending-request-modal.component.html","./src/app/features/dashboard/components/agents/components/request-broker-modal/request-broker-modal.component.ts","./src/app/features/dashboard/components/agents/components/request-broker-modal/request-broker-modal.component.html","./src/app/features/dashboard/components/browse-the-market/browse-the-market.component.ts","./src/app/features/dashboard/components/browse-the-market/browse-the-market.component.html","./src/app/features/dashboard/components/browse-the-market/components/duplicate-scout-modal/duplicate-scout-modal.component.ts","./src/app/features/dashboard/components/browse-the-market/components/duplicate-scout-modal/duplicate-scout-modal.component.html","./src/app/features/dashboard/components/browse-the-market/components/filter-the-market-modal/filter-the-market-modal.component.ts","./src/app/features/dashboard/components/browse-the-market/components/filter-the-market-modal/filter-the-market-modal.component.html","./src/app/features/dashboard/components/browse-the-market/components/location-modal/location-modal.component.ts","./src/app/features/dashboard/components/browse-the-market/components/location-modal/location-modal.component.html","./src/app/features/dashboard/components/browse-the-market/components/market-lot-card/market-lot-card.component.ts","./src/app/features/dashboard/components/browse-the-market/components/market-lot-card/market-lot-card.component.html","./src/app/features/dashboard/components/completed/completed.component.ts","./src/app/features/dashboard/components/completed/completed.component.html","./src/app/features/dashboard/components/dashboard-header/dashboard-header.component.ts","./src/app/features/dashboard/components/dashboard-header/dashboard-header.component.html","./src/app/features/dashboard/components/delete-account-modal/delete-account-modal.component.ts","./src/app/features/dashboard/components/delete-account-modal/delete-account-modal.component.html","./src/app/features/dashboard/components/expired-lot-period-modal/expired-lot-period-modal.component.ts","./src/app/features/dashboard/components/expired-lot-period-modal/expired-lot-period-modal.component.html","./src/app/features/dashboard/components/lot-analytics-modal/lots-analytics-modal.component.ts","./src/app/features/dashboard/components/lot-analytics-modal/lots-analytics-modal.component.html","./src/app/features/dashboard/components/lot-card/lot-card.component.ts","./src/app/features/dashboard/components/lot-card/lot-card.component.html","./src/app/features/dashboard/components/lot/lot.component.ts","./src/app/features/dashboard/components/lot/lot.component.html","./src/app/features/dashboard/components/main-nav/main-nav.component.ts","./src/app/features/dashboard/components/main-nav/main-nav.component.html","./src/app/features/dashboard/components/navigate-to-scout-modal/navigate-to-scout-modal.component.ts","./src/app/features/dashboard/components/navigate-to-scout-modal/navigate-to-scout-modal.component.html","./src/app/features/dashboard/components/negotiation-card/negotiation-card.component.ts","./src/app/features/dashboard/components/negotiation-card/negotiation-card.component.html","./src/app/features/dashboard/components/negotiations/negotiations.component.ts","./src/app/features/dashboard/components/negotiations/negotiations.component.html","./src/app/features/dashboard/components/profile/profile.component.ts","./src/app/features/dashboard/components/profile/profile.component.html","./src/app/features/dashboard/components/scout-card/scout-card.component.ts","./src/app/features/dashboard/components/scout-card/scout-card.component.html","./src/app/features/dashboard/components/scout/scout.component.ts","./src/app/features/dashboard/components/scout/scout.component.html","./src/app/features/dashboard/components/skudu-analytics-modal/skudu-analytics-modal.component.ts","./src/app/features/dashboard/components/skudu-analytics-modal/skudu-analytics-modal.component.html","./src/app/features/dashboard/components/verification-modal/verification-modal.component.ts","./src/app/features/dashboard/components/verification-modal/verification-modal.component.html","./src/app/features/dashboard/dashboard-routing.module.ts","./src/app/features/dashboard/dashboard.component.ts","./src/app/features/dashboard/dashboard.component.html","./src/app/features/dashboard/dashboard.module.ts"],"sourcesContent":["import * as marketActions from './market.actions';\r\nimport * as marketSelectors from './market.selectors';\r\n\r\nimport { marketFeatureKey, State as marketState, reducer as marketReducer } from './market.reducer';\r\n\r\nexport { marketActions, marketSelectors, marketFeatureKey, marketState, marketReducer };\r\n","import { MarketFilters } from '../../models/queryModels';\r\nimport { MarketLotCard, ScoutCard } from 'src/app/core/models/viewModels';\r\nimport { createAction, props } from '@ngrx/store';\r\n\r\n//#region Create\r\n//#endregion\r\n\r\n//#region Read\r\n// #region ReqMarketLotCards\r\nexport const ReqMarketLotCards = createAction(\r\n    '[Browse Market Dashboard] ReqMarketLotCards',\r\n    props<{ marketFilters: MarketFilters }>(),\r\n);\r\nexport const MarketLotCardsFail = createAction('[ReqMarketLotCards] MarketLotCardsFail');\r\nexport const MarketLotCardsSuccess = createAction(\r\n    '[ReqMarketLotCards] MarketLotsCardsSuccess',\r\n    props<{ lots: MarketLotCard[] }>(),\r\n);\r\n//#endregion\r\n// #region ReqMarketScoutCards\r\nexport const ReqMarketScoutCards = createAction(\r\n    '[Browse Market Dashboard] ReqMarketScoutCards',\r\n    props<{ marketFilters: MarketFilters }>(),\r\n);\r\nexport const MarketScoutCardsFail = createAction('[ReqMarketScoutCards] MarketScoutCardsFail');\r\nexport const MarketScoutCardsSuccess = createAction(\r\n    '[ReqMarketScoutCards] MarketScoutsCardsSuccess',\r\n    props<{ scouts: ScoutCard[] }>(),\r\n);\r\n//#endregion\r\n//#endregion\r\n\r\n//#region Update\r\n//#endregion\r\n\r\n// #region Delete\r\n// #endregion\r\n\r\n// #region Never Fail Actions\r\n// #region SetCurrentSessionFilters\r\nexport const SetCurrentSessionFilters = createAction(\r\n    '[Browse Market Dashboard] [NF] ReqMarketScoutCards',\r\n    props<{ currentSessionFilters: MarketFilters }>(),\r\n);\r\n//#endregion\r\n// #endregion\r\n","import { Router } from '@angular/router';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Store } from '@ngrx/store';\r\nimport { ApiService } from 'src/app/core/services/api/api.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { Actions, ofType, createEffect } from '@ngrx/effects';\r\n\r\nimport { switchMap, mergeMap, catchError, take } from 'rxjs/operators';\r\n\r\nimport { marketActions } from './index';\r\nimport * as fromRoot from 'src/app/core/ngrx/reducers/index';\r\nimport { from } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class MarketEffects {\r\n    // #region CREATE\r\n    // #endregion\r\n\r\n    // #region READ\r\n    // #region ReqMarketLotCards\r\n    ReqMarketLotCards$ = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(marketActions.ReqMarketLotCards),\r\n            mergeMap((payload) => {\r\n                return this.api.getMarketLotCards(payload.marketFilters).pipe(\r\n                    take(1),\r\n                    switchMap((lots) => {\r\n                        return [\r\n                            marketActions.MarketLotCardsSuccess({\r\n                                lots,\r\n                            }),\r\n                        ];\r\n                    }),\r\n                    catchError((error) => {\r\n                        console.log('ReqMarketLotCards: ', error.message);\r\n                        return [marketActions.MarketLotCardsFail()];\r\n                    }),\r\n                );\r\n            }),\r\n        ),\r\n    );\r\n    // #endregion\r\n    // #region ReqMarketScoutCards\r\n    ReqMarketScoutCards$ = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(marketActions.ReqMarketScoutCards),\r\n            mergeMap((payload) => {\r\n                return from(this.api.getMarketScoutCards(payload.marketFilters)).pipe(\r\n                    take(1),\r\n                    switchMap((scouts) => {\r\n                        return [\r\n                            marketActions.MarketScoutCardsSuccess({\r\n                                scouts,\r\n                            }),\r\n                        ];\r\n                    }),\r\n                    catchError((error) => {\r\n                        console.log('ReqMarketScoutCards: ', error.message);\r\n                        return [marketActions.MarketScoutCardsFail()];\r\n                    }),\r\n                );\r\n            }),\r\n        ),\r\n    );\r\n    // #endregion\r\n\r\n    // #region UPDATE\r\n    // #endregion\r\n\r\n    //#region DELETE\r\n    //#endregion\r\n\r\n    constructor(\r\n        private actions$: Actions,\r\n        private api: ApiService,\r\n        private store: Store<fromRoot.State>,\r\n        private snackbar: MatSnackBar,\r\n        private router: Router,\r\n    ) {}\r\n}\r\n","import { MarketLotCard, ScoutCard } from '../../models/viewModels';\r\nimport { MarketFilters } from '../../models/queryModels';\r\nimport { ReqLogoutAction } from '../authState/auth.actions';\r\nimport { createReducer, on } from '@ngrx/store';\r\n\r\nimport * as marketActions from '../market/market.actions';\r\n\r\nexport const marketFeatureKey = 'market';\r\n\r\nexport interface State {\r\n    lots: MarketLotCard[];\r\n    scouts: ScoutCard[];\r\n    currentSessionFilters: MarketFilters;\r\n}\r\n\r\nexport const initialState: State = {\r\n    lots: null,\r\n    scouts: null,\r\n    currentSessionFilters: null,\r\n};\r\n\r\nexport const reducer = createReducer(\r\n    initialState,\r\n    on(marketActions.MarketLotCardsSuccess, (state, action) => {\r\n        return { ...state, lots: action.lots };\r\n    }),\r\n    on(marketActions.MarketScoutCardsSuccess, (state, action) => {\r\n        return { ...state, scouts: action.scouts };\r\n    }),\r\n    on(marketActions.SetCurrentSessionFilters, (state, action) => {\r\n        return { ...state, currentSessionFilters: action.currentSessionFilters };\r\n    }),\r\n    on(ReqLogoutAction, () => {\r\n        return initialState;\r\n    }),\r\n);\r\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\r\nimport * as fromMarket from './market.reducer';\r\n\r\nexport const selectMarketState = createFeatureSelector<fromMarket.State>(fromMarket.marketFeatureKey);\r\n\r\nexport const getLotCards = createSelector(selectMarketState, (state) => {\r\n    return state.lots;\r\n});\r\nexport const getScoutCards = createSelector(selectMarketState, (state) => {\r\n    return state.scouts;\r\n});\r\nexport const getCurrentSessionFilters = createSelector(selectMarketState, (state) => {\r\n    return state.currentSessionFilters;\r\n});\r\n","import { Injectable } from '@angular/core';\r\nimport { MatLegacyDialog as MatDialog, MatLegacyDialogRef as MatDialogRef } from '@angular/material/legacy-dialog';\r\nimport { ConfirmationModalComponent } from '../../../features/broker-dashboard/components/confirmation-modal/confirmation-modal.component';\r\nimport { Client } from '../../models/queryModels';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class ConfirmationModalService {\r\n    constructor(private dialog: MatDialog) {}\r\n\r\n    open(\r\n        header: string,\r\n        subHeader: string,\r\n        clientData: Client,\r\n        confirmButton: string,\r\n        declineButton: string,\r\n    ): MatDialogRef<ConfirmationModalComponent> {\r\n        return this.dialog.open(ConfirmationModalComponent, {\r\n            panelClass: 'g-modal-container',\r\n            data: {\r\n                header,\r\n                subHeader,\r\n                clientData,\r\n                confirmButton,\r\n                declineButton,\r\n            },\r\n        });\r\n    }\r\n}\r\n","import { Component, EventEmitter, HostListener, OnInit } from '@angular/core';\r\nimport { MatLegacyDialog as MatDialog } from '@angular/material/legacy-dialog';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Capacitor } from '@capacitor/core';\r\n\r\nimport { takeUntil, take } from 'rxjs/operators';\r\nimport { Store, select } from '@ngrx/store';\r\nimport * as fromAuth from 'src/app/core/ngrx/authState/index';\r\nimport * as fromBrokers from 'src/app/core/ngrx/brokers/index';\r\nimport * as fromNotifications from 'src/app/core/ngrx/entities/notifications/index';\r\n\r\nimport { HowItWorksModalComponent } from './components/how-it-works-modal/how-it-works-modal.component';\r\nimport { RequestBrokerModalComponent } from './components/request-broker-modal/request-broker-modal.component';\r\n\r\nimport { HOME_ROUTE, REQUESTS_ROUTE } from 'src/app/core/helpers/constants';\r\nimport { Broker, BrokerRequest, User } from 'src/app/core/models/queryModels';\r\nimport { brokersActions, brokersSelectors } from 'src/app/core/ngrx/brokers/index';\r\nimport { ConfirmBrokerAdminPermissionComponent } from './components/confirm-broker-admin-permission/confirm-broker-admin-permission.component';\r\n\r\n@Component({\r\n    selector: 'app-brokers',\r\n    templateUrl: './brokers.component.html',\r\n    styleUrls: ['./brokers.component.scss'],\r\n})\r\nexport class BrokersComponent implements OnInit {\r\n    isWeb: boolean = false;\r\n    isLoading: boolean = false;\r\n    showTermsMenu: boolean = false;\r\n    acceptedTerms: boolean = false;\r\n\r\n    user: User;\r\n    brokers: Broker[] = [];\r\n    activeBroker: Broker;\r\n    brokerExpiryDate: number;\r\n\r\n    notificationUids: string[] = [];\r\n\r\n    destroyed$: EventEmitter<void> = new EventEmitter<void>();\r\n    toggleValue;\r\n\r\n    constructor(\r\n        private router: Router,\r\n        private dialog: MatDialog,\r\n        private store: Store,\r\n        private route: ActivatedRoute,\r\n    ) {\r\n        this.isWeb = Capacitor.getPlatform() === 'web';\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.isLoading = true;\r\n        this.store.pipe(select(fromAuth.authSelectors.getUser), takeUntil(this.destroyed$)).subscribe((user: User) => {\r\n            this.user = user;\r\n            this.store.dispatch(fromBrokers.brokersActions.ReqBrokersAndDistance_Shared({ user: this.user }));\r\n            this.store.dispatch(fromBrokers.brokersActions.ReqClientBrokerRequests_Client({ uid: this.user.uid }));\r\n        });\r\n\r\n        this.store\r\n            .pipe(select(fromBrokers.brokersSelectors.getBrokerTermsCheck), takeUntil(this.destroyed$))\r\n            .subscribe((termsChecked: boolean) => {\r\n                this.acceptedTerms = termsChecked;\r\n            });\r\n\r\n        if (!this.acceptedTerms) {\r\n            const tsandCsRef = this.dialog.open(HowItWorksModalComponent, {\r\n                panelClass: 'g-modal-container-sm-padding',\r\n            });\r\n            tsandCsRef\r\n                .afterClosed()\r\n                .pipe(take(1))\r\n                .subscribe(() => {\r\n                    this.store.dispatch(fromBrokers.brokersActions.ReqBrokerTermsCheck_Client());\r\n                });\r\n        }\r\n\r\n        this.store\r\n            .pipe(select(fromBrokers.brokersSelectors.getFilteredBrokers), takeUntil(this.destroyed$))\r\n            .subscribe((response) => {\r\n                if (response?.activeBroker) {\r\n                    this.activeBroker = response.activeBroker;\r\n                    this.isLoading = false;\r\n                }\r\n                if (response?.brokerList) {\r\n                    this.brokers = response.brokerList;\r\n                    this.isLoading = false;\r\n                }\r\n            });\r\n\r\n        this.route.queryParams.pipe(take(1)).subscribe(({ notificationUids }) => {\r\n            if (notificationUids?.length) {\r\n                this.notificationUids = notificationUids;\r\n            }\r\n        });\r\n\r\n        this.getToggleValueHelper();\r\n    }\r\n\r\n    @HostListener('window:click')\r\n    handleClick() {\r\n        this.showTermsMenu = false;\r\n    }\r\n\r\n    handleBack() {\r\n        this.router.navigate([HOME_ROUTE]);\r\n    }\r\n\r\n    handleToggleTermsMenu(e: Event) {\r\n        e.stopPropagation();\r\n        this.showTermsMenu = !this.showTermsMenu;\r\n    }\r\n\r\n    handleRequestBroker(broker: Broker) {\r\n        this.dialog.open(RequestBrokerModalComponent, {\r\n            panelClass: 'g-modal-container-sm-padding',\r\n            data: { broker: broker, user: this.user },\r\n        });\r\n    }\r\n\r\n    handleRouteToRequests() {\r\n        if (this.notificationUids.length > 0) {\r\n            this.store.dispatch(\r\n                fromNotifications.notificationActions.ReqToggleNotificationStatus({\r\n                    notificationUids: this.notificationUids,\r\n                }),\r\n            );\r\n        }\r\n\r\n        this.router.navigate([REQUESTS_ROUTE]);\r\n    }\r\n\r\n    getToggleValueHelper(): void {\r\n        this.store\r\n            .pipe(select(brokersSelectors.getClientsBrokerRequests), takeUntil(this.destroyed$))\r\n            .subscribe((requests: BrokerRequest[]) => {\r\n                const brokerRequest = requests.filter((request: BrokerRequest) => request.acceptedRequest).pop();\r\n                this.toggleValue = brokerRequest ? brokerRequest.brokerAdminRole : false;\r\n                this.brokerExpiryDate = brokerRequest ? brokerRequest.expiryDate : null;\r\n            });\r\n    }\r\n\r\n    handleToggleSwitch(value: boolean): void {\r\n        this.toggleValue = value;\r\n        if (value) {\r\n            this.handleOpenConfirmBrokerPermissionModal();\r\n        }\r\n        this.store.dispatch(\r\n            brokersActions.ReqToggleBrokerAdminRole({\r\n                brokerUid: this.activeBroker.uid,\r\n                clientUid: this.user.uid,\r\n                adminRole: value,\r\n            }),\r\n        );\r\n    }\r\n\r\n    handleOpenConfirmBrokerPermissionModal(): void {\r\n        this.dialog.open(ConfirmBrokerAdminPermissionComponent, {\r\n            panelClass: 'g-modal-container',\r\n        });\r\n    }\r\n}\r\n","<div class=\"g-app-dimensions l-container\">\r\n    <!-- #region Header -->\r\n\r\n    <div class=\"l-header\">\r\n        <img\r\n            class=\"l-back-icon\"\r\n            src=\"./assets/icons/back-arrow-icon.svg\"\r\n            alt=\"back-arrow-icon\"\r\n            (click)=\"handleBack()\"\r\n        />\r\n        <p class=\"g-text-h2-dark text-left ml-5\">MX Brokers</p>\r\n        <mat-icon class=\"l-terms-menu-toggle\" (click)=\"handleToggleTermsMenu($event)\">more_vert</mat-icon>\r\n        <div class=\"l-terms-menu l-fade-in-top\" *ngIf=\"showTermsMenu\">\r\n            <a\r\n                class=\"g-text-p-dark\"\r\n                mat-ripple\r\n                [href]=\"\r\n                    isWeb\r\n                        ? './assets/files/Sales Agt specifics 07.02.2023_C.pdf'\r\n                        : 'https://match.skudu.co.za/assets/files/Sales Agt specifics 07.02.2023_C.pdf'\r\n                \"\r\n                download=\"The Match Exchange - Client Subscription Form\"\r\n                ><strong>T's & C's</strong></a\r\n            >\r\n        </div>\r\n    </div>\r\n\r\n    <!-- #endregion -->\r\n\r\n    <!-- #region Content -->\r\n\r\n    <div class=\"l-content\">\r\n        <div *ngIf=\"isLoading; else showBrokers\">\r\n            <div class=\"l-loading-container\">\r\n                <mat-progress-spinner\r\n                    class=\"g-mat-progress-spinner-blue mx-auto\"\r\n                    mode=\"indeterminate\"\r\n                    [diameter]=\"40\"\r\n                ></mat-progress-spinner>\r\n                <h1 class=\"g-text-h1-dark\">Fetching Brokers...</h1>\r\n            </div>\r\n        </div>\r\n        <ng-template #showBrokers>\r\n            <div *ngIf=\"activeBroker; else showBrokerList\">\r\n                <div class=\"l-card-container\">\r\n                    <app-broker-info-card\r\n                        [showToggle]=true\r\n                        [toggleInputValue]=\"toggleValue\"\r\n                        (toggleOutputValueEvent)=\"handleToggleSwitch($event)\"\r\n                        [data]=\"activeBroker\"\r\n                        showMap=\"true\"\r\n                        showAccepted=\"true\"\r\n                        [validUntil]=\"brokerExpiryDate\"\r\n                    ></app-broker-info-card>\r\n                </div>\r\n            </div>\r\n            <ng-template #showBrokerList>\r\n                <a class=\"g-secondary-button pt-2\" mat-flat-button href=\"https://matchmx.com/find-your-broker/\"\r\n                    >Visit the MX Website</a\r\n                >\r\n                <div class=\"l-my-requests-container\">\r\n                    <button class=\"g-primary-button my-2\" (click)=\"handleRouteToRequests()\" mat-flat-button>\r\n                        My Requests\r\n                    </button>\r\n                    <div *ngIf=\"notificationUids?.length\" class=\"g-notification-dot-protrude l-notification-dot\">\r\n                        {{ notificationUids?.length }}\r\n                    </div>\r\n                </div>\r\n                <div *ngFor=\"let broker of brokers\" class=\"l-card-container\">\r\n                    <app-broker-info-card [data]=\"broker\" textLeft=\"true\"></app-broker-info-card>\r\n                    <button class=\"g-primary-button\" (click)=\"handleRequestBroker(broker)\">Request Broker</button>\r\n                </div>\r\n            </ng-template>\r\n        </ng-template>\r\n    </div>\r\n\r\n    <!-- #endregion -->\r\n</div>\r\n","import { Component, EventEmitter, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { BROKERS_ROUTE } from 'src/app/core/helpers/constants';\r\nimport { Broker, BrokerRequest, User } from 'src/app/core/models/queryModels';\r\nimport { Store, select } from '@ngrx/store';\r\nimport { mergeMap, take, takeUntil } from 'rxjs/operators';\r\nimport { combineLatest } from 'rxjs';\r\n\r\nimport * as fromBrokers from 'src/app/core/ngrx/brokers/index';\r\nimport { MatLegacyDialog as MatDialog } from '@angular/material/legacy-dialog';\r\nimport { PendingRequestModalComponent } from '../pending-request-modal/pending-request-modal.component';\r\nimport * as fromAuth from 'src/app/core/ngrx/authState/index';\r\n\r\n@Component({\r\n    selector: 'app-broker-requests',\r\n    templateUrl: './broker-requests.component.html',\r\n    styleUrls: ['./broker-requests.component.scss'],\r\n})\r\nexport class BrokerRequestsComponent implements OnInit {\r\n    isLoading: boolean = false;\r\n    brokers: Broker[] = [];\r\n    user: User;\r\n    fromClientRequests: Broker[] = [];\r\n    fromBrokerRequests: Broker[] = [];\r\n    noRequests: boolean = false;\r\n\r\n    destroyed$: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n    constructor(private router: Router, private store: Store, private dialog: MatDialog) {}\r\n\r\n    ngOnInit(): void {\r\n        this.isLoading = true;\r\n\r\n        this.store.pipe(select(fromAuth.authSelectors.getUser), take(1)).subscribe((user: User) => {\r\n            this.user = user;\r\n        });\r\n\r\n        this.store\r\n            .pipe(select(fromBrokers.brokersSelectors.getFilteredRequests), takeUntil(this.destroyed$))\r\n            .subscribe((response: { fromBrokerRequests: Broker[]; fromClientRequests: Broker[] }) => {\r\n                if (response?.fromBrokerRequests) {\r\n                    this.fromBrokerRequests = response?.fromBrokerRequests;\r\n                }\r\n                if (response?.fromClientRequests) {\r\n                    this.fromClientRequests = response?.fromClientRequests;\r\n                }\r\n                if (!response) {\r\n                    this.noRequests = true;\r\n                }\r\n                this.isLoading = false;\r\n            });\r\n    }\r\n\r\n    handleBack() {\r\n        this.router.navigate([BROKERS_ROUTE]);\r\n    }\r\n\r\n    handleViewRequest(broker: Broker, fromBroker: boolean) {\r\n        this.dialog.open(PendingRequestModalComponent, {\r\n            panelClass: 'g-modal-container-sm-padding',\r\n            data: { broker: broker, user: this.user, fromBroker: fromBroker },\r\n        });\r\n    }\r\n}\r\n","<div class=\"g-app-dimensions l-container\">\r\n    <!-- #region Header -->\r\n\r\n    <div class=\"l-header\">\r\n        <img\r\n            class=\"l-back-icon\"\r\n            src=\"./assets/icons/back-arrow-icon.svg\"\r\n            alt=\"back-arrow-icon\"\r\n            (click)=\"handleBack()\"\r\n        />\r\n        <p class=\"g-text-h2-dark text-left ml-5\">MX Brokers Requests</p>\r\n    </div>\r\n\r\n    <!-- #endregion -->\r\n\r\n    <!-- #region Content -->\r\n\r\n    <div class=\"l-content\" *ngIf=\"!noRequests; else noRequestsText\">\r\n        <div class=\"l-agents-container\" *ngIf=\"isLoading; else showBrokers\">\r\n            <div class=\"l-loading-container\">\r\n                <mat-progress-spinner\r\n                    class=\"g-mat-progress-spinner-blue mx-auto\"\r\n                    mode=\"indeterminate\"\r\n                    [diameter]=\"40\"\r\n                ></mat-progress-spinner>\r\n                <h1 class=\"g-text-h1-dark\">Fetching Requests...</h1>\r\n            </div>\r\n        </div>\r\n        <ng-template #showBrokers>\r\n            <div *ngFor=\"let clientRequest of fromClientRequests\" class=\"l-card-container\">\r\n                <div class=\"l-pending\">Your Request</div>\r\n                <app-broker-info-card [data]=\"clientRequest\" textLeft=\"true\"></app-broker-info-card>\r\n                <button class=\"g-primary-button\" (click)=\"handleViewRequest(clientRequest, false)\">\r\n                    View Your Request\r\n                </button>\r\n            </div>\r\n            <div *ngFor=\"let brokerRequest of fromBrokerRequests\" class=\"l-card-container\">\r\n                <div class=\"l-pending\">Broker Request</div>\r\n                <app-broker-info-card [data]=\"brokerRequest\" textLeft=\"true\"></app-broker-info-card>\r\n                <button class=\"g-primary-button\" (click)=\"handleViewRequest(brokerRequest, true)\">\r\n                    View Broker Request\r\n                </button>\r\n            </div>\r\n        </ng-template>\r\n    </div>\r\n    <ng-template #noRequestsText>\r\n        <h1 class=\"g-text-h2-dark mt-5\">No active Broker Requests</h1>\r\n    </ng-template>\r\n\r\n    <!-- #endregion -->\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatLegacyDialogRef as MatDialogRef } from '@angular/material/legacy-dialog';\r\n\r\n@Component({\r\n    selector: 'app-confirm-broker-admin-permission',\r\n    templateUrl: './confirm-broker-admin-permission.component.html',\r\n    styleUrls: ['./confirm-broker-admin-permission.component.scss'],\r\n})\r\nexport class ConfirmBrokerAdminPermissionComponent implements OnInit {\r\n    constructor(private dialogRef: MatDialogRef<ConfirmBrokerAdminPermissionComponent>) {}\r\n\r\n    ngOnInit(): void {}\r\n\r\n    handleCloseModal(): void {\r\n        this.dialogRef.close();\r\n    }\r\n}\r\n","<div class=\"d-flex flex-column\">\r\n  <!-- #region Header -->\r\n\r\n  <div class=\"d-flex flex-column\">\r\n    <div class=\"d-flex flex-row justify-content-end w-100\">\r\n      <img\r\n        class=\"g-modal-close-icon\"\r\n        src=\"./assets/icons/close-icon-dark.svg\"\r\n        alt=\"close\"\r\n        (click)=\"handleCloseModal()\" />\r\n    </div>\r\n    <h1 class=\"g-text-h1-dark mb-3 w-100\">\r\n      <b>Confirm Broker Permission</b>\r\n    </h1>\r\n  </div>\r\n\r\n  <!-- #endregion -->\r\n\r\n  <!-- #region Modal Content -->\r\n\r\n  <div class=\"g-text-p-dark\">\r\n    <p>\r\n      When 'YES' this setting lets your appointed Broker submit matches on your behalf.\r\n      When 'NO' you will be required to submit the final match.\r\n    </p>\r\n  </div>\r\n  <!-- #endregion -->\r\n\r\n  <!-- #region Buttons -->\r\n\r\n  <button\r\n    class=\"g-primary-button my-2\"\r\n    (click)=\"handleCloseModal()\">\r\n    OK\r\n  </button>\r\n\r\n  <!-- #endregion -->\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatLegacyDialogRef as MatDialogRef } from '@angular/material/legacy-dialog';\r\nimport { Router } from '@angular/router';\r\nimport { HOME_ROUTE } from 'src/app/core/helpers/constants';\r\n\r\n@Component({\r\n    selector: 'app-ts-and-cs-modal',\r\n    templateUrl: './how-it-works-modal.component.html',\r\n    styleUrls: ['./how-it-works-modal.component.scss'],\r\n})\r\nexport class HowItWorksModalComponent implements OnInit {\r\n    constructor(private dialogRef: MatDialogRef<HowItWorksModalComponent>, private router: Router) {}\r\n\r\n    ngOnInit(): void {}\r\n\r\n    handleBack() {\r\n        this.router.navigate([HOME_ROUTE]);\r\n        this.dialogRef.close();\r\n    }\r\n\r\n    handleRouteToBrokers() {\r\n        this.dialogRef.close();\r\n    }\r\n}\r\n","<div class=\"g-app-dimensions l-container\">\r\n    <!-- #region Content -->\r\n\r\n    <div class=\"l-content\">\r\n        <h1 class=\"g-text-h1-dark mb-3 text-left\">How Does It Work?</h1>\r\n        <p class=\"g-text-p-dark text-left mb-2\">\r\n            Subscribers can appoint a Broker to manage their account. Brokers can create Scouts, Lots, and Negotiate on\r\n            the subscribers' behalf. Throughout the process keep complete control and take no transactional risk by\r\n            making use of a Broker. Only you submit the final Match and sign the final contract.\r\n        </p>\r\n        <p class=\"g-text-p-dark text-left mb-2\">To appoint a Broker, follow these steps:</p>\r\n        <p class=\"g-text-p-dark text-left\">- Scout for Brokers</p>\r\n        <p class=\"g-text-p-dark text-left mb-2\">- Request to appoint</p>\r\n        <p class=\"g-text-p-dark text-left\">The commission fee of brokers is R3 per ton; only on a successful Match!</p>\r\n    </div>\r\n    <!-- #region Buttons -->\r\n\r\n    <div class=\"mt-4\">\r\n        <button class=\"mb-2 g-primary-button\" (click)=\"handleRouteToBrokers()\">Continue</button>\r\n        <a class=\"g-secondary-button pt-2\" mat-flat-button href=\"https://matchmx.com/find-your-broker/\"\r\n            >Visit the MX Website</a\r\n        >\r\n    </div>\r\n\r\n    <!-- #endregion -->\r\n\r\n    <!-- #endregion -->\r\n</div>\r\n","import { Component, EventEmitter, Inject, OnInit } from '@angular/core';\r\nimport { MatLegacyDialogRef as MatDialogRef, MAT_LEGACY_DIALOG_DATA as MAT_DIALOG_DATA } from '@angular/material/legacy-dialog';\r\nimport { Store } from '@ngrx/store';\r\nimport { Broker, User } from 'src/app/core/models/queryModels';\r\nimport * as actions from 'src/app/core/helpers/index.actions';\r\nimport { Router } from '@angular/router';\r\nimport { BROKERS_ROUTE, REQUESTS_ROUTE } from 'src/app/core/helpers/constants';\r\nimport * as fromBrokers from 'src/app/core/ngrx/brokers/index';\r\nimport { Actions, ofType } from '@ngrx/effects';\r\nimport { take } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector: 'app-pending-request-modal',\r\n    templateUrl: './pending-request-modal.component.html',\r\n    styleUrls: ['./pending-request-modal.component.scss'],\r\n})\r\nexport class PendingRequestModalComponent implements OnInit {\r\n    isLoading: boolean = false;\r\n    requestBroker: boolean = false;\r\n    termsAccepted: boolean = false;\r\n\r\n    destroyed$: EventEmitter<void> = new EventEmitter<void>();\r\n    constructor(\r\n        private dialogRef: MatDialogRef<PendingRequestModalComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: { broker: Broker; user: User; fromBroker: boolean },\r\n        private store: Store,\r\n        private router: Router,\r\n        private actions$: Actions,\r\n    ) {}\r\n\r\n    ngOnInit(): void {}\r\n\r\n    handleCloseModal() {\r\n        this.dialogRef.close();\r\n    }\r\n\r\n    handleShowTerms() {\r\n        this.requestBroker = true;\r\n    }\r\n\r\n    handleDeleteRequest() {\r\n        this.isLoading = true;\r\n        this.actions$\r\n            .pipe(\r\n                ofType(\r\n                    actions.brokersActions.ReqDeleteRequest_SharedSuccess,\r\n                    actions.brokersActions.ReqDeleteRequest_SharedFail,\r\n                ),\r\n                take(1),\r\n            )\r\n            .subscribe((response) => {\r\n                if (response) {\r\n                    this.store.dispatch(\r\n                        fromBrokers.brokersActions.ReqClientBrokerRequests_Client({ uid: this.data.user.uid }),\r\n                    );\r\n                } else {\r\n                    this.isLoading = false;\r\n                }\r\n            });\r\n\r\n        this.actions$\r\n            .pipe(\r\n                ofType(\r\n                    actions.brokersActions.ReqClientBrokerRequests_ClientSuccess,\r\n                    actions.brokersActions.ReqClientBrokerRequests_ClientFail,\r\n                ),\r\n                take(1),\r\n            )\r\n            .subscribe((response) => {\r\n                if (response) {\r\n                    this.dialogRef.close();\r\n                    this.router.navigate([REQUESTS_ROUTE]);\r\n                }\r\n                this.isLoading = false;\r\n            });\r\n        this.store.dispatch(\r\n            actions.brokersActions.ReqDeleteRequest_Shared({\r\n                brokerUid: this.data.broker.uid,\r\n                clientUid: this.data.user.uid,\r\n            }),\r\n        );\r\n    }\r\n\r\n    handleAcceptRequest() {\r\n        this.isLoading = true;\r\n        this.actions$\r\n            .pipe(\r\n                ofType(\r\n                    actions.brokersActions.ReqAcceptRequest_SharedSuccess,\r\n                    actions.brokersActions.ReqAcceptRequest_SharedFail,\r\n                ),\r\n                take(1),\r\n            )\r\n            .subscribe((response) => {\r\n                if (response) {\r\n                    this.store.dispatch(\r\n                        fromBrokers.brokersActions.ReqClientBrokerRequests_Client({ uid: this.data.user.uid }),\r\n                    );\r\n                    this.store.dispatch(\r\n                        actions.brokersActions.ReqSendPairingNotification_Shared({\r\n                            fromBroker: false,\r\n                            newRequest: false,\r\n                            brokerUid: this.data.broker.uid,\r\n                            clientUid: this.data.user.uid,\r\n                        }),\r\n                    );\r\n                } else {\r\n                    this.isLoading = false;\r\n                }\r\n            });\r\n\r\n        this.actions$\r\n            .pipe(\r\n                ofType(\r\n                    actions.brokersActions.ReqClientBrokerRequests_ClientSuccess,\r\n                    actions.brokersActions.ReqClientBrokerRequests_ClientFail,\r\n                ),\r\n                take(1),\r\n            )\r\n            .subscribe((response) => {\r\n                if (response) {\r\n                    this.dialogRef.close();\r\n                    this.router.navigate([BROKERS_ROUTE]);\r\n                }\r\n                this.isLoading = false;\r\n            });\r\n        this.store.dispatch(\r\n            actions.brokersActions.ReqAcceptRequest_Shared({\r\n                brokerUid: this.data.broker.uid,\r\n                clientUid: this.data.user.uid,\r\n            }),\r\n        );\r\n    }\r\n}\r\n","<div class=\"g-app-dimensions l-container\">\r\n    <img class=\"l-close-icon\" src=\"./assets/icons/close-icon-dark.svg\" alt=\"close\" (click)=\"handleCloseModal()\" />\r\n\r\n    <div *ngIf=\"!requestBroker; else showAcceptTerms\">\r\n        <div *ngIf=\"data.fromBroker; else showClientText\">\r\n            <h1 class=\"g-text-h1-dark mt-5\">Broker Request</h1>\r\n            <p class=\"g-text-p-dark my-2\">This request is awaiting your response.</p>\r\n        </div>\r\n        <ng-template #showClientText>\r\n            <h1 class=\"g-text-h1-dark mt-5\">Pending Request</h1>\r\n            <p class=\"g-text-p-dark my-2\">\r\n                This request is awaiting acceptance from the MX Broker. You may cancel this request before they have\r\n                accepted.\r\n            </p>\r\n        </ng-template>\r\n        <div class=\"l-card-container\">\r\n            <app-broker-info-card [data]=\"data.broker\"></app-broker-info-card>\r\n        </div>\r\n        <div *ngIf=\"data.fromBroker; else clientRequest\">\r\n            <button class=\"g-primary-button\" (click)=\"handleShowTerms()\">Accept Request</button>\r\n            <button class=\"g-secondary-button mt-2\" (click)=\"handleDeleteRequest()\">\r\n                <mat-progress-spinner\r\n                    *ngIf=\"isLoading; else showDeclineText\"\r\n                    class=\"g-mat-progress-spinner-blue mx-auto\"\r\n                    mode=\"indeterminate\"\r\n                    [diameter]=\"30\"\r\n                ></mat-progress-spinner>\r\n                <ng-template #showDeclineText> Decline Request</ng-template>\r\n            </button>\r\n        </div>\r\n        <ng-template #clientRequest>\r\n            <button class=\"g-primary-button\" (click)=\"handleCloseModal()\">Keep Request</button>\r\n            <button class=\"g-secondary-button mt-2\" (click)=\"handleDeleteRequest()\">\r\n                <mat-progress-spinner\r\n                    *ngIf=\"isLoading; else showCancelText\"\r\n                    class=\"g-mat-progress-spinner-blue mx-auto\"\r\n                    mode=\"indeterminate\"\r\n                    [diameter]=\"30\"\r\n                ></mat-progress-spinner>\r\n                <ng-template #showCancelText> Cancel Request</ng-template>\r\n            </button>\r\n        </ng-template>\r\n    </div>\r\n    <ng-template #showAcceptTerms>\r\n        <h1 class=\"g-text-h1-dark mt-5\">T's & C's</h1>\r\n        <p class=\"g-text-p-dark my-2 text-left text-center\">\r\n          A Broker Fee (R3/ton) shall be due and payable on all Matches confirmed on your behalf.\r\n          Where you allow a Broker to negotiate on your behalf, you agree that MatchMX shall not be liable for any\r\n          actions and/or omissions of the Broker during said negotiations.\r\n        </p>\r\n        <h1 class=\"g-text-h1-dark mt-3\">Please Note</h1>\r\n        <p class=\"g-text-p-dark my-2 text-left text-center\">\r\n          You will only be able to appoint 1 Broker. The appointment of a Broker will be for a minimum period of 1 year\r\n          which shall automatically renew, unless either party terminates the appointment.\r\n        </p>\r\n        <div class=\"my-3 ml-1\">\r\n            <mat-checkbox class=\"g-mat-checkbox\" [(ngModel)]=\"termsAccepted\"\r\n                ><p class=\"g-text-p-dark\">I understand and agree to the above</p></mat-checkbox\r\n            >\r\n        </div>\r\n        <button\r\n            class=\"my-2\"\r\n            [ngClass]=\"{\r\n                'g-primary-button': termsAccepted,\r\n                'g-disabled-button': !termsAccepted\r\n            }\"\r\n            [disabled]=\"!termsAccepted\"\r\n            (click)=\"handleAcceptRequest()\"\r\n        >\r\n            <mat-progress-spinner\r\n                *ngIf=\"isLoading; else showAcceptText\"\r\n                class=\"g-mat-progress-spinner-white mx-auto\"\r\n                mode=\"indeterminate\"\r\n                [diameter]=\"30\"\r\n            ></mat-progress-spinner>\r\n            <ng-template #showAcceptText> Accept Request</ng-template>\r\n        </button>\r\n    </ng-template>\r\n</div>\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatLegacyDialogRef as MatDialogRef, MAT_LEGACY_DIALOG_DATA as MAT_DIALOG_DATA } from '@angular/material/legacy-dialog';\r\nimport { Router } from '@angular/router';\r\nimport { REQUESTS_ROUTE } from 'src/app/core/helpers/constants';\r\nimport { Broker, User } from 'src/app/core/models/queryModels';\r\nimport * as actions from 'src/app/core/helpers/index.actions';\r\nimport { Actions, ofType } from '@ngrx/effects';\r\nimport { take } from 'rxjs/operators';\r\nimport { Store } from '@ngrx/store';\r\nimport * as fromBrokers from 'src/app/core/ngrx/brokers/index';\r\n\r\n@Component({\r\n    selector: 'app-request-broker-modal',\r\n    templateUrl: './request-broker-modal.component.html',\r\n    styleUrls: ['./request-broker-modal.component.scss'],\r\n})\r\nexport class RequestBrokerModalComponent implements OnInit {\r\n    isRequestSent: boolean = false;\r\n    isLoading: boolean = false;\r\n    constructor(\r\n        private dialogRef: MatDialogRef<RequestBrokerModalComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: { broker: Broker; user: User },\r\n        private router: Router,\r\n        private actions$: Actions,\r\n        private store: Store,\r\n    ) {}\r\n\r\n    ngOnInit(): void {}\r\n\r\n    handleRequestBroker() {\r\n        this.isLoading = true;\r\n        this.actions$\r\n            .pipe(\r\n                ofType(\r\n                    actions.brokersActions.ReqCreateRequest_SharedSuccess,\r\n                    actions.brokersActions.ReqCreateRequest_SharedFail,\r\n                ),\r\n                take(1),\r\n            )\r\n            .subscribe((response) => {\r\n                if (response) {\r\n                    this.store.dispatch(\r\n                        fromBrokers.brokersActions.ReqClientBrokerRequests_Client({ uid: this.data.user.uid }),\r\n                    );\r\n                    this.store.dispatch(\r\n                        fromBrokers.brokersActions.ReqSendPairingNotification_Shared({\r\n                            fromBroker: false,\r\n                            newRequest: true,\r\n                            brokerUid: this.data.broker.uid,\r\n                            clientUid: this.data.user.uid,\r\n                        }),\r\n                    );\r\n                }\r\n            });\r\n\r\n        this.actions$\r\n            .pipe(\r\n                ofType(\r\n                    actions.brokersActions.ReqClientBrokerRequests_ClientSuccess,\r\n                    actions.brokersActions.ReqClientBrokerRequests_ClientFail,\r\n                ),\r\n                take(1),\r\n            )\r\n            .subscribe((response) => {\r\n                if (response) {\r\n                    this.isRequestSent = true;\r\n                }\r\n                this.isLoading = false;\r\n            });\r\n\r\n        this.store.dispatch(\r\n            actions.brokersActions.ReqCreateRequest_Shared({\r\n                brokerUid: this.data.broker.uid,\r\n                clientUid: this.data.user.uid,\r\n                sentByBroker: false,\r\n            }),\r\n        );\r\n    }\r\n    handleViewBrokerRequest() {\r\n        this.dialogRef.close();\r\n        this.router.navigate([REQUESTS_ROUTE]);\r\n    }\r\n\r\n    handleCloseModal() {\r\n        this.dialogRef.close();\r\n    }\r\n}\r\n","<div class=\"g-app-dimensions l-container\">\r\n    <img class=\"l-close-icon\" src=\"./assets/icons/close-icon-dark.svg\" alt=\"close\" (click)=\"handleCloseModal()\" />\r\n    <div *ngIf=\"!isRequestSent; else showSuccess\">\r\n        <h1 class=\"g-text-h1-dark my-3\">Request Broker?</h1>\r\n        <p class=\"g-text-p-dark\">Do you wish to request this broker?</p>\r\n        <div class=\"l-card-container\">\r\n            <app-broker-info-card [data]=\"data.broker\"></app-broker-info-card>\r\n        </div>\r\n        <button class=\"g-primary-button\" (click)=\"handleRequestBroker()\">\r\n            <div *ngIf=\"isLoading; else showButtonText\">\r\n                <mat-progress-spinner\r\n                    class=\"g-mat-progress-spinner-white mx-auto\"\r\n                    mode=\"indeterminate\"\r\n                    [diameter]=\"30\"\r\n                ></mat-progress-spinner>\r\n            </div>\r\n            <ng-template #showButtonText>Request Broker?</ng-template>\r\n        </button>\r\n    </div>\r\n    <ng-template #showSuccess>\r\n        <h1 class=\"g-text-h1-dark my-3\">Request Sent</h1>\r\n        <p class=\"g-text-p-dark\">Your request has been successfully sent. You can cancel this if need be.</p>\r\n        <button class=\"g-primary-button mt-3\" (click)=\"handleViewBrokerRequest()\">View Broker Request</button>\r\n    </ng-template>\r\n</div>\r\n","import { LOTS_CROP_CATEGORIES_ROUTE } from './../../../../core/helpers/constants';\r\nimport { HOME_ROUTE, PROFILE_ROUTE } from 'src/app/core/helpers/constants';\r\nimport { Router } from '@angular/router';\r\nimport { Client, MarketFilterClass } from './../../../../core/models/queryModels';\r\nimport { Component, EventEmitter, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatLegacyDialog as MatDialog } from '@angular/material/legacy-dialog';\r\nimport { Actions, ofType } from '@ngrx/effects';\r\nimport { Action, select, Store } from '@ngrx/store';\r\nimport { take, takeUntil } from 'rxjs/operators';\r\nimport { MarketFilters, User } from 'src/app/core/models/queryModels';\r\nimport { MarketLotCard } from 'src/app/core/models/viewModels';\r\nimport { FilterTheMarketModalComponent } from './components/filter-the-market-modal/filter-the-market-modal.component';\r\nimport { PremiumFeatureModalComponent } from '../../../premium-feature-modal/premium-feature-modal.component';\r\n\r\nimport * as fromAuth from 'src/app/core/ngrx/authState/index';\r\nimport * as fromMarket from 'src/app/core/ngrx/market/index';\r\nimport { brokersSelectors } from '../../../../core/ngrx/brokers';\r\nimport * as actions from '../../../../core/helpers/index.actions';\r\n\r\n@Component({\r\n    selector: 'app-browse-the-market',\r\n    templateUrl: './browse-the-market.component.html',\r\n    styleUrls: ['./browse-the-market.component.scss'],\r\n})\r\nexport class BrowseTheMarketComponent implements OnInit, OnDestroy {\r\n    user: User = {} as User;\r\n    hasFiltered: boolean = false;\r\n    showFeatureIntroduction: boolean = true;\r\n    userIsVerified: boolean = false;\r\n    subscriptionsAreNotActive: boolean = true;\r\n\r\n    marketLotCards: MarketLotCard[] | null = [];\r\n\r\n    marketFilters: MarketFilters | null = new MarketFilterClass();\r\n\r\n    actionIsLoading: boolean = false;\r\n\r\n    destroyed$: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n    client: Client;\r\n\r\n    constructor(private actions$: Actions, private store: Store, private router: Router, private dialog: MatDialog) {}\r\n\r\n    ngOnInit(): void {\r\n        this.selectClient();\r\n\r\n        this.store\r\n            .pipe(select(fromAuth.authSelectors.getUser), takeUntil(this.destroyed$))\r\n            .subscribe((user: User | undefined) => {\r\n                if (user) {\r\n                    this.user = user;\r\n                    this.showFeatureIntroduction = !user.hasBrowsedMarket;\r\n                    this.userIsVerified = user.verification.id !== 6;\r\n\r\n                    if (this.subscriptionsAreNotActive && this.userIsVerified) {\r\n                        this.actions$\r\n                            .pipe(\r\n                                ofType(\r\n                                    fromMarket.marketActions.ReqMarketLotCards,\r\n                                    fromMarket.marketActions.MarketLotCardsSuccess,\r\n                                    fromMarket.marketActions.MarketLotCardsFail,\r\n                                ),\r\n                                takeUntil(this.destroyed$),\r\n                            )\r\n                            .subscribe((action: Action) => {\r\n                                if (action.type === fromMarket.marketActions.ReqMarketLotCards.type) {\r\n                                    this.actionIsLoading = true;\r\n                                } else {\r\n                                    this.actionIsLoading = false;\r\n                                }\r\n                            });\r\n\r\n                        this.store\r\n                            .pipe(select(fromMarket.marketSelectors.getLotCards), takeUntil(this.destroyed$))\r\n                            .subscribe((marketLotCards: MarketLotCard[] | null) => {\r\n                                if (marketLotCards) {\r\n                                    this.marketLotCards = marketLotCards;\r\n                                }\r\n                            });\r\n\r\n                        this.store\r\n                            .pipe(select(fromMarket.marketSelectors.getCurrentSessionFilters), take(1))\r\n                            .subscribe((marketFilters: MarketFilters | null) => {\r\n                                if (marketFilters) {\r\n                                    this.marketFilters = marketFilters;\r\n                                    this.store.dispatch(fromMarket.marketActions.ReqMarketLotCards({ marketFilters }));\r\n                                }\r\n                            });\r\n\r\n                        this.subscriptionsAreNotActive = false;\r\n                    }\r\n                }\r\n            });\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.destroyed$.next();\r\n    }\r\n\r\n    selectClient(): void {\r\n        this.store\r\n            .select(brokersSelectors.getCurrentClient)\r\n            .pipe(takeUntil(this.destroyed$))\r\n            .subscribe((client) => {\r\n                this.client = client;\r\n            });\r\n    }\r\n\r\n    // #region Handlers\r\n\r\n    handleNavigateToHomePage(): void {\r\n        this.router.navigate([HOME_ROUTE]);\r\n    }\r\n\r\n    handleNavigateToProfile(): void {\r\n        this.router.navigate([PROFILE_ROUTE]);\r\n    }\r\n\r\n    handleNavigateToCreateLot() {\r\n        this.router.navigate([LOTS_CROP_CATEGORIES_ROUTE]);\r\n    }\r\n\r\n    handleOpenFilterTheMarketModal(): void {\r\n        const clientIsVerified = this.client ? this.client.verification.id !== 6 : false;\r\n        if (clientIsVerified || this.userIsVerified) {\r\n            this.hasFiltered = false;\r\n            const dialogRef = this.dialog.open(FilterTheMarketModalComponent, {\r\n                panelClass: 'g-modal-fullwidth-container',\r\n                data: {\r\n                    filters: this.marketFilters,\r\n                },\r\n                autoFocus: false,\r\n            });\r\n\r\n            dialogRef\r\n                .afterClosed()\r\n                .pipe(take(1))\r\n                .subscribe((marketFilters?: MarketFilters) => {\r\n                    if (marketFilters) {\r\n                        this.actionIsLoading = true;\r\n                        this.marketFilters = marketFilters;\r\n                        this.hasFiltered = true;\r\n                        this.store.dispatch(fromMarket.marketActions.ReqMarketLotCards({ marketFilters }));\r\n                        if (this.showFeatureIntroduction) {\r\n                            this.store.dispatch(\r\n                                fromAuth.authActions.ReqUpdateUserDetails({\r\n                                    user: { ...this.user, hasBrowsedMarket: true },\r\n                                    updateSQL: false,\r\n                                }),\r\n                            );\r\n                        }\r\n                    }\r\n                });\r\n        } else {\r\n            this.dialog.open(PremiumFeatureModalComponent, {\r\n                panelClass: 'g-modal-container',\r\n                autoFocus: false,\r\n                data: {\r\n                    featurePhrase: \"Price Discovery at it's best.\",\r\n                    subscribeText: 'Subscribe to MX and access a new world of information to get the right price.',\r\n                },\r\n            });\r\n        }\r\n    }\r\n\r\n    // #endregion\r\n}\r\n","<div class=\"l-container g-fade-in\">\r\n    <!-- #region Header -->\r\n\r\n    <div class=\"l-header\">\r\n        <img\r\n            class=\"l-home-img\"\r\n            src=\"./assets/icons/home-blue-icon.svg\"\r\n            alt=\"Blue bell\"\r\n            (click)=\"handleNavigateToHomePage()\"\r\n        />\r\n        <div class=\"g-logo-header-container\">\r\n            <img\r\n                class=\"g-header-mx-icon\"\r\n                src=\"./assets/icons/MX-small-logo.svg\"\r\n                alt=\"home icon\"\r\n                (click)=\"handleNavigateToHomePage()\"\r\n            />\r\n            <h2 class=\"g-text-h2-dark mb-0\">Browse</h2>\r\n        </div>\r\n        <div class=\"g-profile-icon-container\">\r\n            <img\r\n                class=\"g-profile-icon\"\r\n                src=\"./assets/icons/profile-icon.svg\"\r\n                alt=\"home icon\"\r\n                (click)=\"handleNavigateToProfile()\"\r\n            />\r\n        </div>\r\n    </div>\r\n\r\n    <!-- #endregion -->\r\n    <!-- #region Feature Introduction -->\r\n\r\n    <div *ngIf=\"showFeatureIntroduction; else showBrowseTheMarket\" class=\"l-introduction\">\r\n        <h1 class=\"g-text-h1-dark mb-4\">Welcome to Browse MX</h1>\r\n        <div class=\"l-introduction-points\">\r\n            <div class=\"d-flex mb-3\">\r\n                <img class=\"l-icon\" src=\"./assets/icons/glasses-icon-blue.svg\" alt=\"Blue glasses\" />\r\n                <p class=\"g-text-p-dark text-left\">Browse MX for existing Lots you are interested in.</p>\r\n            </div>\r\n            <div class=\"d-flex mb-3\">\r\n                <img class=\"l-icon\" src=\"./assets/icons/wallet-icon-blue.svg\" alt=\"Blue glasses\" />\r\n                <p class=\"g-text-p-dark text-left\">See what prices sellers are ready to sell their product for.</p>\r\n            </div>\r\n            <div class=\"d-flex mb-4\">\r\n                <img class=\"l-icon\" src=\"./assets/icons/wallet-icon-blue.svg\" alt=\"Blue glasses\" />\r\n                <p class=\"g-text-p-dark text-left\">Or see what price buyers are willing to purchase product for.</p>\r\n            </div>\r\n        </div>\r\n        <button class=\"g-primary-button\" mat-flat-button (click)=\"handleOpenFilterTheMarketModal()\">\r\n            Let's Get Started\r\n        </button>\r\n    </div>\r\n\r\n    <!-- #endregion -->\r\n\r\n    <!-- #region Browse The Market -->\r\n\r\n    <ng-template #showBrowseTheMarket>\r\n        <div class=\"l-content\">\r\n            <!-- #region Filter Header -->\r\n\r\n            <div class=\"l-filter-header\">\r\n                <h2 class=\"g-text-h2-dark l-fw-400 mb-0\">Browse and Filter Lots</h2>\r\n                <button class=\"l-filter-button\" matRipple (click)=\"handleOpenFilterTheMarketModal()\">\r\n                    <img class=\"l-filter-icon\" src=\"./assets/icons/filter-icon-grey.svg\" alt=\"Grey burger menu\" />\r\n                </button>\r\n            </div>\r\n\r\n            <!-- #endregion -->\r\n            <app-dashboard-header\r\n                [activeRoute]=\"'browse'\"\r\n                [showSearchBar]=\"false\"\r\n                [dontShowTabs]=\"true\"\r\n                [dontShowSearchBar]=\"true\"\r\n            ></app-dashboard-header>\r\n            <!-- #region Market Lot Cards -->\r\n\r\n            <div class=\"l-cards-container g-fade-in\">\r\n                <!-- #region Loading Spinner -->\r\n\r\n                <div *ngIf=\"actionIsLoading; else showMarketLotCards\" class=\"l-spinner-container\">\r\n                    <mat-progress-spinner\r\n                        class=\"g-mat-progress-spinner-blue\"\r\n                        mode=\"indeterminate\"\r\n                        [diameter]=\"30\"\r\n                    ></mat-progress-spinner>\r\n                </div>\r\n\r\n                <!-- #endregion -->\r\n                <!-- #region Market Lot Cards -->\r\n\r\n                <ng-template #showMarketLotCards>\r\n                    <!-- #region Cards Returned -->\r\n\r\n                    <ng-container *ngIf=\"marketLotCards.length; else showNoAdvancedFilterModal\">\r\n                        <div *ngFor=\"let marketLotCard of marketLotCards\" class=\"mb-3\">\r\n                            <app-market-lot-card [marketLotCard]=\"marketLotCard\"></app-market-lot-card>\r\n                        </div>\r\n                    </ng-container>\r\n\r\n                    <!-- #endregion -->\r\n\r\n                    <!-- #region No Cards Returned -->\r\n\r\n                    <ng-template #showNoAdvancedFilterModal>\r\n                        <ng-container\r\n                            *ngIf=\"!hasFiltered; else showCreateFirstLotView\"\r\n                            class=\"l-advanced-filter-container\"\r\n                        >\r\n                            <div class=\"l-advanced-filter\">\r\n                                <div class=\"l-advanced-filter-icon-container\">\r\n                                    <img\r\n                                        class=\"l-advanced-filter-icon\"\r\n                                        src=\"./assets/icons/advanced-filter-icon.svg\"\r\n                                        alt=\"Blue circle with grey burger menu inside\"\r\n                                    />\r\n                                </div>\r\n                                <h1 class=\"g-text-h1-dark mb-4\">Advanced Filter</h1>\r\n                                <p class=\"g-text-p-dark mb-4\">Filter crop and location to discover your price.</p>\r\n                                <button\r\n                                    class=\"g-primary-button\"\r\n                                    mat-flat-button\r\n                                    (click)=\"handleOpenFilterTheMarketModal()\"\r\n                                >\r\n                                    Get Started\r\n                                </button>\r\n                            </div>\r\n                        </ng-container>\r\n                        <ng-template #showCreateFirstLotView>\r\n                            <div class=\"l-advanced-filter\">\r\n                                <div class=\"l-advanced-filter-icon-container\">\r\n                                    <img\r\n                                        class=\"l-advanced-filter-icon\"\r\n                                        src=\"./assets/icons/advanced-filter-icon.svg\"\r\n                                        alt=\"Blue circle with grey burger menu inside\"\r\n                                    />\r\n                                </div>\r\n                                <h1 class=\"g-text-h1-dark mb-4\">No Lots Match Your Search Criteria</h1>\r\n                                <p class=\"g-text-p-dark mb-4\">Be the first to create one</p>\r\n                                <button class=\"g-primary-button\" mat-flat-button (click)=\"handleNavigateToCreateLot()\">\r\n                                    Create a Lot\r\n                                </button>\r\n                            </div>\r\n                        </ng-template>\r\n                    </ng-template>\r\n\r\n                    <!-- #endregion -->\r\n                </ng-template>\r\n\r\n                <!-- #endregion -->\r\n            </div>\r\n\r\n            <!-- #endregion -->\r\n        </div>\r\n    </ng-template>\r\n\r\n    <!-- #endregion -->\r\n</div>\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { MatLegacyDialogRef as MatDialogRef, MAT_LEGACY_DIALOG_DATA as MAT_DIALOG_DATA } from '@angular/material/legacy-dialog';\r\n\r\nimport { Actions, ofType } from '@ngrx/effects';\r\nimport { Action, Store } from '@ngrx/store';\r\nimport * as fromScout from 'src/app/core/ngrx/entities/scout/index';\r\nimport { take } from 'rxjs/operators';\r\n\r\nimport { SCOUTS_ROUTE, SCOUT_EDIT_ROUTE } from 'src/app/core/helpers/constants';\r\nimport { Scout } from 'src/app/core/models/queryModels';\r\nimport { MarketLotCard, ScoutCard } from 'src/app/core/models/viewModels';\r\nimport { prepareScoutFromMarketLotCardHelper } from 'src/app/core/helpers/helperFunctions';\r\n\r\nimport { cloneDeep } from 'lodash';\r\n\r\n@Component({\r\n    selector: 'app-duplicate-scout-modal',\r\n    templateUrl: './duplicate-scout-modal.component.html',\r\n    styleUrls: ['./duplicate-scout-modal.component.scss'],\r\n})\r\nexport class DuplicateScoutModalComponent implements OnInit {\r\n    duplicateScoutCard: ScoutCard = null as ScoutCard;\r\n    marketLotCard: MarketLotCard = null as MarketLotCard;\r\n\r\n    actionIsLoading: boolean = false;\r\n\r\n    constructor(\r\n        private dialogRef: MatDialogRef<DuplicateScoutModalComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: { duplicateScoutCard: ScoutCard; marketLotCard: MarketLotCard },\r\n        private router: Router,\r\n        private actions$: Actions,\r\n        private store: Store,\r\n    ) {\r\n        this.duplicateScoutCard = this.data.duplicateScoutCard;\r\n        this.marketLotCard = cloneDeep(this.data.marketLotCard);\r\n    }\r\n\r\n    ngOnInit(): void {}\r\n\r\n    // #region Handlers\r\n\r\n    handleClose(): void {\r\n        this.dialogRef.close();\r\n    }\r\n\r\n    handleRouteToScout(): void {\r\n        this.router.navigate([`${SCOUT_EDIT_ROUTE}/${this.duplicateScoutCard.id}`]);\r\n        this.handleClose();\r\n    }\r\n\r\n    handleCreateScout(): void {\r\n        this.actionIsLoading = true;\r\n\r\n        this.actions$\r\n            .pipe(ofType(fromScout.scoutActions.CreateScoutSuccess, fromScout.scoutActions.CreateScoutFail), take(1))\r\n            .subscribe((action: Action) => {\r\n                if (action.type === fromScout.scoutActions.CreateScoutSuccess.type) {\r\n                    this.router.navigate([SCOUTS_ROUTE]);\r\n                    this.handleClose();\r\n                }\r\n                this.actionIsLoading = false;\r\n            });\r\n\r\n        const scout: Scout = prepareScoutFromMarketLotCardHelper(cloneDeep(this.marketLotCard));\r\n        this.store.dispatch(fromScout.scoutActions.ReqUpdateSearchValues({ scout }));\r\n        this.store.dispatch(fromScout.scoutActions.ReqCreateScout({ isPublic: true }));\r\n    }\r\n\r\n    // #endregion\r\n}\r\n","<div>\r\n    <img\r\n        class=\"l-close-icon\"\r\n        src=\"./assets/icons/close-icon-dark.svg\"\r\n        alt=\"Black cross / close icon.\"\r\n        (click)=\"handleClose()\"\r\n    />\r\n    <div class=\"mb-4\">\r\n        <img class=\"l-scout-icon\" src=\"./assets/icons/scout-icon.svg\" alt=\"Blue cirlce with darker blue bag inside.\" />\r\n    </div>\r\n    <h1 class=\"g-text-h1-dark mb-4\">You Already Have This Scout</h1>\r\n    <p class=\"g-text-p-dark mb-4\">\r\n        You already have an existing scout that matches this criteria. Would you like to create a lot instead?\r\n    </p>\r\n    <div class=\"d-flex\">\r\n        <button class=\"g-secondary-button mr-1\" mat-flat-button (click)=\"handleRouteToScout()\">View Scout</button>\r\n        <button class=\"g-primary-button ml-1\" mat-flat-button (click)=\"handleCreateScout()\">\r\n            <mat-progress-spinner\r\n                *ngIf=\"actionIsLoading; else showButtonText\"\r\n                class=\"g-mat-progress-spinner-white mx-auto\"\r\n                mode=\"indeterminate\"\r\n                [diameter]=\"30\"\r\n            ></mat-progress-spinner>\r\n            <ng-template #showButtonText> Create Scout</ng-template>\r\n        </button>\r\n    </div>\r\n</div>\r\n","import { Component, EventEmitter, Inject, OnInit } from '@angular/core';\r\n\r\nimport { Action, select, Store } from '@ngrx/store';\r\nimport * as fromCrop from 'src/app/core/ngrx/crop/index';\r\nimport { take, takeUntil } from 'rxjs/operators';\r\nimport { Actions, ofType } from '@ngrx/effects';\r\n\r\nimport { MatLegacyDialog as MatDialog, MatLegacyDialogRef as MatDialogRef, MAT_LEGACY_DIALOG_DATA as MAT_DIALOG_DATA } from '@angular/material/legacy-dialog';\r\nimport { LocationModalComponent } from '../location-modal/location-modal.component';\r\n\r\nimport {\r\n    MarketFilters,\r\n    ScoutType,\r\n    IdName,\r\n    Crop,\r\n    GPSCoordinates,\r\n    MarketFilterClass,\r\n} from 'src/app/core/models/queryModels';\r\n\r\nimport { environment } from 'src/environments/environment.prod';\r\nimport { cloneDeep } from 'lodash';\r\n\r\n@Component({\r\n    selector: 'app-filter-the-market-modal',\r\n    templateUrl: './filter-the-market-modal.component.html',\r\n    styleUrls: ['./filter-the-market-modal.component.scss'],\r\n})\r\nexport class FilterTheMarketModalComponent implements OnInit {\r\n    filters: MarketFilters = {} as MarketFilters;\r\n\r\n    crops: Crop[] = [];\r\n    cropCategories: IdName[] = [];\r\n    isLoading: boolean = true;\r\n\r\n    radii: string[] = ['25', '50', '75', '100', 'Over 100'];\r\n    radius: string | null = null;\r\n\r\n    isPeriodValid: boolean = false;\r\n    periodHadBeenEdited: boolean = false;\r\n\r\n    destroyed$: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n    constructor(\r\n        private dialogRef: MatDialogRef<FilterTheMarketModalComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: { filters: MarketFilters },\r\n        private actions$: Actions,\r\n        private store: Store,\r\n        private dialog: MatDialog,\r\n    ) {\r\n        this.filters = cloneDeep(this.data.filters);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.actions$\r\n            .pipe(ofType(fromCrop.cropActions.AllCropsSuccess, fromCrop.cropActions.AllCropsFail), take(1))\r\n            .subscribe((action: Action) => {\r\n                if (action.type === fromCrop.cropActions.AllCropsSuccess.type) {\r\n                    if (this.filters.cropCategory?.id) {\r\n                        this.cropCategoryChangeHelper(this.filters.cropCategory.id);\r\n                    }\r\n                    this.isLoading = false;\r\n                }\r\n            });\r\n\r\n        this.store\r\n            .pipe(select(fromCrop.cropSelectors.selectCropByCategories), takeUntil(this.destroyed$))\r\n            .subscribe((cropCategories) => {\r\n                if (cropCategories.length) {\r\n                    this.cropCategories = cropCategories.filter((cropCategory) =>\r\n                        environment.CROP_CATEGORIES.includes(cropCategory.id),\r\n                    );\r\n                }\r\n            });\r\n        this.store.dispatch(fromCrop.cropActions.ReqCropCategories());\r\n        this.store.dispatch(fromCrop.cropActions.ReqAllCrops());\r\n    }\r\n\r\n    ngOnDestroyed(): void {\r\n        this.destroyed$.next();\r\n    }\r\n\r\n    // #region Handlers\r\n\r\n    handleClose(): void {\r\n        this.dialogRef.close();\r\n    }\r\n\r\n    handleOpenLocationModal(): void {\r\n        const dialogRef = this.dialog.open(LocationModalComponent, {\r\n            panelClass: 'g-modal-fullwidth-container',\r\n            data: {\r\n                town: this.filters.town,\r\n                gpsCoordinates: this.filters.gpsCoordinates,\r\n            },\r\n            autoFocus: false,\r\n        });\r\n\r\n        dialogRef\r\n            .afterClosed()\r\n            .pipe(take(1))\r\n            .subscribe((location?: { town: string; gpsCoordinates: GPSCoordinates }) => {\r\n                if (location) {\r\n                    this.filters.town = location.town;\r\n                    this.filters.gpsCoordinates = location.gpsCoordinates;\r\n                }\r\n            });\r\n    }\r\n\r\n    handleToggleLotType(type: ScoutType) {\r\n        if (this.filters.cardType !== type) {\r\n            this.filters.cardType = type;\r\n        }\r\n    }\r\n\r\n    handleChangeCropCategory(id: number) {\r\n        this.cropCategoryChangeHelper(id);\r\n    }\r\n\r\n    handlePeriodChange() {\r\n        !this.periodHadBeenEdited && (this.periodHadBeenEdited = true);\r\n        this.isPeriodValid = this.isPeriodValidHelper();\r\n    }\r\n\r\n    handleClearFilters(): void {\r\n        this.filters = new MarketFilterClass();\r\n    }\r\n\r\n    handleCloseAndApplyFilters(): void {\r\n        this.dialogRef.close(this.filters);\r\n    }\r\n\r\n    // #endregion\r\n\r\n    // #region Helpers\r\n\r\n    cropCategoryChangeHelper(id: number): void {\r\n        this.store\r\n            .pipe(select(fromCrop.cropSelectors.selectCropByCategoryId, id), take(1))\r\n            .subscribe((crops: Crop[]) => {\r\n                this.crops = crops;\r\n            });\r\n    }\r\n\r\n    isPeriodValidHelper(): boolean {\r\n        return this.filters.dateFrom < this.filters.dateTo && new Date() < this.filters.dateTo;\r\n    }\r\n\r\n    compareSelectionsHelper(selection1: IdName, selection2: IdName): boolean {\r\n        return selection1.id === selection2?.id;\r\n    }\r\n\r\n    filtersExistHelper(): boolean {\r\n        const { town, cropCategory, crop, radius, dateFrom, dateTo } = this.filters;\r\n        return Boolean(town || cropCategory || crop || radius || dateFrom || dateTo);\r\n    }\r\n\r\n    // #endregion\r\n}\r\n","<div class=\"l-container\">\r\n    <!-- #region Header -->\r\n\r\n    <div class=\"l-header\">\r\n        <img\r\n            class=\"l-back-icon\"\r\n            src=\"./assets/icons/back-arrow-icon.svg\"\r\n            alt=\"back-arrow-icon\"\r\n            (click)=\"handleClose()\"\r\n        />\r\n        <p class=\"g-text-h2-dark\">Filter Lots</p>\r\n    </div>\r\n\r\n    <!-- #endregion -->\r\n\r\n    <!-- #region Loading Spinner -->\r\n\r\n    <div *ngIf=\"isLoading; else showForm\" class=\"l-loading-container\">\r\n        <mat-progress-spinner\r\n            class=\"g-mat-progress-spinner-blue\"\r\n            mode=\"indeterminate\"\r\n            [diameter]=\"30\"\r\n        ></mat-progress-spinner>\r\n    </div>\r\n\r\n    <!-- #endregion -->\r\n\r\n    <!-- #region Form -->\r\n\r\n    <ng-template #showForm>\r\n        <form class=\"l-form\">\r\n            <div>\r\n                <!-- #region Type -->\r\n\r\n                <div class=\"d-flex\">\r\n                    <div\r\n                        class=\"l-option mr-2\"\r\n                        [class.l-active-buy]=\"filters.cardType === 'Buy'\"\r\n                        (click)=\"handleToggleLotType('Buy')\"\r\n                    >\r\n                        <p class=\"g-text-p\">Buy</p>\r\n                        <img\r\n                            class=\"l-option-icon\"\r\n                            [src]=\"\r\n                                filters.cardType === 'Buy'\r\n                                    ? './assets/icons/buy-selected-icon.svg'\r\n                                    : './assets/icons/unselected-icon.svg'\r\n                            \"\r\n                            alt=\"White tick with red background or grey circle\"\r\n                        />\r\n                    </div>\r\n                    <div\r\n                        class=\"l-option ml-2\"\r\n                        [class.l-active-sell]=\"filters.cardType === 'Sell'\"\r\n                        (click)=\"handleToggleLotType('Sell')\"\r\n                    >\r\n                        <p class=\"g-text-p\">Sell</p>\r\n                        <img\r\n                            class=\"l-option-icon\"\r\n                            [src]=\"\r\n                                filters.cardType === 'Sell'\r\n                                    ? './assets/icons/sell-selected-icon.svg'\r\n                                    : './assets/icons/unselected-icon.svg'\r\n                            \"\r\n                            alt=\"White tick with green background or grey circle\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <!-- #endregion -->\r\n\r\n                <!-- #region Location Autocomplete Input -->\r\n\r\n                <div class=\"g-text-input-container l-location-input\" (click)=\"handleOpenLocationModal()\">\r\n                    <img class=\"g-input-text-icon\" src=\"./assets/icons/location-icon.svg\" alt=\"Grey location pin\" />\r\n                    <input\r\n                        class=\"g-input-text g-clickable\"\r\n                        type=\"text\"\r\n                        [(ngModel)]=\"filters.town\"\r\n                        name=\"town\"\r\n                        placeholder=\"Location\"\r\n                        readonly\r\n                    />\r\n                </div>\r\n\r\n                <!-- #endregion -->\r\n\r\n                <!-- #region Radius -->\r\n\r\n                <div class=\"mt-4\">\r\n                    <mat-select\r\n                        class=\"g-input-select\"\r\n                        name=\"radius\"\r\n                        placeholder=\"Radius Around Location\"\r\n                        [(ngModel)]=\"filters.radius\"\r\n                    >\r\n                        <mat-option *ngFor=\"let radius of radii\" [value]=\"+radius\">{{ radius }} km</mat-option>\r\n                    </mat-select>\r\n                </div>\r\n\r\n                <!-- #endregion -->\r\n\r\n                <!-- #region Crop Category  -->\r\n\r\n                <div class=\"mt-4\">\r\n                    <mat-select\r\n                        class=\"g-input-select\"\r\n                        [(ngModel)]=\"filters.cropCategory\"\r\n                        name=\"cropCategory\"\r\n                        placeholder=\"Crop Category\"\r\n                        (selectionChange)=\"handleChangeCropCategory($event.value.id)\"\r\n                        [compareWith]=\"compareSelectionsHelper\"\r\n                        required\r\n                    >\r\n                        <mat-option *ngFor=\"let cropCategory of cropCategories\" [value]=\"cropCategory\">{{\r\n                            cropCategory.name\r\n                        }}</mat-option>\r\n                    </mat-select>\r\n                </div>\r\n\r\n                <!-- #endregion -->\r\n\r\n                <!-- #region Crop  -->\r\n\r\n                <div class=\"mt-4\">\r\n                    <mat-select\r\n                        class=\"g-input-select\"\r\n                        [(ngModel)]=\"filters.crop\"\r\n                        name=\"crop\"\r\n                        placeholder=\"Crop\"\r\n                        [compareWith]=\"compareSelectionsHelper\"\r\n                        required\r\n                    >\r\n                        <mat-option *ngFor=\"let crop of crops\" [value]=\"crop\">{{ crop.name }}</mat-option>\r\n                    </mat-select>\r\n                </div>\r\n\r\n                <!-- #endregion -->\r\n\r\n                <!-- #region Period -->\r\n\r\n                <div class=\"mt-4\">\r\n                    <div class=\"d-flex\">\r\n                        <div class=\"g-text-input-container mr-2 g-clickable\" (click)=\"pickerStart.open()\">\r\n                            <img class=\"g-input-text-icon\" src=\"./assets/icons/calendar.svg\" alt=\"Grey calendar\" />\r\n                            <input\r\n                                class=\"g-input-text g-clickable\"\r\n                                [(ngModel)]=\"filters.dateFrom\"\r\n                                name=\"dateFrom\"\r\n                                placeholder=\"Start Date\"\r\n                                (dateChange)=\"handlePeriodChange()\"\r\n                                [matDatepicker]=\"pickerStart\"\r\n                            />\r\n                            <mat-datepicker #pickerStart></mat-datepicker>\r\n                        </div>\r\n\r\n                        <div class=\"g-text-input-container ml-2 g-clickable\" (click)=\"pickerEnd.open()\">\r\n                            <img class=\"g-input-text-icon\" src=\"./assets/icons/calendar.svg\" alt=\"Grey calendar\" />\r\n                            <input\r\n                                class=\"g-input-text g-clickable\"\r\n                                [(ngModel)]=\"filters.dateTo\"\r\n                                name=\"dateTo\"\r\n                                placeholder=\"End Date\"\r\n                                (dateChange)=\"handlePeriodChange()\"\r\n                                [matDatepicker]=\"pickerEnd\"\r\n                            />\r\n                            <mat-datepicker #pickerEnd></mat-datepicker>\r\n                        </div>\r\n                    </div>\r\n                    <mat-error class=\"l-period-error\" *ngIf=\"periodHadBeenEdited && !isPeriodValid\">\r\n                        Invalid Period: Start Date Should Be Before End Date AND End Date Should Be After Today's Date\r\n                    </mat-error>\r\n                </div>\r\n\r\n                <!-- #endregion -->\r\n            </div>\r\n\r\n            <!-- #region Buttons -->\r\n\r\n            <div class=\"mt-4 mb-3\">\r\n                <button\r\n                    *ngIf=\"filtersExistHelper()\"\r\n                    class=\"g-secondary-button mb-3\"\r\n                    mat-flat-button\r\n                    (click)=\"handleClearFilters()\"\r\n                >\r\n                    Clear Filters\r\n                </button>\r\n\r\n                <button class=\"g-primary-button\" mat-flat-button (click)=\"handleCloseAndApplyFilters()\">\r\n                    Apply Filters\r\n                </button>\r\n            </div>\r\n\r\n            <!-- #endregion -->\r\n        </form>\r\n    </ng-template>\r\n\r\n    <!-- #endregion -->\r\n</div>\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatLegacyDialogRef as MatDialogRef, MAT_LEGACY_DIALOG_DATA as MAT_DIALOG_DATA } from '@angular/material/legacy-dialog';\r\nimport { Address } from 'ngx-google-places-autocomplete/objects/address';\r\nimport { GPSCoordinates } from 'src/app/core/models/queryModels';\r\nimport { cloneDeep } from 'lodash';\r\nimport { BehaviorSubject, Observable, catchError, map, of } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Loader } from '@googlemaps/js-api-loader';\r\n\r\n@Component({\r\n    selector: 'app-location-modal',\r\n    templateUrl: './location-modal.component.html',\r\n    styleUrls: ['./location-modal.component.scss'],\r\n})\r\nexport class LocationModalComponent implements OnInit {\r\n    town: string = '';\r\n    gpsCoordinates: GPSCoordinates = {\r\n        lat: -30.5595,\r\n        lng: 22.9375,\r\n    };\r\n\r\n    options: google.maps.places.AutocompleteOptions = {\r\n        types: ['(regions)'],\r\n    };\r\n    zoom: number = 6;\r\n\r\n    locationHasBeenSelected: boolean = false;\r\n\r\n    apiLoaded: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\r\n    constructor(private loader:Loader,\r\n        private dialogRef: MatDialogRef<LocationModalComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: { town: string; gpsCoordinates: GPSCoordinates },\r\n    ) {\r\n        this.town = this.data.town;\r\n        if (this.town) {\r\n            this.locationHasBeenSelected = true;\r\n            this.zoom = 15;\r\n        }\r\n        this.gpsCoordinates = cloneDeep(this.data.gpsCoordinates);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.loader.importLibrary('maps')\r\n        .then(({Map}) => {\r\n          this.apiLoaded?.next(true);\r\n         })\r\n        .catch((e) => {\r\n          // do something\r\n        });\r\n    }\r\n\r\n    // #region Handlers\r\n\r\n    handleClose(): void {\r\n        this.dialogRef.close();\r\n    }\r\n\r\n    handleSelectLocation($event: Address) {\r\n        this.town = $event.formatted_address;\r\n        this.gpsCoordinates.lat = $event.geometry.location.lat();\r\n        this.gpsCoordinates.lng = $event.geometry.location.lng();\r\n        this.zoom = 15;\r\n        this.locationHasBeenSelected = true;\r\n    }\r\n\r\n    handleDragEnd($event) {\r\n        this.gpsCoordinates.lat = $event.latLng.lat();\r\n        this.gpsCoordinates.lng = $event.latLng.lng();\r\n    }\r\n\r\n    handleCloseWithGPSCoordinates(): void {\r\n        this.dialogRef.close({ town: this.town, gpsCoordinates: this.gpsCoordinates });\r\n    }\r\n\r\n    // #endregion\r\n}\r\n","<div class=\"l-container\">\r\n    <!-- #region Header -->\r\n\r\n    <div class=\"l-header\">\r\n        <img\r\n            class=\"l-back-icon\"\r\n            src=\"./assets/icons/back-arrow-icon.svg\"\r\n            alt=\"back-arrow-icon\"\r\n            (click)=\"handleClose()\"\r\n        />\r\n        <div class=\"g-text-input-container l-location-input\">\r\n            <img class=\"g-input-text-icon\" src=\"./assets/icons/location-icon.svg\" alt=\"Grey location pin\" />\r\n            <input\r\n                class=\"g-input-text\"\r\n                type=\"text\"\r\n                [(ngModel)]=\"town\"\r\n                name=\"town\"\r\n                ngx-gp-autocomplete\r\n                [options]=\"options\"\r\n                (onAddressChange)=\"handleSelectLocation($event)\"\r\n                placeholder=\"Location\"\r\n                autocomplete=\"off\"\r\n                required\r\n            />\r\n        </div>\r\n    </div>\r\n\r\n    <!-- #endregion -->\r\n\r\n    <!-- #region Map -->\r\n\r\n    <div *ngIf=\"apiLoaded|async\" class=\"l-map-container\">\r\n        <google-map\r\n            class=\"l-map\"\r\n            [zoom]=\"zoom\"\r\n            [center]=\"{lat:gpsCoordinates.lat, lng:gpsCoordinates.lng}\"\r\n            [options]=\"{mapTypeId:'hybrid',gestureHandling:'cooperative'}\"\r\n        >\r\n            <map-marker\r\n                [position]=\"{lat:gpsCoordinates.lat,lng:gpsCoordinates.lng}\"\r\n                [options]=\"{draggable: false}\"\r\n                (dragend)=\"handleDragEnd($event)\"\r\n            ></map-marker>\r\n        </google-map>\r\n\r\n    </div>\r\n\r\n    <!-- #endregion -->\r\n\r\n    <!-- #region Button -->\r\n\r\n    <div class=\"l-button-container\">\r\n        <button\r\n            class=\"g-primary-button\"\r\n            [class.g-disabled-button]=\"!locationHasBeenSelected || !gpsCoordinates\"\r\n            [disabled]=\"!locationHasBeenSelected || !gpsCoordinates\"\r\n            mat-flat-button\r\n            (click)=\"handleCloseWithGPSCoordinates()\"\r\n        >\r\n            Apply Pin Location\r\n        </button>\r\n    </div>\r\n\r\n    <!-- #endregion -->\r\n</div>\r\n","import { Component, EventEmitter, Input, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { Action, select, Store } from '@ngrx/store';\r\nimport { Actions, ofType } from '@ngrx/effects';\r\nimport * as fromScout from 'src/app/core/ngrx/entities/scout/index';\r\n\r\nimport { take, takeUntil } from 'rxjs/operators';\r\n\r\nimport { DuplicateScoutModalComponent } from '../duplicate-scout-modal/duplicate-scout-modal.component';\r\nimport { MatLegacyDialog as MatDialog } from '@angular/material/legacy-dialog';\r\n\r\nimport { SCOUTS_ROUTE } from 'src/app/core/helpers/constants';\r\nimport { Scout } from 'src/app/core/models/queryModels';\r\nimport { MarketLotCard, ScoutCard } from 'src/app/core/models/viewModels';\r\nimport { prepareScoutFromMarketLotCardHelper } from 'src/app/core/helpers/helperFunctions';\r\n\r\n@Component({\r\n    selector: 'app-market-lot-card',\r\n    templateUrl: './market-lot-card.component.html',\r\n    styleUrls: ['./market-lot-card.component.scss'],\r\n})\r\nexport class MarketLotCardComponent implements OnInit {\r\n    @Input() marketLotCard: MarketLotCard = null as MarketLotCard;\r\n\r\n    isSelling: boolean = true;\r\n    formattedTownName: string = '';\r\n\r\n    actionIsBeingDispatched: boolean = false;\r\n\r\n    constructor(private store: Store, private actions$: Actions, private dialog: MatDialog, private router: Router) {}\r\n\r\n    ngOnInit(): void {\r\n        this.isSelling = this.marketLotCard.lotType === 'Sell';\r\n\r\n        this.formattedTownName =\r\n            this.marketLotCard.town.length > 30\r\n                ? this.formatTextHelper(this.marketLotCard.town, 30)\r\n                : this.marketLotCard.town;\r\n    }\r\n\r\n    // region Handlers\r\n\r\n    handleCreateScout(): void {\r\n        this.actionIsBeingDispatched = true;\r\n\r\n        let scoutCards: ScoutCard[] = [];\r\n        const scoutsHaveBeenRetrieved$: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n        this.store\r\n            .pipe(select(fromScout.scoutSelectors.getAllScoutCards), takeUntil(scoutsHaveBeenRetrieved$))\r\n            .subscribe((existingScoutCards: ScoutCard[]) => {\r\n                scoutCards = existingScoutCards;\r\n            });\r\n\r\n        this.actions$\r\n            .pipe(\r\n                ofType(fromScout.scoutActions.UserScoutCardsSuccess, fromScout.scoutActions.UserScoutCardsFail),\r\n                take(1),\r\n            )\r\n            .subscribe((action: Action) => {\r\n                if (action.type === fromScout.scoutActions.UserScoutCardsSuccess.type) {\r\n                    scoutsHaveBeenRetrieved$.next();\r\n                    const duplicateScoutCard: ScoutCard | null = this.duplicateScoutCardExistsHelper(scoutCards);\r\n\r\n                    if (scoutCards.length && duplicateScoutCard) {\r\n                        this.dialog.open(DuplicateScoutModalComponent, {\r\n                            panelClass: 'g-modal-container',\r\n                            autoFocus: false,\r\n                            data: {\r\n                                duplicateScoutCard,\r\n                                marketLotCard: this.marketLotCard,\r\n                            },\r\n                        });\r\n\r\n                        this.actionIsBeingDispatched = false;\r\n                    } else {\r\n                        this.actions$\r\n                            .pipe(\r\n                                ofType(\r\n                                    fromScout.scoutActions.CreateScoutSuccess,\r\n                                    fromScout.scoutActions.CreateScoutFail,\r\n                                ),\r\n                                take(1),\r\n                            )\r\n                            .subscribe((action: Action) => {\r\n                                if (action.type === fromScout.scoutActions.CreateScoutSuccess.type) {\r\n                                    this.router.navigate([SCOUTS_ROUTE]);\r\n                                }\r\n                                this.actionIsBeingDispatched = false;\r\n                            });\r\n\r\n                        const scout: Scout = prepareScoutFromMarketLotCardHelper(this.marketLotCard);\r\n                        this.store.dispatch(fromScout.scoutActions.ReqUpdateSearchValues({ scout }));\r\n                        this.store.dispatch(fromScout.scoutActions.ReqCreateScout({ isPublic: true }));\r\n                    }\r\n                }\r\n            });\r\n\r\n        this.store.dispatch(fromScout.scoutActions.ReqUserScoutCards());\r\n    }\r\n\r\n    // #endregion\r\n\r\n    // #region Helpers\r\n\r\n    formatTextHelper(text: string, formattedLength: number): string {\r\n        return `${text.slice(0, formattedLength)}...`;\r\n    }\r\n\r\n    duplicateScoutCardExistsHelper(scoutCards: ScoutCard[]): ScoutCard | null {\r\n        const { lotType, crop, town } = this.marketLotCard;\r\n        const duplicateScoutCard: ScoutCard | undefined = scoutCards.find(\r\n            (scoutCard: ScoutCard) =>\r\n                scoutCard.scoutType === lotType && scoutCard.crop.id === crop.id && scoutCard.town === town,\r\n        );\r\n        return duplicateScoutCard || null;\r\n    }\r\n\r\n    // #endregion\r\n}\r\n","<div class=\"l-container\" [ngClass]=\"{ 'g-card-border-sell': isSelling, 'g-card-border-buy': !isSelling }\">\r\n    <!-- #region Banner -->\r\n\r\n    <!-- #region Selling -->\r\n\r\n    <div *ngIf=\"isSelling; else showBuyingBanner\" class=\"l-banner-sell\">\r\n        <h2 class=\"g-text-h2 l-sell-text\">\r\n            <b>{{ marketLotCard.lotType.toLocaleUpperCase() }}</b>\r\n        </h2>\r\n    </div>\r\n\r\n    <!-- #endregion -->\r\n\r\n    <!-- #region Buying -->\r\n\r\n    <ng-template #showBuyingBanner>\r\n        <div class=\"l-banner-buy\">\r\n            <h2 class=\"g-text-h2 l-buy-text\">\r\n                <b>{{ marketLotCard.lotType.toLocaleUpperCase() }}</b>\r\n            </h2>\r\n        </div>\r\n    </ng-template>\r\n\r\n    <!-- #endregion -->\r\n\r\n    <!-- #endregion -->\r\n\r\n    <!-- #region Content (Details) -->\r\n\r\n    <div class=\"p-3\">\r\n        <h2 class=\"g-text-h2-dark text-left\">Anonymous Lot</h2>\r\n\r\n        <!-- #region Delivery Point Name -->\r\n\r\n        <div class=\"l-detail\">\r\n            <img class=\"l-detail-icon\" src=\"./assets/icons/location-icon.svg\" alt=\"delivery-point-icon\" />\r\n            <p class=\"g-text-card-prop text-left\">{{ formattedTownName }}</p>\r\n        </div>\r\n\r\n        <!-- #endregion -->\r\n\r\n        <!-- #region Crop Name -->\r\n\r\n        <div class=\"l-detail\">\r\n            <img class=\"l-detail-icon\" src=\"./assets/icons/crop-icon.svg\" alt=\"crop-icon\" />\r\n            <p class=\"g-text-card-prop\">{{ marketLotCard.crop.name }}</p>\r\n        </div>\r\n\r\n        <!-- #endregion -->\r\n\r\n        <!-- #region Quantity -->\r\n\r\n        <div class=\"l-detail\">\r\n            <img class=\"l-detail-icon\" src=\"./assets/icons/delivery-box.svg\" alt=\"location-icon\" />\r\n            <p class=\"g-text-card-prop\">{{ marketLotCard.quantity }} Tonnes</p>\r\n            <p class=\"g-text-card-prop ml-2\">- R{{ marketLotCard.price }}/{{ marketLotCard.unitOfMeasure }}</p>\r\n        </div>\r\n\r\n        <!-- #endregion -->\r\n\r\n        <!-- #region Period -->\r\n\r\n        <div class=\"l-detail\">\r\n            <img\r\n                class=\"l-detail-icon\"\r\n                [src]=\"marketLotCard.isExpired ? './assets/icons/warning-icon.svg' : './assets/icons/calendar.svg'\"\r\n                alt=\"location-icon\"\r\n            />\r\n            <p class=\"g-text-card-prop\">\r\n                {{ marketLotCard.dateFrom | date: 'd/MM/yy' }} - {{ marketLotCard.dateTo | date: 'd/MM/yy' }}\r\n            </p>\r\n        </div>\r\n\r\n        <!-- #endregion -->\r\n    </div>\r\n\r\n    <!-- #endregion -->\r\n\r\n    <!-- #region Footer -->\r\n\r\n    <div class=\"l-border\">\r\n        <button class=\"l-button\" mat-flat-button (click)=\"handleCreateScout()\">\r\n            <mat-progress-spinner\r\n                *ngIf=\"actionIsBeingDispatched; else showButtonText\"\r\n                class=\"g-mat-progress-spinner-blue mx-auto\"\r\n                mode=\"indeterminate\"\r\n                [diameter]=\"30\"\r\n            ></mat-progress-spinner>\r\n            <ng-template #showButtonText> Create Scout + </ng-template>\r\n        </button>\r\n    </div>\r\n\r\n    <!-- #endregion -->\r\n</div>\r\n","import { PROFILE_ROUTE } from 'src/app/core/helpers/constants';\r\nimport { HOME_ROUTE, STEP_INFO_DATA } from './../../../../core/helpers/constants';\r\nimport { AfterViewInit, Component, EventEmitter, OnDestroy, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Store, select } from '@ngrx/store';\r\nimport * as fromRoot from 'src/app/features/dashboard/dashboard.selectors';\r\nimport * as actions from 'src/app/core/helpers/index.actions';\r\nimport * as snackBarConfigs from 'src/app/core/helpers/snackbar';\r\nimport * as fromAgents from 'src/app/core/ngrx/brokers/index';\r\nimport { take, takeUntil } from 'rxjs/operators';\r\nimport { Toggle, NegotiationCard, Notification } from 'src/app/core/models/viewModels';\r\nimport { Actions, ofType } from '@ngrx/effects';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { StepInfoModalComponent } from 'src/app/features/shared/components/step-info-modal/step-info-modal.component';\r\nimport { MatLegacyDialog as MatDialog } from '@angular/material/legacy-dialog';\r\nimport { brokersSelectors } from '../../../../core/ngrx/brokers';\r\nimport { Client } from '../../../../core/models/queryModels';\r\nimport { getAllLotMatchIdsFromNegotiationCards } from '../../../../core/helpers/brokerHelperFunctions';\r\nimport { brokersActions } from 'src/app/core/helpers/index.actions';\r\nimport { NegotiationUpdateModalComponent } from '../../../negotiations/components/negotiation-update-modal/negotiation-update-modal.component';\r\n\r\n@Component({\r\n    selector: 'app-completed',\r\n    templateUrl: './completed.component.html',\r\n    styleUrls: ['./completed.component.scss'],\r\n})\r\nexport class CompletedComponent implements OnInit, OnDestroy {\r\n    completedToggles: Toggle[] = ['All', 'Sold', 'Bought'];\r\n    toggleIndex: number = 0;\r\n\r\n    completedCards: NegotiationCard[];\r\n    filteredCompletedCards: NegotiationCard[];\r\n\r\n    searchInput: string;\r\n\r\n    notifications: Notification[] = [];\r\n    notificationLotIds: number[] = [];\r\n\r\n    isLoading: boolean = true;\r\n\r\n    animateIn: boolean = false;\r\n\r\n    hasActiveBroker: boolean = false;\r\n\r\n    client: Client;\r\n\r\n    destroyed$: EventEmitter<void> = new EventEmitter<void>();\r\n    fromSuccess = false;\r\n\r\n    constructor(\r\n        private route: ActivatedRoute,\r\n        private router: Router,\r\n        private store: Store<fromRoot.State>,\r\n        private actions$: Actions,\r\n        private snackbar: MatSnackBar,\r\n        private dialog: MatDialog,\r\n    ) {}\r\n\r\n    // #region Life Cycle\r\n    ngOnInit(): void {\r\n        this.selectClient();\r\n\r\n        this.store\r\n            .pipe(select(fromAgents.brokersSelectors.getFilteredBrokers), takeUntil(this.destroyed$))\r\n            .subscribe((response) => {\r\n                if (response?.activeBroker) {\r\n                    this.hasActiveBroker = response.activeBroker ? true : false;\r\n                }\r\n            });\r\n\r\n        this.actions$\r\n            .pipe(\r\n                ofType(\r\n                    actions.negotiationActions.UserNegotiationCardsFail,\r\n                    actions.negotiationActions.UserNegotiationCardsSuccess,\r\n                ),\r\n            )\r\n            .subscribe((action) => {\r\n                if (action.type === actions.negotiationActions.UserNegotiationCardsSuccess.type) {\r\n                    this.isLoading = false;\r\n                } else {\r\n                    this.snackbar.open(\r\n                        'An error occurred when trying to retrieve your negotiations. Please reload the page.',\r\n                        'CLOSE',\r\n                        snackBarConfigs.errorConfig,\r\n                    );\r\n                }\r\n            });\r\n\r\n        this.route.queryParams.pipe(take(1)).subscribe((params) => {\r\n            if (Object.keys(params).length > 0) {\r\n                if (params.toggleIndex) {\r\n                    this.toggleIndex = +params.toggleIndex;\r\n                }\r\n                if (params.searchInput) {\r\n                    this.searchInput = params.searchInput;\r\n                }\r\n                if (params.fromSuccess === 'true') {\r\n                    this.fromSuccess = true;\r\n                }\r\n            }\r\n        });\r\n\r\n        this.store\r\n            .pipe(select(fromRoot.negotiationSelector.getAllOrderedNegotiationCards), takeUntil(this.destroyed$))\r\n            .subscribe((negotiationCards: NegotiationCard[]) => {\r\n                this.completedCards = negotiationCards.filter((negotiationCard) => negotiationCard.isCompleted);\r\n                this.filteredCompletedCards = this.completedCards;\r\n                this.filterAccordingToToggleHelper();\r\n                this.fetchBrokerNegotiationDocuments();\r\n                if (this.searchInput) {\r\n                    this.filterAccordingToSearchInputHelper();\r\n                }\r\n            });\r\n\r\n        this.store\r\n            .pipe(\r\n                select(fromRoot.notificationSelectors.getCompletedNegotiationNotifications),\r\n                takeUntil(this.destroyed$),\r\n            )\r\n            .subscribe((notifications) => {\r\n                this.notifications = notifications;\r\n                if (this.notifications.length) {\r\n                    setTimeout(() => {\r\n                        const toggleForAgent = this.client ? true : false;\r\n                        this.store.dispatch(\r\n                            actions.notificationActions.ReqToggleNotificationStatus({\r\n                                notificationUids: this.notifications.map((notification) => notification.uid),\r\n                                toggleForAgent,\r\n                            }),\r\n                        );\r\n                    }, 3000);\r\n                }\r\n                this.notificationLotIds = this.notifications.length\r\n                    ? this.notifications.map((notification) => notification.lotId)\r\n                    : [];\r\n            });\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.destroyed$.next();\r\n    }\r\n\r\n    //#endregion\r\n\r\n    fetchBrokerNegotiationDocuments(): void {\r\n        let lotMatchIds: number[] = [];\r\n\r\n        if (this.filteredCompletedCards.length) {\r\n            lotMatchIds = getAllLotMatchIdsFromNegotiationCards(this.filteredCompletedCards);\r\n\r\n            if (lotMatchIds.length > 10) {\r\n                const chuckSize = 10;\r\n                for (let i = 0; i < lotMatchIds.length; i += chuckSize) {\r\n                    const smallerLotMatchIdsArray: number[] = lotMatchIds.slice(i, i + chuckSize);\r\n                    this.store.dispatch(\r\n                        brokersActions.ReqGetBrokerNegotiationDocuments({ lotMatchIds: smallerLotMatchIdsArray }),\r\n                    );\r\n                }\r\n            } else {\r\n                this.store.dispatch(brokersActions.ReqGetBrokerNegotiationDocuments({ lotMatchIds }));\r\n            }\r\n        }\r\n    }\r\n\r\n    selectClient(): void {\r\n        this.store\r\n            .select(brokersSelectors.getCurrentClient)\r\n            .pipe(takeUntil(this.destroyed$))\r\n            .subscribe((client) => {\r\n                if (client) {\r\n                    this.client = client;\r\n                    this.store.dispatch(actions.negotiationActions.ReqUserNegotiationCards({ clientUid: client.uid }));\r\n                } else {\r\n                    this.store.dispatch(actions.negotiationActions.ReqUserNegotiationCards({}));\r\n                }\r\n            });\r\n    }\r\n\r\n    // #region Event Handlers\r\n\r\n    handleToggleChange(newToggleIndex: 0 | 1 | 2) {\r\n        this.toggleIndex = newToggleIndex;\r\n        if (this.searchInput) {\r\n            this.filterAccordingToSearchInputHelper();\r\n        } else {\r\n            this.filterAccordingToToggleHelper();\r\n        }\r\n        this.updateQueryParamsHelper();\r\n    }\r\n\r\n    handleSearchInput(input: string) {\r\n        this.searchInput = input;\r\n        if (this.searchInput || this.searchInput === '') {\r\n            this.filterAccordingToSearchInputHelper();\r\n        } else {\r\n            this.resetSearchInputFilterHelper();\r\n        }\r\n        this.updateQueryParamsHelper();\r\n    }\r\n\r\n    handleNavigateToHomePage() {\r\n        this.router.navigate([HOME_ROUTE]);\r\n    }\r\n\r\n    handleNavigateToProfile(): void {\r\n        this.router.navigate([PROFILE_ROUTE]);\r\n    }\r\n\r\n    handleGetNotification(id: number) {\r\n        return this.notifications.filter((notification) => notification.lotId === id);\r\n    }\r\n\r\n    handleInfoModal() {\r\n        this.dialog.open(StepInfoModalComponent, {\r\n            panelClass: 'g-modal-container',\r\n            data: {\r\n                stepInfo: STEP_INFO_DATA['Matches'],\r\n            },\r\n        });\r\n    }\r\n\r\n    // #endregion\r\n\r\n    // #region Helper Methods/Functions\r\n    updateQueryParamsHelper() {\r\n        let queryParams = this.searchInput\r\n            ? { toggleIndex: this.toggleIndex, searchInput: this.searchInput }\r\n            : { toggleIndex: this.toggleIndex };\r\n        this.router.navigate([], {\r\n            relativeTo: this.route,\r\n            queryParams,\r\n            replaceUrl: true,\r\n        });\r\n    }\r\n\r\n    filterAccordingToToggleHelper() {\r\n        let referenceToggles: Toggle[] = ['All', 'Sell', 'Buy'];\r\n        this.toggleIndex\r\n            ? (this.filteredCompletedCards = this.completedCards.filter(\r\n                  (completedCard) => completedCard.lotType === referenceToggles[this.toggleIndex],\r\n              ))\r\n            : (this.filteredCompletedCards = this.completedCards);\r\n\r\n        this.animateInHelper();\r\n    }\r\n\r\n    filterAccordingToSearchInputHelper() {\r\n        this.filterAccordingToToggleHelper();\r\n        this.filteredCompletedCards = this.filteredCompletedCards.filter((cards) => {\r\n            return cards.lotName.toLocaleLowerCase().includes(this.searchInput.toLocaleLowerCase());\r\n        });\r\n    }\r\n\r\n    resetSearchInputFilterHelper() {\r\n        this.filteredCompletedCards = this.completedCards;\r\n        this.filterAccordingToToggleHelper();\r\n    }\r\n\r\n    animateInHelper() {\r\n        this.animateIn = true;\r\n        setTimeout(() => {\r\n            this.animateIn = false;\r\n        }, 300);\r\n    }\r\n\r\n    // #endregion\r\n}\r\n","<div class=\"l-container\">\r\n    <!-- #region Header -->\r\n\r\n    <div class=\"l-header\">\r\n        <img\r\n            class=\"l-home-img\"\r\n            src=\"./assets/icons/home-blue-icon.svg\"\r\n            alt=\"Blue bell\"\r\n            (click)=\"handleNavigateToHomePage()\"\r\n        />\r\n        <div class=\"g-logo-header-container\">\r\n            <img\r\n                class=\"g-header-mx-icon\"\r\n                src=\"./assets/icons/MX-small-logo.svg\"\r\n                alt=\"home icon\"\r\n                (click)=\"handleNavigateToHomePage()\"\r\n            />\r\n            <h2 class=\"g-text-h2-dark mb-0\">Completed Negotiations</h2>\r\n        </div>\r\n        <div class=\"g-profile-icon-container\">\r\n            <img\r\n                class=\"g-profile-icon\"\r\n                src=\"./assets/icons/profile-icon.svg\"\r\n                alt=\"home icon\"\r\n                (click)=\"handleNavigateToProfile()\"\r\n            />\r\n        </div>\r\n    </div>\r\n\r\n    <!-- #endregion -->\r\n\r\n    <!-- #region Loading Spinner -->\r\n\r\n    <div *ngIf=\"isLoading; else completedLoaded\" class=\"l-spinner-holder\">\r\n        <mat-progress-spinner\r\n            class=\"g-mat-progress-spinner\"\r\n            mode=\"indeterminate\"\r\n            [diameter]=\"40\"\r\n        ></mat-progress-spinner>\r\n    </div>\r\n\r\n    <!-- #endregion -->\r\n\r\n    <!-- #region Completed Content -->\r\n\r\n    <ng-template #completedLoaded>\r\n        <div *ngIf=\"completedCards && completedCards.length; else noCompletedCards\" class=\"l-content-container\">\r\n            <!-- #region Tab Header -->\r\n\r\n            <app-dashboard-header\r\n                [activeRoute]=\"'completed'\"\r\n                [toggleIndex]=\"toggleIndex\"\r\n                [toggles]=\"completedToggles\"\r\n                [showSearchBar]=\"searchInput || searchInput === ''\"\r\n                ($changeToggleEvent)=\"handleToggleChange($event)\"\r\n                ($searchInputEvent)=\"handleSearchInput($event)\"\r\n            ></app-dashboard-header>\r\n\r\n            <!-- #endregion -->\r\n\r\n            <!-- #region Negotiating Room Cards -->\r\n\r\n            <div\r\n                *ngFor=\"let completedCard of filteredCompletedCards\"\r\n                class=\"l-card-container\"\r\n                [class.g-fade-in]=\"animateIn\"\r\n            >\r\n                <app-negotiation-card\r\n                    *ngIf=\"!notificationLotIds.includes(completedCard.id); else cardHasNotification\"\r\n                    [negotiationCard]=\"completedCard\"\r\n                    [hasActiveAgent]=\"hasActiveBroker\"\r\n                ></app-negotiation-card>\r\n                <ng-template #cardHasNotification>\r\n                    <app-negotiation-card\r\n                        [negotiationCard]=\"completedCard\"\r\n                        [notifications]=\"handleGetNotification(completedCard.id)\"\r\n                        [hasActiveAgent]=\"hasActiveBroker\"\r\n                    ></app-negotiation-card>\r\n                </ng-template>\r\n            </div>\r\n\r\n            <!-- #endregion -->\r\n        </div>\r\n\r\n        <ng-template #noCompletedCards>\r\n            <div class=\"l-no-content-container\">\r\n                <h1 class=\"g-text-h2-dark mx-2 mb-3\">You currently have no completed deals...</h1>\r\n                <p class=\"g-text-p-dark mx-5\">Create a Lot, negotiate and get a Match!</p>\r\n            </div>\r\n        </ng-template>\r\n    </ng-template>\r\n\r\n    <!-- #endregion -->\r\n</div>\r\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { MatLegacyDialog as MatDialog } from '@angular/material/legacy-dialog';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { take } from 'rxjs/operators';\r\nimport { STEP_INFO_DATA } from 'src/app/core/helpers/constants';\r\nimport { Toggle } from 'src/app/core/models/viewModels';\r\nimport { StepInfoModalComponent } from 'src/app/features/shared/components/step-info-modal/step-info-modal.component';\r\n\r\n@Component({\r\n    selector: 'app-dashboard-header',\r\n    templateUrl: './dashboard-header.component.html',\r\n    styleUrls: ['./dashboard-header.component.scss'],\r\n})\r\nexport class DashboardHeaderComponent implements OnInit {\r\n    @Input() activeRoute: string;\r\n    @Input() toggleIndex: number;\r\n    @Input() toggles: Toggle[];\r\n    @Input() showSearchBar: boolean;\r\n    @Input() dontShowTabs: boolean;\r\n    @Input() dontShowSearchBar: boolean;\r\n\r\n    @Output() $changeToggleEvent: EventEmitter<number> = new EventEmitter();\r\n    @Output() $searchInputEvent: EventEmitter<string> = new EventEmitter();\r\n    @Output() $createEvent: EventEmitter<void> = new EventEmitter();\r\n\r\n    searchInput: string;\r\n    infoText: string = '';\r\n\r\n    isScoutOrLot: boolean = true;\r\n    isScout: boolean = true;\r\n\r\n    constructor(private route: ActivatedRoute, private dialog: MatDialog) {}\r\n\r\n    ngOnInit(): void {\r\n        if (this.activeRoute !== 'scouts') {\r\n            this.isScout = false;\r\n            if (this.activeRoute !== 'lots') {\r\n                this.isScoutOrLot = false;\r\n            }\r\n        }\r\n        this.infoText = STEP_INFO_DATA[this.activeRoute].tooltip;\r\n\r\n        if (this.showSearchBar) {\r\n            this.route.queryParams.pipe(take(1)).subscribe((params) => {\r\n                if (Object.keys(params).length > 0) {\r\n                    if (params.searchInput) {\r\n                        this.searchInput = params.searchInput;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    handleChangeToggle(newToggle) {\r\n        if (this.toggleIndex !== newToggle) {\r\n            this.$changeToggleEvent.emit(newToggle);\r\n        }\r\n    }\r\n\r\n    handleCreate() {\r\n        this.$createEvent.emit();\r\n    }\r\n\r\n    handleToggleSearchBar() {\r\n        this.searchInput = this.showSearchBar ? null : '';\r\n        this.handleSearchInput();\r\n    }\r\n\r\n    handleSearchInput() {\r\n        this.$searchInputEvent.emit(this.searchInput);\r\n    }\r\n\r\n    handleInfoModal(): void {\r\n        this.dialog.open(StepInfoModalComponent, {\r\n            panelClass: 'g-modal-container',\r\n            data: {\r\n                stepInfo: STEP_INFO_DATA[this.activeRoute],\r\n            },\r\n        });\r\n    }\r\n}\r\n","<div class=\"l-container\">\r\n    <div class=\"l-search-container\" *ngIf=\"dontShowSearchBar === undefined\">\r\n        <div class=\"g-text-input-container\">\r\n            <img class=\"g-input-text-icon\" src=\"./assets/icons/search-grey-icon.svg\" alt=\"search-icon\" />\r\n            <input\r\n                class=\"g-input-text\"\r\n                [(ngModel)]=\"searchInput\"\r\n                (ngModelChange)=\"handleSearchInput()\"\r\n                name=\"search\"\r\n                type=\"text\"\r\n                [placeholder]=\"\r\n                    activeRoute === 'scouts' ? 'Search crop or location...' : 'Search Lot name, crop, or location...'\r\n                \"\r\n            />\r\n        </div>\r\n    </div>\r\n\r\n    <!-- #region All / Selling / Buying Toggle -->\r\n\r\n    <mat-tab-group\r\n        *ngIf=\"dontShowTabs === undefined\"\r\n        class=\"g-mat-tabs-dashboard\"\r\n        (selectedTabChange)=\"handleChangeToggle($event.index)\"\r\n        mat-align-tabs=\"center\"\r\n    >\r\n        <mat-tab label=\"All\"></mat-tab>\r\n        <mat-tab label=\"Selling\"></mat-tab>\r\n        <mat-tab label=\"Buying\"></mat-tab>\r\n    </mat-tab-group>\r\n\r\n    <!-- #endregion -->\r\n\r\n    <!-- #region Buttons -->\r\n\r\n    <div class=\"l-content\">\r\n        <button class=\"g-primary-button mt-3\" *ngIf=\"isScoutOrLot\" (click)=\"handleCreate()\">\r\n            <h2 class=\"g-text-h2\">{{ isScout ? 'CREATE NEW SCOUT' : 'CREATE NEW LOT' }}</h2>\r\n        </button>\r\n        <div class=\"l-info\" (click)=\"handleInfoModal()\">\r\n            <img class=\"l-info-icon-img\" src=\"./assets/icons/info-icon-blue.svg\" alt=\"info-icon\" />\r\n            <p class=\"g-text-p-small-dark pl-2\">\r\n                {{ infoText }}\r\n            </p>\r\n        </div>\r\n\r\n        <!-- #endregion -->\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatLegacyDialogRef as MatDialogRef } from '@angular/material/legacy-dialog';\r\n\r\n@Component({\r\n    selector: 'app-delete-account-modal',\r\n    templateUrl: './delete-account-modal.component.html',\r\n    styleUrls: ['./delete-account-modal.component.scss'],\r\n})\r\nexport class DeleteAccountModalComponent implements OnInit {\r\n    constructor(private dialogRef: MatDialogRef<DeleteAccountModalComponent>) {}\r\n\r\n    ngOnInit(): void {}\r\n\r\n    handleClose(): void {\r\n        this.dialogRef.close(false);\r\n    }\r\n\r\n    handleDelete(): void {\r\n        this.dialogRef.close(true);\r\n    }\r\n}\r\n","<div class=\"l-container\">\r\n    <!-- #region Header -->\r\n\r\n    <div class=\"l-header\">\r\n        <img class=\"l-close-icon\" src=\"./assets/icons/close-icon-dark.svg\" alt=\"close\" (click)=\"handleClose()\" />\r\n        <h2 class=\"g-text-h2\">\r\n            <b>Delete Account Request</b>\r\n        </h2>\r\n    </div>\r\n\r\n    <!-- #endregion -->\r\n\r\n    <!-- #region Modal Content -->\r\n\r\n    <div class=\"l-content\">\r\n        Click \"Delete\" to request the removal of your account and associated data. An MX representative will reach out\r\n        to confirm this, and your account will be deleted within 5 working days. If you are subscribed, your\r\n        subscription will end at the end of the current payment period.\r\n    </div>\r\n\r\n    <!-- #endregion -->\r\n\r\n    <!-- #region Buttons -->\r\n\r\n    <div class=\"l-buttons-container\">\r\n        <button class=\"g-secondary-button mb-2\" (click)=\"handleDelete()\">Delete</button>\r\n        <button class=\"g-primary-button\" mat-flat-button (click)=\"handleClose()\">Cancel</button>\r\n    </div>\r\n\r\n    <!-- #endregion -->\r\n</div>\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatLegacyDialogRef as MatDialogRef, MAT_LEGACY_DIALOG_DATA as MAT_DIALOG_DATA } from '@angular/material/legacy-dialog';\r\n\r\n@Component({\r\n    selector: 'app-expired-lot-period-modal',\r\n    templateUrl: './expired-lot-period-modal.component.html',\r\n    styleUrls: ['./expired-lot-period-modal.component.scss'],\r\n})\r\nexport class ExpiredLotPeriodModalComponent implements OnInit {\r\n    dateFrom: string = '';\r\n    dateTo: string = '';\r\n\r\n    constructor(\r\n        private dialogRef: MatDialogRef<ExpiredLotPeriodModalComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: { dateFrom: string; dateTo: string },\r\n    ) {\r\n        this.dateFrom = this.data.dateFrom;\r\n        this.dateTo = this.data.dateTo;\r\n    }\r\n\r\n    ngOnInit(): void {}\r\n\r\n    handleClose(): void {\r\n        this.dialogRef.close();\r\n    }\r\n\r\n    handleCloseWithAction(action: 'edit' | 'view'): void {\r\n        this.dialogRef.close(action);\r\n    }\r\n}\r\n","<div class=\"l-container\">\r\n    <!-- #region Header -->\r\n\r\n    <div class=\"l-header\">\r\n        <img class=\"l-close-icon\" src=\"./assets/icons/close-icon-dark.svg\" alt=\"close\" (click)=\"handleClose()\" />\r\n        <h2 class=\"g-text-h2\">\r\n            <b>Expired Lot Period</b>\r\n        </h2>\r\n    </div>\r\n\r\n    <!-- #endregion -->\r\n\r\n    <!-- #region Modal Content -->\r\n\r\n    <div class=\"l-content\">\r\n        <p>The period: {{ dateFrom | date: 'd/MM/yy' }} - {{ dateTo | date: 'd/MM/yy' }}, is no longer valid.</p>\r\n    </div>\r\n\r\n    <!-- #endregion -->\r\n\r\n    <!-- #region Buttons -->\r\n\r\n    <div class=\"l-buttons-container\">\r\n        <button class=\"g-secondary-button mb-2\" (click)=\"handleCloseWithAction('view')\">View Matches</button>\r\n        <button class=\"g-primary-button\" mat-flat-button (click)=\"handleCloseWithAction('edit')\">Update Lot</button>\r\n    </div>\r\n\r\n    <!-- #endregion -->\r\n</div>\r\n","import { DateRange } from '../../../../core/models/queryModels';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { MatLegacyDialogRef as MatDialogRef } from '@angular/material/legacy-dialog';\r\n\r\n@Component({\r\n    selector: 'app-lots-analytics-modal',\r\n    templateUrl: './lots-analytics-modal.component.html',\r\n    styleUrls: ['./lots-analytics-modal.component.scss'],\r\n})\r\nexport class LotsAnalyticsModalComponent implements OnInit {\r\n    lowerBound: Date;\r\n    upperBound: Date;\r\n\r\n    constructor(private dialogRef: MatDialogRef<LotsAnalyticsModalComponent>) {}\r\n\r\n    ngOnInit(): void {}\r\n\r\n    handleCloseModal() {\r\n        const dateRange: DateRange = { lowerBound: this.lowerBound, upperBound: this.upperBound };\r\n        this.dialogRef.close(dateRange);\r\n    }\r\n}\r\n","<div class=\"l-container\">\r\n    <!-- #region Modal Header -->\r\n\r\n    <div class=\"l-header\">\r\n        <img class=\"l-close-icon\" src=\"./assets/icons/close-icon-dark.svg\" alt=\"close\" (click)=\"handleCloseModal()\" />\r\n        <h2 class=\"g-text-h2-dark\">\r\n            <b>Get Lots In Date Range</b>\r\n        </h2>\r\n    </div>\r\n\r\n    <!-- #endregion -->\r\n\r\n    <!-- #region Modal Content -->\r\n\r\n    <div class=\"l-content\">\r\n        <div class=\"g-text-input-container\" (click)=\"picker.open()\">\r\n            <img class=\"g-input-text-icon\" src=\"./assets/icons/calendar.svg\" alt=\"\" />\r\n\r\n            <mat-date-range-input [rangePicker]=\"picker\" class=\"g-mat-datepicker g-input-text l-alter-width-mat-fields\">\r\n                <input matStartDate [(ngModel)]=\"lowerBound\" name=\"lowerBound\" />\r\n                <input matEndDate [(ngModel)]=\"upperBound\" name=\"upperBound\" required />\r\n            </mat-date-range-input>\r\n            <mat-date-range-picker #picker></mat-date-range-picker>\r\n        </div>\r\n    </div>\r\n\r\n    <!-- #endregion -->\r\n\r\n    <!-- #region Buttons -->\r\n\r\n    <button class=\"g-primary-button\" (click)=\"handleCloseModal()\">Get Lots</button>\r\n\r\n    <!-- #endregion -->\r\n</div>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Store } from '@ngrx/store';\r\nimport { LotCard } from 'src/app/core/models/viewModels';\r\nimport * as fromDashboard from 'src/app/features/dashboard/dashboard.selectors';\r\nimport * as actions from 'src/app/core/helpers/index.actions';\r\nimport { LOTS_EDIT_ROUTE, LOTS_MATCH_ROUTE } from './../../../../core/helpers/constants';\r\nimport { MatLegacyDialog as MatDialog } from '@angular/material/legacy-dialog';\r\nimport { ExpiredLotPeriodModalComponent } from '../expired-lot-period-modal/expired-lot-period-modal.component';\r\nimport { take } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector: 'app-lot-card',\r\n    templateUrl: './lot-card.component.html',\r\n    styleUrls: ['./lot-card.component.scss'],\r\n})\r\nexport class LotCardComponent implements OnInit {\r\n    @Input() get lotCard(): LotCard {\r\n        return this._lotCard;\r\n    }\r\n    set lotCard(value: LotCard) {\r\n        this._lotCard = value;\r\n        if (this._lotCard.lotType === 'Buy') {\r\n            this.isBuyer = true;\r\n        }\r\n        this.usableLotName =\r\n            this._lotCard.lotName.length > 24\r\n                ? this.formatTextHelper(this._lotCard.lotName, 24)\r\n                : this._lotCard.lotName;\r\n        this.usableLotDeliveryPointName =\r\n            this._lotCard.deliveryPointName.length > 30\r\n                ? this.formatTextHelper(this._lotCard.deliveryPointName, 30)\r\n                : this._lotCard.deliveryPointName;\r\n    }\r\n    _lotCard: LotCard = {} as LotCard;\r\n\r\n    usableLotName: string = '';\r\n    usableLotDeliveryPointName: string = '';\r\n\r\n    isBuyer: boolean = false;\r\n\r\n    constructor(private router: Router, private store: Store<fromDashboard.State>, private dialog: MatDialog) {}\r\n\r\n    ngOnInit(): void {}\r\n\r\n    handleCardClick(intendedAction: 'edit' | 'view'): void {\r\n        this._lotCard.isExpired ? this.openExpiredLotPeriodDialogHelper() : this[`${intendedAction}LotHelper`]();\r\n    }\r\n\r\n    editLotHelper(): void {\r\n        this.store.dispatch(actions.lotActions.ReqSaveLotFormData({ lot: null }));\r\n        this.router.navigate([`${LOTS_EDIT_ROUTE}/${this._lotCard.id}`]);\r\n    }\r\n\r\n    viewLotHelper(): void {\r\n        const queryParams = this.isBuyer ? { isBuyer: true, radius: this._lotCard.radius } : {};\r\n        this.router.navigate([`${LOTS_MATCH_ROUTE}/${this._lotCard.id}`], { queryParams: queryParams });\r\n    }\r\n\r\n    openExpiredLotPeriodDialogHelper(): void {\r\n        const dialogRef = this.dialog.open(ExpiredLotPeriodModalComponent, {\r\n            panelClass: 'g-modal-container',\r\n            data: {\r\n                dateFrom: this._lotCard.dateFrom,\r\n                dateTo: this._lotCard.dateTo,\r\n            },\r\n        });\r\n        dialogRef\r\n            .afterClosed()\r\n            .pipe(take(1))\r\n            .subscribe((action) => {\r\n                action && this[`${action}LotHelper`]();\r\n            });\r\n    }\r\n\r\n    formatTextHelper(text: string, formattedLength: number): string {\r\n        return `${text.slice(0, formattedLength)}...`;\r\n    }\r\n}\r\n","<div\r\n    class=\"l-container\"\r\n    [ngClass]=\"{ 'g-card-border-sell': _lotCard.lotType === 'Sell', 'g-card-border-buy': _lotCard.lotType === 'Buy' }\"\r\n>\r\n    <!-- #region Header -->\r\n\r\n    <div\r\n        class=\"l-header\"\r\n        [ngClass]=\"{ 'l-banner-sell': _lotCard.lotType === 'Sell', 'l-banner-buy': _lotCard.lotType === 'Buy' }\"\r\n    >\r\n        <h2\r\n            [ngClass]=\"{ 'l-sell-text': _lotCard.lotType === 'Sell', 'l-buy-text': _lotCard.lotType === 'Buy' }\"\r\n            class=\"g-text-h2\"\r\n        >\r\n            <b>{{ _lotCard.lotType.toLocaleUpperCase() }}</b>\r\n        </h2>\r\n    </div>\r\n\r\n    <!-- #endregion -->\r\n\r\n    <!-- #region Lot Name / Edit -->\r\n\r\n    <div class=\"l-edit-container\" (click)=\"handleCardClick('edit')\">\r\n        <h2 class=\"g-text-h2-dark l-lot-name\">\r\n            {{ usableLotName }}\r\n        </h2>\r\n        <p class=\"l-edit-text g-clickable\">Edit</p>\r\n    </div>\r\n\r\n    <!-- #endregion -->\r\n\r\n    <!-- #region Content (Details) -->\r\n\r\n    <div class=\"l-detail-container\" (click)=\"handleCardClick('view')\">\r\n        <span class=\"l-type\">{{ _lotCard.isPublic ? 'Public' : 'Private' }}</span>\r\n        <div class=\"l-content-holder\">\r\n            <img class=\"l-detail-icon\" src=\"./assets/icons/location-icon.svg\" alt=\"delivery-point-icon\" />\r\n            <p class=\"g-text-card-prop text-left\">{{ usableLotDeliveryPointName }}</p>\r\n        </div>\r\n        <div class=\"l-content-holder\">\r\n            <img class=\"l-detail-icon\" src=\"./assets/icons/crop-icon.svg\" alt=\"crop-icon\" />\r\n            <p class=\"g-text-card-prop\">{{ _lotCard.crop.name }}</p>\r\n        </div>\r\n        <div class=\"l-content-holder\">\r\n            <img class=\"l-detail-icon\" src=\"./assets/icons/delivery-box.svg\" alt=\"location-icon\" />\r\n            <p class=\"g-text-card-prop\">\r\n                {{ _lotCard.quantity }} {{ _lotCard.unitOfMeasure == 'MT' ? 'Tonnes' : 'Bales' }}\r\n            </p>\r\n            <p class=\"g-text-card-prop ml-2\">- R{{ _lotCard.price }}/MT</p>\r\n        </div>\r\n        <div class=\"l-content-holder\">\r\n            <img\r\n                class=\"l-detail-icon\"\r\n                [src]=\"_lotCard.isExpired ? './assets/icons/warning-icon.svg' : './assets/icons/calendar.svg'\"\r\n                alt=\"location-icon\"\r\n            />\r\n            <p class=\"g-text-card-prop\">\r\n                {{ _lotCard.dateFrom | date: 'd/MM/yy' }} - {{ _lotCard.dateTo | date: 'd/MM/yy' }}\r\n            </p>\r\n        </div>\r\n    </div>\r\n\r\n    <!-- #endregion -->\r\n\r\n    <!-- #region Footer -->\r\n\r\n    <div class=\"l-card-footer g-text-h2\" (click)=\"handleCardClick('view')\">\r\n        <div class=\"d-flex align-items-center\">\r\n            <p class=\"l-card-footer-content\">Match Count</p>\r\n            <p class=\"l-count\">{{ _lotCard.matchCount }}</p>\r\n        </div>\r\n        <div class=\"d-flex\">\r\n            <div class=\"d-flex justify-content-centre align-items-centre\">\r\n                <img class=\"l-matches-arrow\" src=\"./assets/icons/arrow-next-icon.svg\" alt=\"arrow-next-icon\" />\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <!-- #endregion -->\r\n</div>\r\n","import { PROFILE_ROUTE } from 'src/app/core/helpers/constants';\r\nimport { Component, EventEmitter, OnDestroy, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport * as fromRoot from 'src/app/features/dashboard/dashboard.selectors';\r\nimport * as actions from 'src/app/core/helpers/index.actions';\r\nimport * as snackBarConfigs from 'src/app/core/helpers/snackbar';\r\nimport { Actions, ofType } from '@ngrx/effects';\r\nimport { select, Store } from '@ngrx/store';\r\nimport { LotCard, Toggle } from 'src/app/core/models/viewModels';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { take, takeUntil } from 'rxjs/operators';\r\nimport { HOME_ROUTE, STEP_INFO_DATA } from './../../../../core/helpers/constants';\r\nimport { StepInfoModalComponent } from 'src/app/features/shared/components/step-info-modal/step-info-modal.component';\r\nimport { MatLegacyDialog as MatDialog } from '@angular/material/legacy-dialog';\r\nimport { NavigateToScoutModalComponent } from '../navigate-to-scout-modal/navigate-to-scout-modal.component';\r\nimport { brokersSelectors } from '../../../../core/ngrx/brokers';\r\nimport { Client, Lot } from '../../../../core/models/queryModels';\r\n\r\n@Component({\r\n    selector: 'app-lot',\r\n    templateUrl: './lot.component.html',\r\n    styleUrls: ['./lot.component.scss'],\r\n})\r\nexport class LotComponent implements OnInit, OnDestroy {\r\n    lotToggles: Toggle[] = ['All', 'Sell', 'Buy'];\r\n    toggleIndex: number = 0;\r\n\r\n    lotCards: LotCard[];\r\n    filteredLotCards: LotCard[];\r\n\r\n    searchInput: string;\r\n\r\n    isLotsLoading: boolean = true;\r\n    animateIn: boolean = false;\r\n\r\n    destroyed$: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n    constructor(\r\n        private route: ActivatedRoute,\r\n        private router: Router,\r\n        private store: Store<fromRoot.State>,\r\n        private actions$: Actions,\r\n        private snackbar: MatSnackBar,\r\n        private dialog: MatDialog,\r\n    ) {}\r\n\r\n    ngOnInit(): void {\r\n        this.selectClient();\r\n\r\n        this.route.queryParams.pipe(take(1)).subscribe((params) => {\r\n            if (Object.keys(params).length) {\r\n                if (params.toggleIndex) {\r\n                    this.toggleIndex = +params.toggleIndex;\r\n                }\r\n                if (params.searchInput) {\r\n                    this.searchInput = params.searchInput;\r\n                }\r\n            }\r\n        });\r\n\r\n        this.store\r\n            .pipe(select(fromRoot.lotSelectors.getAllOrderedLotCards), takeUntil(this.destroyed$))\r\n            .subscribe((lotCards: LotCard[]) => {\r\n                if (lotCards) {\r\n                    this.lotCards = lotCards;\r\n                    this.filteredLotCards = this.lotCards;\r\n\r\n                    if (this.filteredLotCards.length > 0) {\r\n                        this.privatiseExpiredLotsHelper(this.filteredLotCards);\r\n                    }\r\n                    if (this.toggleIndex) {\r\n                        this.filterAccordingToToggleHelper();\r\n                    }\r\n                    if (this.searchInput) {\r\n                        this.filterAccordingToSearchInputHelper();\r\n                    }\r\n                }\r\n            });\r\n\r\n        this.actions$\r\n            .pipe(ofType(actions.lotActions.UserLotsFail, actions.lotActions.UserLotsSuccess))\r\n            .subscribe((action) => {\r\n                if (action.type === actions.lotActions.UserLotsSuccess.type) {\r\n                    this.isLotsLoading = false;\r\n                    this.store.dispatch(actions.notificationActions.ReqCloudMessagingPermissionStatus());\r\n                } else {\r\n                    this.snackbar.open(\r\n                        'An error occurred when trying to retrieve your lots. Please reload the page.',\r\n                        'CLOSE',\r\n                        snackBarConfigs.errorConfig,\r\n                    );\r\n                }\r\n            });\r\n\r\n        this.actions$\r\n            .pipe(\r\n                ofType(actions.authActions.ReqGetClientEntitiesSuccess, actions.authActions.ReqGetClientEntitiesFail),\r\n                take(1),\r\n            )\r\n            .subscribe((action) => {\r\n                if (action.type === actions.authActions.ReqGetClientEntitiesSuccess.type) {\r\n                    this.store.dispatch(actions.lotActions.ReqUserLots());\r\n                }\r\n            });\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.destroyed$.next();\r\n    }\r\n\r\n    selectClient(): void {\r\n        this.store\r\n            .select(brokersSelectors.getCurrentClient)\r\n            .pipe(takeUntil(this.destroyed$))\r\n            .subscribe((client: Client) => {\r\n                if (client) {\r\n                    this.store.dispatch(actions.authActions.ReqGetClientEntities({ clientUid: client.uid }));\r\n                } else {\r\n                    this.store.dispatch(actions.lotActions.ReqUserLots());\r\n                }\r\n            });\r\n    }\r\n\r\n    handleToggleChange(newToggleIndex: 0 | 1 | 2) {\r\n        this.toggleIndex = newToggleIndex;\r\n        if (this.searchInput) {\r\n            this.filterAccordingToSearchInputHelper();\r\n        } else {\r\n            this.filterAccordingToToggleHelper();\r\n        }\r\n        this.updateQueryParamsHelper();\r\n    }\r\n\r\n    handleSearchInput(input: string) {\r\n        this.searchInput = input;\r\n        if (this.searchInput || this.searchInput === '') {\r\n            this.filterAccordingToSearchInputHelper();\r\n        } else {\r\n            this.resetSearchInputFilterHelper();\r\n        }\r\n        this.updateQueryParamsHelper();\r\n    }\r\n\r\n    handleNavigateToScoutModal() {\r\n        this.dialog.open(NavigateToScoutModalComponent, {\r\n            panelClass: 'g-modal-container',\r\n        });\r\n    }\r\n\r\n    handleNavigateToHomePage() {\r\n        this.router.navigate([HOME_ROUTE]);\r\n    }\r\n\r\n    handleNavigateToProfile(): void {\r\n        this.router.navigate([PROFILE_ROUTE]);\r\n    }\r\n\r\n    handleInfoModal() {\r\n        this.dialog.open(StepInfoModalComponent, {\r\n            panelClass: 'g-modal-container',\r\n            data: {\r\n                stepInfo: STEP_INFO_DATA['Lots'],\r\n            },\r\n        });\r\n    }\r\n\r\n    updateQueryParamsHelper() {\r\n        let queryParams = this.searchInput\r\n            ? { toggleIndex: this.toggleIndex, searchInput: this.searchInput }\r\n            : { toggleIndex: this.toggleIndex };\r\n        this.router.navigate([], {\r\n            relativeTo: this.route,\r\n            queryParams,\r\n            replaceUrl: true,\r\n        });\r\n    }\r\n\r\n    filterAccordingToToggleHelper() {\r\n        this.toggleIndex\r\n            ? (this.filteredLotCards = this.lotCards.filter(\r\n                  (lotCard) => lotCard.lotType === this.lotToggles[this.toggleIndex],\r\n              ))\r\n            : (this.filteredLotCards = this.lotCards);\r\n        this.animateInHelper();\r\n    }\r\n\r\n    filterAccordingToSearchInputHelper() {\r\n        this.filterAccordingToToggleHelper();\r\n        this.filteredLotCards = this.filteredLotCards.filter((cards) => {\r\n            return (\r\n                cards.lotName.toLocaleLowerCase().includes(this.searchInput.toLocaleLowerCase()) ||\r\n                cards.crop.name.toLocaleLowerCase().includes(this.searchInput.toLocaleLowerCase()) ||\r\n                cards.deliveryPointName.toLocaleLowerCase().includes(this.searchInput.toLocaleLowerCase())\r\n            );\r\n        });\r\n    }\r\n\r\n    resetSearchInputFilterHelper() {\r\n        this.filteredLotCards = this.lotCards;\r\n        this.filterAccordingToToggleHelper();\r\n    }\r\n\r\n    animateInHelper() {\r\n        this.animateIn = true;\r\n        setTimeout(() => {\r\n            this.animateIn = false;\r\n        }, 300);\r\n    }\r\n\r\n    trackByIdx(i) {\r\n        return i;\r\n    }\r\n\r\n    privatiseExpiredLotsHelper(lotCards: LotCard[]): void {\r\n        const lotIds: number[] = [];\r\n        lotCards.forEach((lot) => {\r\n            if (lot.isExpired) {\r\n                lotIds.push(lot.id);\r\n            }\r\n        });\r\n\r\n        this.store.dispatch(actions.lotActions.ReqPrivatiseLots({ lotIds }));\r\n    }\r\n}\r\n","<div class=\"l-container g-fade-in\">\r\n    <!-- #region Header -->\r\n\r\n    <div class=\"l-header\">\r\n        <img\r\n            class=\"l-home-img\"\r\n            src=\"./assets/icons/home-blue-icon.svg\"\r\n            alt=\"Blue bell\"\r\n            (click)=\"handleNavigateToHomePage()\"\r\n        />\r\n        <div class=\"g-logo-header-container\">\r\n            <img\r\n                class=\"g-header-mx-icon\"\r\n                src=\"./assets/icons/MX-small-logo.svg\"\r\n                alt=\"home icon\"\r\n                (click)=\"handleNavigateToHomePage()\"\r\n            />\r\n            <h2 class=\"g-text-h2-dark mb-0\">Lots</h2>\r\n        </div>\r\n        <div class=\"g-profile-icon-container\">\r\n            <img\r\n                class=\"g-profile-icon\"\r\n                src=\"./assets/icons/profile-icon.svg\"\r\n                alt=\"home icon\"\r\n                (click)=\"handleNavigateToProfile()\"\r\n            />\r\n        </div>\r\n    </div>\r\n\r\n    <!-- #endregion -->\r\n\r\n    <!-- #region Loading Spinner -->\r\n\r\n    <div *ngIf=\"isLotsLoading; else lotsIsLoaded\" class=\"l-spinner-holder\">\r\n        <mat-progress-spinner\r\n            class=\"g-mat-progress-spinner\"\r\n            mode=\"indeterminate\"\r\n            [diameter]=\"40\"\r\n        ></mat-progress-spinner>\r\n    </div>\r\n\r\n    <!-- #endregion -->\r\n\r\n    <!-- #region Content -->\r\n\r\n    <ng-template #lotsIsLoaded>\r\n        <div *ngIf=\"lotCards && lotCards.length; else noLots\" class=\"l-content-container\">\r\n            <cdk-virtual-scroll-viewport id=\"lot-cdk\" class=\"l-cdk\" itemSize=\"375\">\r\n                <app-dashboard-header\r\n                    [activeRoute]=\"'lots'\"\r\n                    [toggleIndex]=\"toggleIndex\"\r\n                    [toggles]=\"lotToggles\"\r\n                    [showSearchBar]=\"searchInput || searchInput === ''\"\r\n                    ($changeToggleEvent)=\"handleToggleChange($event)\"\r\n                    ($searchInputEvent)=\"handleSearchInput($event)\"\r\n                    ($createEvent)=\"handleNavigateToScoutModal()\"\r\n                ></app-dashboard-header>\r\n                <div\r\n                    *cdkVirtualFor=\"let lotCard of filteredLotCards; trackBy: trackByIdx; templateCacheSize: 0\"\r\n                    class=\"l-card-holder\"\r\n                    [class.g-fade-in]=\"animateIn\"\r\n                >\r\n                    <app-lot-card [lotCard]=\"lotCard\"></app-lot-card>\r\n                </div>\r\n            </cdk-virtual-scroll-viewport>\r\n        </div>\r\n\r\n        <ng-template #noLots>\r\n            <div class=\"l-content-container p-3\">\r\n                <button mat-flat-button class=\"g-primary-button\" (click)=\"handleNavigateToScoutModal()\">\r\n                    CREATE NEW LOT\r\n                </button>\r\n\r\n                <div class=\"d-flex flex-column justify-content-center align-items-center mt-5\">\r\n                    <h1 class=\"g-text-h2-dark mt-5 mb-3\">It's a bit empty here...</h1>\r\n                    <p class=\"g-text-p-dark mx-5\">\r\n                        By creating a Match Exchange Lot you are communicating to the Market that you are a willing\r\n                        seller or buyer of a specific portion of your crop.\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </ng-template>\r\n    </ng-template>\r\n\r\n    <!-- #endregion -->\r\n</div>\r\n","import { Component, EventEmitter, OnDestroy, OnInit } from '@angular/core';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\nimport { Store, select } from '@ngrx/store';\r\nimport * as fromNotifications from 'src/app/core/ngrx/entities/notifications/index';\r\nimport { filter, take, takeUntil } from 'rxjs/operators';\r\nimport { iconDetails, PROFILE_ROUTE } from 'src/app/core/helpers/constants';\r\nimport { iconDetailData, NavigationItem, NotificationCounts } from 'src/app/core/models/viewModels';\r\nimport { brokersSelectors } from '../../../../core/ngrx/brokers';\r\nimport { Client, User } from '../../../../core/models/queryModels';\r\nimport { authSelectors } from '../../dashboard.selectors';\r\nimport { ConfirmationModalService } from '../../../../core/services/confirmation-modal/confirmation-modal.service';\r\nimport { isProfileCompleteHelper } from '../../../../core/helpers/helperFunctions';\r\n@Component({\r\n    selector: 'app-main-nav',\r\n    templateUrl: './main-nav.component.html',\r\n    styleUrls: ['./main-nav.component.scss'],\r\n})\r\nexport class MainNavComponent implements OnInit, OnDestroy {\r\n    activeRoute: string = 'scouts';\r\n    iconDetails: { [key: string]: iconDetailData } = iconDetails;\r\n\r\n    notificationCounts: NotificationCounts = {\r\n        total: null,\r\n        profile: null,\r\n        negotiations: null,\r\n        completedNegotiations: null,\r\n    };\r\n\r\n    matRippleColor: string = '#e5e9ef';\r\n    client: Client;\r\n    user: User;\r\n    hideNav = false;\r\n\r\n    destroyed$: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n    constructor(\r\n        private router: Router,\r\n        private store: Store<fromNotifications.State>,\r\n        private confirmModalService: ConfirmationModalService,\r\n    ) {\r\n        router.events\r\n            .pipe(\r\n                filter((e): e is NavigationEnd => e instanceof NavigationEnd),\r\n                takeUntil(this.destroyed$),\r\n            )\r\n            .subscribe((val) => {\r\n                const activeRouteFromUrl: string = val['url'].split('/').pop() || '';\r\n                if (activeRouteFromUrl !== this.activeRoute) {\r\n                    this.activeRoute = activeRouteFromUrl;\r\n                }\r\n            });\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.selectClientHelper();\r\n        this.selectUserHelper();\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.destroyed$.next();\r\n    }\r\n\r\n    getUserNotificationsCountHelper(): void {\r\n        this.store\r\n            .pipe(select(fromNotifications.notificationSelectors.getNotificationCounts), takeUntil(this.destroyed$))\r\n            .subscribe((notificationCounts: NotificationCounts) => {\r\n                if (notificationCounts.total) {\r\n                    this.notificationCounts = notificationCounts;\r\n                }\r\n            });\r\n\r\n        const clientUid = this.client ? this.client.uid : null;\r\n        this.client\r\n            ? this.store.dispatch(fromNotifications.notificationActions.ReqClientNotifications({ clientUid }))\r\n            : this.store.dispatch(fromNotifications.notificationActions.ReqUserNotifications());\r\n    }\r\n\r\n    handleToggleActiveRoute(newRoute: NavigationItem): void {\r\n        this.activeRoute = newRoute;\r\n        this.changeNavigationTabHelper();\r\n    }\r\n\r\n    maintainOrderHelper = (): number => {\r\n        return 0;\r\n    };\r\n\r\n    changeNavigationTabHelper(): void {\r\n        this.router.navigate([`/dashboard/${this.activeRoute}`]);\r\n    }\r\n\r\n    selectClientHelper(): void {\r\n        this.store\r\n            .select(brokersSelectors.getCurrentClient)\r\n            .pipe(takeUntil(this.destroyed$))\r\n            .subscribe((client: Client) => {\r\n                this.client = client;\r\n                this.getUserNotificationsCountHelper();\r\n            });\r\n    }\r\n\r\n    selectUserHelper(): void {\r\n        this.store\r\n            .select(authSelectors.getUser)\r\n            .pipe(takeUntil(this.destroyed$))\r\n            .subscribe((user: User) => {\r\n                this.user = user;\r\n                this.hideNavForAgentHelper();\r\n                this.checkIfUserCompletedProfileHelper();\r\n            });\r\n    }\r\n\r\n    hideNavForAgentHelper(): void {\r\n        if (this.router.url.includes('profile') && this.user?.isBroker) {\r\n            this.hideNav = true;\r\n        }\r\n    }\r\n\r\n    checkIfUserCompletedProfileHelper(): void {\r\n        if (!this.user?.isBroker && !isProfileCompleteHelper(this.user)) {\r\n            this.confirmModalService\r\n                .open(\r\n                    'Profile Incomplete',\r\n                    'Please go to your profile and complete all the required sections to continue using MatchMX',\r\n                    this.client,\r\n                    'Complete Profile',\r\n                    'Cancel',\r\n                )\r\n                .afterClosed()\r\n                .pipe(take(1))\r\n                .subscribe((result) => {\r\n                    !result ? this.checkIfUserCompletedProfileHelper() : this.router.navigate([PROFILE_ROUTE]);\r\n                });\r\n        } else if (this.user?.isBroker && !isProfileCompleteHelper(this.client)) {\r\n            this.confirmModalService\r\n                .open(\r\n                    \"Client's Profile incomplete\",\r\n                    'Please reach out to the client and ask them to kindly complete their profile',\r\n                    this.client,\r\n                    'OK',\r\n                    'Cancel',\r\n                )\r\n                .afterClosed()\r\n                .pipe(take(1))\r\n                .subscribe((result) => {});\r\n        }\r\n    }\r\n}\r\n","<div class=\"l-container\" >\r\n    <!-- #region Ng-Content -->\r\n\r\n    <div class=\"l-content\" [class.h-100]=\"hideNav\">\r\n        <ng-content content></ng-content>\r\n    </div>\r\n\r\n    <!-- #endregion -->\r\n\r\n    <!-- #region Navigation Bar -->\r\n\r\n    <div class=\"l-nav-container\" *ngIf=\"!hideNav\">\r\n        <div\r\n            *ngFor=\"let iconDetail of iconDetails | keyvalue: maintainOrderHelper\"\r\n            matRipple\r\n            [matRippleColor]=\"matRippleColor\"\r\n            class=\"l-item-container g-mat-ripple\"\r\n            [class.l-active]=\"activeRoute === iconDetail.value.name\"\r\n            (click)=\"handleToggleActiveRoute(iconDetail.value.name)\"\r\n        >\r\n            <!-- #region Notification Dot -->\r\n\r\n            <ng-container\r\n                *ngIf=\"\r\n                    (iconDetail.value.name === 'negotiations' && notificationCounts.negotiations) ||\r\n                    (iconDetail.value.name === 'completed' && notificationCounts.completedNegotiations) ||\r\n                    (iconDetail.value.name === 'profile' && notificationCounts.profile)\r\n                \"\r\n            >\r\n                <div class=\"g-notification-dot\">\r\n                    {{\r\n                        iconDetail.value.name === 'negotiations'\r\n                            ? notificationCounts.negotiations\r\n                            : iconDetail.value.name === 'completed'\r\n                            ? notificationCounts.completedNegotiations\r\n                            : notificationCounts.profile\r\n                    }}\r\n                </div>\r\n            </ng-container>\r\n\r\n            <!-- #endregion -->\r\n\r\n            <img\r\n                class=\"l-icon\"\r\n                [src]=\"\r\n                    activeRoute === iconDetail.value.name ? iconDetail.value.sourceBlue : iconDetail.value.sourceGrey\r\n                \"\r\n                [alt]=\"iconDetail.value.name\"\r\n            />\r\n            <p class=\"l-p\">\r\n                {{ iconDetail.key }}\r\n            </p>\r\n        </div>\r\n    </div>\r\n\r\n    <!-- #endregion -->\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatLegacyDialogRef as MatDialogRef } from '@angular/material/legacy-dialog';\r\nimport { Router } from '@angular/router';\r\nimport { SCOUTS_ROUTE } from 'src/app/core/helpers/constants';\r\n\r\n@Component({\r\n    selector: 'app-navigate-to-scout-modal',\r\n    templateUrl: './navigate-to-scout-modal.component.html',\r\n    styleUrls: ['./navigate-to-scout-modal.component.scss'],\r\n})\r\nexport class NavigateToScoutModalComponent implements OnInit {\r\n    constructor(private dialogRef: MatDialogRef<NavigateToScoutModalComponent>, private router: Router) {}\r\n\r\n    ngOnInit(): void {}\r\n\r\n    handleClose(): void {\r\n        this.dialogRef.close();\r\n    }\r\n\r\n    handleNavigateToScout() {\r\n        this.dialogRef.close();\r\n        this.router.navigate([SCOUTS_ROUTE]);\r\n    }\r\n}\r\n","<div class=\"l-container\">\r\n    <!-- #region Header -->\r\n\r\n    <div class=\"l-header\">\r\n        <img class=\"l-close-icon\" src=\"./assets/icons/close-icon-dark.svg\" alt=\"close\" (click)=\"handleClose()\" />\r\n        <img class=\"l-icon\" src=\"./assets/images/bottom-nav-scouts-grey.svg\" alt=\"icon\" />\r\n    </div>\r\n    <h1 class=\"g-text-h1-dark mb-3\">\r\n        <b>Create a Scout</b>\r\n    </h1>\r\n\r\n    <!-- #endregion -->\r\n\r\n    <!-- #region Modal Content -->\r\n\r\n    <div class=\"g-text-p-dark\">\r\n        <p>\r\n            A lot is best when paired with one of your scouts. This will connect you to parties most interested in your\r\n            lot.\r\n        </p>\r\n    </div>\r\n\r\n    <!-- #endregion -->\r\n\r\n    <!-- #region Buttons -->\r\n\r\n    <button class=\"g-primary-button my-2\" (click)=\"handleNavigateToScout()\">Go to Scouts</button>\r\n\r\n    <!-- #endregion -->\r\n</div>\r\n","import { Component, EventEmitter, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Store } from '@ngrx/store';\r\nimport { ActiveNegotiation, NegotiationCard, Notification } from 'src/app/core/models/viewModels';\r\nimport { NEGOTIATION_EDIT_ROUTE, NEGOTIATION_VIEW_ROUTE } from 'src/app/core/helpers/constants';\r\nimport { Dictionary } from '@ngrx/entity';\r\nimport { MatLegacyDialog as MatDialog } from '@angular/material/legacy-dialog';\r\nimport { PaymentCheckModalComponent } from 'src/app/features/shared/components/payment-check-modal/payment-check-modal.component';\r\nimport { act, Actions, ofType } from '@ngrx/effects';\r\nimport { brokersActions, brokersSelectors } from 'src/app/core/ngrx/brokers/index';\r\nimport { take, takeUntil } from 'rxjs/operators';\r\nimport { BrokerNegotiation } from '../../../../core/models/queryModels';\r\nimport { filterOutNegotiationDocument } from '../../../../core/helpers/brokerHelperFunctions';\r\nimport * as actions from 'src/app/core/helpers/index.actions';\r\nimport { GetBrokerNegotiationDocumentsSuccess } from '../../../../core/ngrx/brokers/brokers.actions';\r\n\r\n@Component({\r\n    selector: 'app-negotiation-card',\r\n    templateUrl: './negotiation-card.component.html',\r\n    styleUrls: ['./negotiation-card.component.scss'],\r\n})\r\nexport class NegotiationCardComponent implements OnInit, OnDestroy {\r\n    @Input() negotiationCard: NegotiationCard;\r\n    @Input() hasActiveAgent: boolean;\r\n    @Input() get notifications(): Notification[] {\r\n        return this._notifications;\r\n    }\r\n    set notifications(value: Notification[]) {\r\n        this._notifications = value;\r\n        if (!this.negotiationCard.isCompleted) {\r\n            if (this._notifications.length) {\r\n                const notificationLotMatchIds = this.notifications.map((notification) => notification.lotMatchId);\r\n                for (let i = 0; i < notificationLotMatchIds.length; i++) {\r\n                    this.notificationCounts[notificationLotMatchIds[i]] = notificationLotMatchIds.filter(\r\n                        (id) => id === notificationLotMatchIds[i],\r\n                    ).length;\r\n                }\r\n            } else {\r\n                this.notificationCounts = {};\r\n            }\r\n        }\r\n    }\r\n    _notifications: Notification[] = [];\r\n    notificationCounts: Dictionary<number> = {};\r\n\r\n    activeNegotiationsCount: number;\r\n\r\n    BASE_CARD_HEIGHT: string = '236px';\r\n    EXPANDED_CARD_HEIGHT: string;\r\n\r\n    cardHeight: string = this.BASE_CARD_HEIGHT;\r\n\r\n    isExpanded: boolean = false;\r\n    animateIn: boolean = false;\r\n\r\n    isPaymentComplete: boolean = false;\r\n    agentNegotiationExists: boolean = false;\r\n    lotMatches: ActiveNegotiation[];\r\n\r\n    destroyed$: EventEmitter<void> = new EventEmitter<void>();\r\n    cardStatusTag: 'PENDING' | 'PAYMENT PENDING' | 'PAYMENT COMPLETE';\r\n    counterPartySubmitted: boolean;\r\n    currentUserSubmitted: boolean;\r\n\r\n    constructor(private router: Router, private store: Store, public dialog: MatDialog, public actions$: Actions) {}\r\n\r\n    // #region life cycle hooks\r\n    ngOnInit(): void {\r\n        this.activeNegotiationsCount = this.negotiationCard.activeNegotiations.length;\r\n        this.EXPANDED_CARD_HEIGHT = `${236 + this.activeNegotiationsCount * 105}px`;\r\n\r\n        this.selectBindingNegotiationDocuments();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.destroyed$.next();\r\n    }\r\n\r\n    // #endregion\r\n\r\n    // #region NGRX Flows\r\n    selectBindingNegotiationDocuments(): void {\r\n        this.store\r\n            .select(brokersSelectors.getNegotiationDocuments)\r\n            .pipe(takeUntil(this.destroyed$))\r\n            .subscribe((negotiationDocs: BrokerNegotiation[]) => {\r\n                if (negotiationDocs.length) {\r\n                    this.getNegotiationCardStatusTagHelper(negotiationDocs);\r\n                }\r\n            });\r\n    }\r\n    // #endregion\r\n\r\n    // #region Event Helpers\r\n\r\n    handleOpenPaymentDetails(e: Event): void {\r\n        e.stopPropagation();\r\n        const paymentReady: boolean = this.cardStatusTag === 'PAYMENT PENDING' ? true : false;\r\n        const paymentComplete: boolean = this.cardStatusTag === 'PAYMENT COMPLETE' ? true : false;\r\n        this.dialog.open(PaymentCheckModalComponent, {\r\n            panelClass: 'g-modal-container',\r\n            data: {\r\n                metricTons: this.negotiationCard.quantity,\r\n                paymentStepReady: paymentReady,\r\n                paymentComplete: paymentComplete,\r\n                counterPartySubmitted: this.counterPartySubmitted,\r\n                currentUserSubmitted: this.currentUserSubmitted,\r\n            },\r\n        });\r\n    }\r\n\r\n    handleRouteToNegotiation(id: number, isPending: boolean) {\r\n        const negotiationNotifications = this._notifications.filter((notification) => notification.lotMatchId === id);\r\n        const queryParams = negotiationNotifications.length\r\n            ? {\r\n                  isPending,\r\n                  notificationUids: negotiationNotifications.map((notification) => notification.uid),\r\n              }\r\n            : { isPending };\r\n        this.router.navigate([`${NEGOTIATION_EDIT_ROUTE}/${id}`], { queryParams });\r\n    }\r\n\r\n    handleRouteToCompletedNegotiation() {\r\n        this.router.navigate([`${NEGOTIATION_VIEW_ROUTE}/${this.getCompletedNegotiationIdHelper()}`]);\r\n    }\r\n\r\n    handleToggleIsExpanded() {\r\n        if (this.activeNegotiationsCount !== 0 && !this.negotiationCard.isCompleted) {\r\n            this.alterCardHeightHelper();\r\n            this.isExpanded = !this.isExpanded;\r\n            this.toggleAnimateInHelper();\r\n        } else if (this.negotiationCard.isCompleted) {\r\n            this.router.navigate([`${NEGOTIATION_VIEW_ROUTE}/${this.getCompletedNegotiationIdHelper()}`]);\r\n        }\r\n    }\r\n\r\n    // #endregion\r\n\r\n    // #region Helper Functions\r\n    getCompletedNegotiationIdHelper() {\r\n        return (\r\n            this.negotiationCard.activeNegotiations.find(\r\n                (activeNegotiation) => activeNegotiation.matchedPropertyCount === 6,\r\n            )?.lotMatchId || this.negotiationCard.activeNegotiations[0].lotMatchId\r\n        );\r\n    }\r\n\r\n    alterCardHeightHelper() {\r\n        this.cardHeight = this.isExpanded ? this.BASE_CARD_HEIGHT : this.EXPANDED_CARD_HEIGHT;\r\n    }\r\n\r\n    toggleAnimateInHelper() {\r\n        this.isExpanded ? setTimeout(() => (this.animateIn = true), 300) : (this.animateIn = false);\r\n    }\r\n\r\n    getNegotiationCardStatusTagHelper(negotiationDocs: BrokerNegotiation[]): void {\r\n        this.negotiationCard.activeNegotiations.map((activeNegotioation: ActiveNegotiation) => {\r\n            const negotiationDoc = filterOutNegotiationDocument(activeNegotioation.lotMatchId, negotiationDocs);\r\n            if (negotiationDoc && negotiationDoc.lotMatchId === activeNegotioation.lotMatchId) {\r\n                this.counterPartySubmitted = this.checkIfCounterPartyHasSubmittedMatch(negotiationDoc);\r\n                this.currentUserSubmitted = this.checkIfCurrentUserHasSubmitted(negotiationDoc);\r\n                if (\r\n                    (!negotiationDoc.buyerEmail && negotiationDoc.sellerEmail) ||\r\n                    (negotiationDoc.buyerEmail && !negotiationDoc.sellerEmail)\r\n                ) {\r\n                    this.cardStatusTag = 'PENDING';\r\n                } else if (\r\n                    negotiationDoc.buyerEmail &&\r\n                    negotiationDoc.sellerEmail &&\r\n                    (!negotiationDoc.buyerPaid || !negotiationDoc.sellerPaid)\r\n                ) {\r\n                    this.cardStatusTag = 'PAYMENT PENDING';\r\n                } else if (\r\n                    negotiationDoc.buyerEmail &&\r\n                    negotiationDoc.sellerEmail &&\r\n                    this.checkNegotiationPaymentStatusHelper(negotiationDoc)\r\n                ) {\r\n                    this.cardStatusTag = 'PAYMENT COMPLETE';\r\n                    if (!negotiationDoc.emailSent) {\r\n                        this.sendIntroductionEmailHelper(negotiationDoc.lotMatchId);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    checkNegotiationPaymentStatusHelper(negotiationDoc: BrokerNegotiation): boolean {\r\n        if (\r\n            (this.negotiationCard.lotType === 'Sell' && negotiationDoc.sellerPaid) ||\r\n            (this.negotiationCard.lotType === 'Buy' && negotiationDoc.buyerPaid)\r\n        ) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    checkIfCounterPartyHasSubmittedMatch(negotiationDoc: BrokerNegotiation): boolean {\r\n        if (this.negotiationCard.lotType === 'Sell' && negotiationDoc.buyerEmail) {\r\n            return true;\r\n        } else if (this.negotiationCard.lotType === 'Buy' && negotiationDoc.sellerEmail) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    checkIfCurrentUserHasSubmitted(negotiationDoc: BrokerNegotiation): boolean {\r\n        if (\r\n            (this.negotiationCard.lotType === 'Sell' && negotiationDoc.sellerEmail) ||\r\n            (this.negotiationCard.lotType === 'Buy' && negotiationDoc.buyerEmail)\r\n        ) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    sendIntroductionEmailHelper(lotMatchId: number): void {\r\n        this.store.dispatch(brokersActions.ReqSendIntroductionEmail({ lotMatchId: lotMatchId }));\r\n    }\r\n\r\n    // #endregion\r\n}\r\n","<div\r\n    class=\"l-container\"\r\n    [ngClass]=\"{\r\n        'g-card-border-sell': negotiationCard.lotType === 'Sell',\r\n        'g-card-border-buy': negotiationCard.lotType === 'Buy'\r\n    }\"\r\n>\r\n    <div class=\"l-card g-fade-in\" [ngStyle]=\"{ height: cardHeight }\">\r\n        <!-- #region Base Content -->\r\n\r\n        <div class=\"l-base-content\" (click)=\"handleToggleIsExpanded()\">\r\n            <!-- #region Header -->\r\n\r\n            <div\r\n                class=\"l-header\"\r\n                [ngClass]=\"{\r\n                    'l-banner-sell': negotiationCard.lotType === 'Sell',\r\n                    'l-banner-buy': negotiationCard.lotType === 'Buy'\r\n                }\"\r\n            >\r\n                <h2\r\n                    [ngClass]=\"{\r\n                        'l-sell-text': negotiationCard.lotType === 'Sell',\r\n                        'l-buy-text': negotiationCard.lotType === 'Buy'\r\n                    }\"\r\n                    class=\"g-text-h2\"\r\n                >\r\n                    <b>{{ negotiationCard.lotType.toLocaleUpperCase() }}</b>\r\n                </h2>\r\n                <span\r\n                    *ngIf=\"hasActiveAgent && cardStatusTag\"\r\n                    class=\"l-tag\"\r\n                    (click)=\"handleOpenPaymentDetails($event)\"\r\n                    >{{ cardStatusTag }}</span\r\n                >\r\n            </div>\r\n\r\n            <!-- #endregion -->\r\n\r\n            <!-- #region Lot Name / Edit -->\r\n\r\n            <h2 class=\"g-text-h2-dark l-lot-name\">\r\n                {{ negotiationCard.lotName }}\r\n            </h2>\r\n\r\n            <!-- #endregion -->\r\n\r\n            <!-- #region Content -->\r\n\r\n            <div class=\"l-detail-container\">\r\n                <div class=\"l-content-holder\">\r\n                    <img class=\"l-detail-icon\" src=\"./assets/icons/crop-icon.svg\" alt=\"\" />\r\n                    <p class=\"g-text-card-prop\">{{ negotiationCard.cropName }}</p>\r\n                </div>\r\n                <div class=\"l-content-holder\">\r\n                    <img class=\"l-detail-icon\" src=\"./assets/icons/delivery-box.svg\" alt=\"\" />\r\n                    <p class=\"g-text-card-prop\">{{ negotiationCard.quantity }} {{ negotiationCard.unitOfMeasure }}</p>\r\n                </div>\r\n                <div class=\"l-content-holder\">\r\n                    <img class=\"l-detail-icon\" src=\"./assets/icons/calendar.svg\" alt=\"location-icon\" />\r\n                    <p class=\"g-text-card-prop\">\r\n                        {{ negotiationCard.dateFrom | date: 'dd/MM/yy' }} -\r\n                        {{ negotiationCard.dateTo | date: 'dd/MM/yy' }}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n\r\n            <!-- #endregion -->\r\n\r\n            <!-- #region Card Footer -->\r\n\r\n            <div *ngIf=\"!negotiationCard.isCompleted; else showCompletedFooter\" class=\"l-card-footer g-text-h2\">\r\n                <div class=\"d-flex align-items-center\">\r\n                    <p class=\"l-card-footer-content\">Negotiations</p>\r\n                    <p class=\"l-count\">{{ activeNegotiationsCount }}</p>\r\n                </div>\r\n                <div class=\"d-flex\">\r\n                    <div class=\"d-flex justify-content-centre align-items-centre\">\r\n                        <img\r\n                            class=\"l-matches-arrow\"\r\n                            [ngClass]=\"isExpanded ? 'l-rotate-icon-up' : 'l-rotate-icon-down'\"\r\n                            src=\"./assets/icons/arrow-down-icon.svg\"\r\n                            alt=\"arrow-icon\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <ng-template #showCompletedFooter>\r\n                <div class=\"l-footer-complete\">\r\n                    <div class=\"d-flex align-items-center\" (click)=\"handleRouteToCompletedNegotiation()\">\r\n                        <p class=\"l-view-text\">View</p>\r\n                        <img class=\"l-chevron-right\" src=\"./assets/icons/arrow-down-icon.svg\" alt=\"expand-content\" />\r\n                    </div>\r\n                </div>\r\n            </ng-template>\r\n\r\n            <!-- #endregion -->\r\n        </div>\r\n\r\n        <!-- #endregion -->\r\n\r\n        <!-- #region DropDown Content -->\r\n\r\n        <div\r\n            *ngIf=\"!negotiationCard.isCompleted && isExpanded && animateIn\"\r\n            class=\"l-expanded-content\"\r\n            [class.g-fade-in]=\"animateIn\"\r\n        >\r\n            <div\r\n                *ngFor=\"let activeNegotiation of negotiationCard.activeNegotiations\"\r\n                class=\"l-active-negotiation-container\"\r\n                (click)=\"handleRouteToNegotiation(activeNegotiation.lotMatchId, activeNegotiation.isPending)\"\r\n            >\r\n                <!-- #region Detail Row (Price & ID) -->\r\n\r\n                <div class=\"l-negotiation-detail-row\">\r\n                    <div class=\"d-flex justify-content-between w-100\">\r\n                        <span class=\"d-flex align-items-center\"\r\n                            ><img class=\"l-price-icon\" src=\"./assets/icons/database-icon.svg\" alt=\"price\" />\r\n                            <p class=\"g-text-p\">\r\n                                <b\r\n                                    >{{ activeNegotiation.isSafexMinus === true ? '-' : '' }}R\r\n                                    {{ activeNegotiation.price }} per {{ activeNegotiation.unitOfMeasure }}</b\r\n                                >\r\n                            </p></span\r\n                        >\r\n                        <div class=\"d-flex align-items-center\">\r\n                            <!-- #region Notification Dot -->\r\n\r\n                            <div\r\n                                *ngIf=\"notificationCounts[activeNegotiation.lotMatchId]\"\r\n                                class=\"g-notification-dot-block\"\r\n                            >\r\n                                {{ notificationCounts[activeNegotiation.lotMatchId] }}\r\n                            </div>\r\n\r\n                            <!-- #endregion -->\r\n                            <span class=\"g-text-p-dark ml-1\">Lot Match ID: {{ activeNegotiation.lotMatchId }}</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <!-- #endregion -->\r\n\r\n                <!-- #region Detail Row (Match & View Trade) -->\r\n\r\n                <div class=\"l-negotiation-detail-row mt-2\">\r\n                    <div>\r\n                        <div class=\"l-match-header\">\r\n                            <ng-container *ngIf=\"activeNegotiation.isPending; else showMatchedPropertyCount\">\r\n                                <p class=\"g-text-p\">\r\n                                    <i>Pending...</i>\r\n                                </p>\r\n                            </ng-container>\r\n                            <ng-template #showMatchedPropertyCount>\r\n                                <p class=\"g-text-p\">Match</p>\r\n                                <p class=\"g-text-p pl-2\">{{ activeNegotiation.matchedPropertyCount }}/7</p>\r\n                            </ng-template>\r\n                        </div>\r\n                        <div class=\"l-match-bar\">\r\n                            <div\r\n                                class=\"l-match-fill\"\r\n                                [ngClass]=\"{\r\n                                    'l-1': activeNegotiation.matchedPropertyCount === 1,\r\n                                    'l-2': activeNegotiation.matchedPropertyCount === 2,\r\n                                    'l-3': activeNegotiation.matchedPropertyCount === 3,\r\n                                    'l-4': activeNegotiation.matchedPropertyCount === 4,\r\n                                    'l-5': activeNegotiation.matchedPropertyCount === 5,\r\n                                    'l-6': activeNegotiation.matchedPropertyCount === 6,\r\n                                    'l-7': activeNegotiation.matchedPropertyCount === 7\r\n                                }\"\r\n                            ></div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"d-flex align-items-center\">\r\n                        <p class=\"l-view-text\">View</p>\r\n                    </div>\r\n                </div>\r\n\r\n                <!-- #endregion -->\r\n            </div>\r\n        </div>\r\n\r\n        <!-- #endregion -->\r\n\r\n        <!-- #region Notification Dot -->\r\n\r\n        <div *ngIf=\"_notifications?.length\" class=\"g-notification-dot-protrude\">{{ _notifications?.length }}</div>\r\n\r\n        <!-- #endregion -->\r\n    </div>\r\n</div>\r\n","import { PROFILE_ROUTE } from 'src/app/core/helpers/constants';\r\nimport { HOME_ROUTE, STEP_INFO_DATA } from './../../../../core/helpers/constants';\r\nimport { Component, EventEmitter, OnDestroy, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Store, select } from '@ngrx/store';\r\nimport * as fromRoot from 'src/app/features/dashboard/dashboard.selectors';\r\nimport * as actions from 'src/app/core/helpers/index.actions';\r\nimport * as snackBarConfigs from 'src/app/core/helpers/snackbar';\r\nimport * as fromAgents from 'src/app/core/ngrx/brokers/index';\r\nimport { take, takeUntil } from 'rxjs/operators';\r\nimport { Toggle, NegotiationCard, Notification } from 'src/app/core/models/viewModels';\r\nimport { Actions, ofType } from '@ngrx/effects';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { StepInfoModalComponent } from 'src/app/features/shared/components/step-info-modal/step-info-modal.component';\r\nimport { MatLegacyDialog as MatDialog } from '@angular/material/legacy-dialog';\r\nimport { brokersSelectors } from '../../../../core/ngrx/brokers';\r\nimport { brokersActions } from 'src/app/core/helpers/index.actions';\r\nimport { getAllLotMatchIdsFromNegotiationCards } from '../../../../core/helpers/brokerHelperFunctions';\r\n\r\n@Component({\r\n    selector: 'app-negotiations',\r\n    templateUrl: './negotiations.component.html',\r\n    styleUrls: ['./negotiations.component.scss'],\r\n})\r\nexport class NegotiationsComponent implements OnInit, OnDestroy {\r\n    negotiatingToggles: Toggle[] = ['All', 'Sell', 'Buy'];\r\n    toggleIndex: number = 0;\r\n    searchInput: string;\r\n\r\n    negotiatingRoomCards: NegotiationCard[];\r\n    filteredNegotiatingRoomCards: NegotiationCard[];\r\n\r\n    notifications: Notification[] = [];\r\n    notificationLotIds: number[] = [];\r\n\r\n    isLoading: boolean = true;\r\n\r\n    animateIn: boolean = false;\r\n\r\n    hasActiveAgent: boolean = false;\r\n\r\n    destroyed$: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n    constructor(\r\n        private route: ActivatedRoute,\r\n        private router: Router,\r\n        private store: Store<fromRoot.State>,\r\n        private actions$: Actions,\r\n        private snackbar: MatSnackBar,\r\n        private dialog: MatDialog,\r\n    ) {}\r\n\r\n    // #region Life Cycle\r\n    ngOnInit(): void {\r\n        this.selectClient();\r\n\r\n        this.route.queryParams.pipe(take(1)).subscribe((params) => {\r\n            if (Object.keys(params).length > 0) {\r\n                if (params.toggleIndex) {\r\n                    this.toggleIndex = +params.toggleIndex;\r\n                }\r\n                if (params.searchInput) {\r\n                    this.searchInput = params.searchInput;\r\n                }\r\n            }\r\n        });\r\n\r\n        this.store\r\n            .pipe(select(fromRoot.negotiationSelector.getAllOrderedNegotiationCards), takeUntil(this.destroyed$))\r\n            .subscribe((negotiatingRoomCards: NegotiationCard[]) => {\r\n                this.negotiatingRoomCards = negotiatingRoomCards.filter(\r\n                    (negotiationCard) => !negotiationCard.isCompleted,\r\n                );\r\n                this.filteredNegotiatingRoomCards = this.negotiatingRoomCards;\r\n                this.fetchBrokerNegotiationDocuments();\r\n                this.filterAccordingToToggleHelper();\r\n                if (this.searchInput) {\r\n                    this.filterAccordingToSearchInputHelper();\r\n                }\r\n            });\r\n\r\n        this.actions$\r\n            .pipe(\r\n                ofType(\r\n                    actions.negotiationActions.UserNegotiationCardsFail,\r\n                    actions.negotiationActions.UserNegotiationCardsSuccess,\r\n                ),\r\n                takeUntil(this.destroyed$),\r\n            )\r\n            .subscribe((action) => {\r\n                if (action.type === actions.negotiationActions.UserNegotiationCardsSuccess.type) {\r\n                    this.isLoading = false;\r\n                } else {\r\n                    this.snackbar.open(\r\n                        'An error occurred when trying to retrieve your negotiations. Please reload the page.',\r\n                        'CLOSE',\r\n                        snackBarConfigs.errorConfig,\r\n                    );\r\n                }\r\n            });\r\n\r\n        this.store\r\n            .pipe(select(fromAgents.brokersSelectors.getFilteredBrokers), takeUntil(this.destroyed$))\r\n            .subscribe((response) => {\r\n                if (response?.activeBroker) {\r\n                    this.hasActiveAgent = response.activeBroker ? true : false;\r\n                }\r\n            });\r\n\r\n        this.store\r\n            .pipe(select(fromRoot.notificationSelectors.getNegotiationNotifications), takeUntil(this.destroyed$))\r\n            .subscribe((notifications) => {\r\n                this.notifications = notifications;\r\n                this.notificationLotIds = this.notifications.length\r\n                    ? this.notifications.map((notification) => notification.lotId)\r\n                    : [];\r\n            });\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.destroyed$.next();\r\n    }\r\n\r\n    // #endregion\r\n\r\n    // #region NGRX Flows\r\n\r\n    fetchBrokerNegotiationDocuments(): void {\r\n        let lotMatchIds: number[] = [];\r\n\r\n        if (this.filteredNegotiatingRoomCards.length) {\r\n            lotMatchIds = getAllLotMatchIdsFromNegotiationCards(this.filteredNegotiatingRoomCards);\r\n\r\n            if (lotMatchIds.length > 10) {\r\n                const chuckSize = 10;\r\n                for (let i = 0; i < lotMatchIds.length; i += chuckSize) {\r\n                    const smallerLotMatchIdsArray: number[] = lotMatchIds.slice(i, i + chuckSize);\r\n                    this.store.dispatch(\r\n                        brokersActions.ReqGetBrokerNegotiationDocuments({ lotMatchIds: smallerLotMatchIdsArray }),\r\n                    );\r\n                }\r\n            } else {\r\n                this.store.dispatch(brokersActions.ReqGetBrokerNegotiationDocuments({ lotMatchIds }));\r\n            }\r\n        }\r\n    }\r\n\r\n    // #endregion\r\n\r\n    // #region State Selectors\r\n    selectClient(): void {\r\n        this.store\r\n            .select(brokersSelectors.getCurrentClient)\r\n            .pipe(takeUntil(this.destroyed$))\r\n            .subscribe((client) => {\r\n                if (client) {\r\n                    this.store.dispatch(actions.negotiationActions.ReqUserNegotiationCards({ clientUid: client.uid }));\r\n                } else {\r\n                    this.store.dispatch(actions.negotiationActions.ReqUserNegotiationCards({}));\r\n                }\r\n            });\r\n    }\r\n\r\n    // #endregion\r\n\r\n    // #region Event Handlers\r\n    handleToggleChange(newToggleIndex: 0 | 1 | 2) {\r\n        this.toggleIndex = newToggleIndex;\r\n        if (this.searchInput) {\r\n            this.filterAccordingToSearchInputHelper();\r\n        } else {\r\n            this.filterAccordingToToggleHelper();\r\n        }\r\n        this.updateQueryParamsHelper();\r\n    }\r\n\r\n    handleSearchInput(input: string) {\r\n        this.searchInput = input;\r\n        if (this.searchInput || this.searchInput === '') {\r\n            this.filterAccordingToSearchInputHelper();\r\n        } else {\r\n            this.resetSearchInputFilterHelper();\r\n        }\r\n        this.updateQueryParamsHelper();\r\n    }\r\n\r\n    handleNavigateToHomePage() {\r\n        this.router.navigate([HOME_ROUTE]);\r\n    }\r\n\r\n    handleNavigateToProfile(): void {\r\n        this.router.navigate([PROFILE_ROUTE]);\r\n    }\r\n\r\n    handleGetNotification(id: number) {\r\n        return this.notifications.filter((notification) => notification.lotId === id);\r\n    }\r\n\r\n    handleInfoModal() {\r\n        this.dialog.open(StepInfoModalComponent, {\r\n            panelClass: 'g-modal-container',\r\n            data: {\r\n                stepInfo: STEP_INFO_DATA['Negotiate'],\r\n            },\r\n        });\r\n    }\r\n\r\n    // #endregion\r\n\r\n    // #region Helper Methods/Functions\r\n    updateQueryParamsHelper() {\r\n        let queryParams = this.searchInput\r\n            ? { toggleIndex: this.toggleIndex, searchInput: this.searchInput }\r\n            : { toggleIndex: this.toggleIndex };\r\n        this.router.navigate([], {\r\n            relativeTo: this.route,\r\n            queryParams,\r\n            replaceUrl: true,\r\n        });\r\n    }\r\n\r\n    filterAccordingToToggleHelper() {\r\n        this.toggleIndex\r\n            ? (this.filteredNegotiatingRoomCards = this.negotiatingRoomCards.filter(\r\n                  (negotiationCard) => negotiationCard.lotType === this.negotiatingToggles[this.toggleIndex],\r\n              ))\r\n            : (this.filteredNegotiatingRoomCards = this.negotiatingRoomCards);\r\n\r\n        this.animateInHelper();\r\n    }\r\n\r\n    filterAccordingToSearchInputHelper() {\r\n        this.filterAccordingToToggleHelper();\r\n        this.filteredNegotiatingRoomCards = this.filteredNegotiatingRoomCards.filter((cards) => {\r\n            return cards.lotName.toLocaleLowerCase().includes(this.searchInput.toLocaleLowerCase());\r\n        });\r\n    }\r\n\r\n    resetSearchInputFilterHelper() {\r\n        this.filteredNegotiatingRoomCards = this.negotiatingRoomCards;\r\n        this.filterAccordingToToggleHelper();\r\n    }\r\n\r\n    animateInHelper() {\r\n        this.animateIn = true;\r\n        setTimeout(() => {\r\n            this.animateIn = false;\r\n        }, 300);\r\n    }\r\n\r\n    // #endregion\r\n}\r\n","<div class=\"l-container\">\r\n    <!-- #region Header -->\r\n\r\n    <div class=\"l-header\">\r\n        <img\r\n            class=\"l-home-img\"\r\n            src=\"./assets/icons/home-blue-icon.svg\"\r\n            alt=\"Blue bell\"\r\n            (click)=\"handleNavigateToHomePage()\"\r\n        />\r\n        <div class=\"g-logo-header-container\">\r\n            <img\r\n                class=\"g-header-mx-icon\"\r\n                src=\"./assets/icons/MX-small-logo.svg\"\r\n                alt=\"home icon\"\r\n                (click)=\"handleNavigateToHomePage()\"\r\n            />\r\n            <h2 class=\"g-text-h2-dark mb-0\">Negotiating Room</h2>\r\n        </div>\r\n        <div class=\"g-profile-icon-container\">\r\n            <img\r\n                class=\"g-profile-icon\"\r\n                src=\"./assets/icons/profile-icon.svg\"\r\n                alt=\"home icon\"\r\n                (click)=\"handleNavigateToProfile()\"\r\n            />\r\n        </div>\r\n    </div>\r\n\r\n    <!-- #endregion -->\r\n\r\n    <!-- #region Loading Spinner -->\r\n\r\n    <div *ngIf=\"isLoading; else negotiationRoomLoaded\" class=\"l-spinner-holder\">\r\n        <mat-progress-spinner\r\n            class=\"g-mat-progress-spinner\"\r\n            mode=\"indeterminate\"\r\n            [diameter]=\"40\"\r\n        ></mat-progress-spinner>\r\n    </div>\r\n\r\n    <!-- #endregion -->\r\n\r\n    <!-- #region Negotiating Room Content -->\r\n\r\n    <ng-template #negotiationRoomLoaded>\r\n        <div\r\n            *ngIf=\"negotiatingRoomCards && negotiatingRoomCards.length; else noNegotiatingRoomCards\"\r\n            class=\"l-content-container\"\r\n        >\r\n            <!-- #region Tab Header -->\r\n            <app-dashboard-header\r\n                [activeRoute]=\"'negotiations'\"\r\n                [toggleIndex]=\"toggleIndex\"\r\n                [toggles]=\"negotiatingToggles\"\r\n                [showSearchBar]=\"searchInput || searchInput === ''\"\r\n                ($changeToggleEvent)=\"handleToggleChange($event)\"\r\n                ($searchInputEvent)=\"handleSearchInput($event)\"\r\n            ></app-dashboard-header>\r\n\r\n            <!-- #endregion -->\r\n\r\n            <!-- #region Negotiating Room Cards -->\r\n\r\n            <div\r\n                *ngFor=\"let negotiatingRoomCard of filteredNegotiatingRoomCards\"\r\n                class=\"l-card-container\"\r\n                [class.g-fade-in]=\"animateIn\"\r\n            >\r\n                <app-negotiation-card\r\n                    *ngIf=\"!notificationLotIds.includes(negotiatingRoomCard.id); else cardHasNotification\"\r\n                    [negotiationCard]=\"negotiatingRoomCard\"\r\n                    [hasActiveAgent]=\"hasActiveAgent\"\r\n                ></app-negotiation-card>\r\n                <ng-template #cardHasNotification>\r\n                    <app-negotiation-card\r\n                        [negotiationCard]=\"negotiatingRoomCard\"\r\n                        [notifications]=\"handleGetNotification(negotiatingRoomCard.id)\"\r\n                        [hasActiveAgent]=\"hasActiveAgent\"\r\n                    ></app-negotiation-card>\r\n                </ng-template>\r\n            </div>\r\n\r\n            <!-- #endregion -->\r\n        </div>\r\n\r\n        <ng-template #noNegotiatingRoomCards>\r\n            <div class=\"l-no-content-container\">\r\n                <h1 class=\"g-text-h2-dark mx-2 mb-3\">It's a bit empty here...</h1>\r\n                <p class=\"g-text-p-dark mx-5\">Match with Lots to begin the negotiating process.</p>\r\n            </div>\r\n        </ng-template>\r\n    </ng-template>\r\n\r\n    <!-- #endregion -->\r\n</div>\r\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n// #region NgRx/RxJs\r\n\r\nimport { select, Store } from '@ngrx/store';\r\nimport { take, takeUntil } from 'rxjs/operators';\r\nimport { Actions, ofType } from '@ngrx/effects';\r\nimport * as fromRoot from 'src/app/features/dashboard/dashboard.selectors';\r\nimport * as actions from 'src/app/core/helpers/index.actions';\r\nimport * as snackBarConfigs from 'src/app/core/helpers/snackbar';\r\n\r\n// #endregion\r\n\r\n// #region Models/Constants\r\n\r\nimport {\r\n    HOME_ROUTE,\r\n    adminEmails,\r\n    ratingData,\r\n    verificationTypes,\r\n    version,\r\n    emailRegex,\r\n    DOCUMENT_VIEWER_ROUTE,\r\n} from 'src/app/core/helpers/constants';\r\nimport { bbbeeRating, Tab, VerificationType } from 'src/app/core/models/viewModels';\r\nimport {\r\n    AdditionalEntityDetail,\r\n    DeliveryPoint,\r\n    AdditionalEntityDetailsClass,\r\n    User,\r\n    UserVerification,\r\n    Entity,\r\n} from 'src/app/core/models/queryModels';\r\n\r\n// #endregion\r\n\r\n// #region Modals\r\n\r\nimport { MatLegacyDialog as MatDialog } from '@angular/material/legacy-dialog';\r\nimport { DeliveryPointModalComponent } from 'src/app/features/shared/components/delivery-point-modal/delivery-point-modal.component';\r\nimport { LotsAnalyticsModalComponent } from '../lot-analytics-modal/lots-analytics-modal.component';\r\nimport { SkuduAnalyticsModalComponent } from '../skudu-analytics-modal/skudu-analytics-modal.component';\r\nimport { VerificationModalComponent } from '../verification-modal/verification-modal.component';\r\n\r\n// #endregion\r\n\r\n// #region Other\r\n\r\nimport { cloneDeep } from 'lodash';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Dictionary } from '@ngrx/entity';\r\nimport { ConfirmationModalComponent } from 'src/app/features/shared/components/confirmation-modal/confirmation-modal.component';\r\nimport { DeleteAccountModalComponent } from '../delete-account-modal/delete-account-modal.component';\r\nimport { GrainSaModalComponent } from 'src/app/features/shared/components/grain-sa-modal/grain-sa-modal.component';\r\n\r\n// #endregion\r\n\r\n@Component({\r\n    selector: 'app-profile',\r\n    templateUrl: './profile.component.html',\r\n    styleUrls: ['./profile.component.scss'],\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n    @Output() toggleIsCreateOwnEvent: EventEmitter<any> = new EventEmitter();\r\n\r\n    profileTabs: Tab[] = ['Entity', 'Delivery/Admin', 'User'];\r\n    tabIndex: number = 0;\r\n\r\n    entityDetails: AdditionalEntityDetail;\r\n    additionalEntityDetails: AdditionalEntityDetail = new AdditionalEntityDetailsClass();\r\n\r\n    deliveryPoints: DeliveryPoint[];\r\n    userDeliveryPoints: DeliveryPoint[];\r\n    publicDeliveryPoints: DeliveryPoint[];\r\n\r\n    verificationUsers: User[] = [];\r\n    filteredVerificationUsers: User[] = [];\r\n    selectedVerificationUsers: User[] = [];\r\n    verificationTypes: Dictionary<VerificationType> = verificationTypes;\r\n    selectedVerificationType: VerificationType = null as VerificationType;\r\n    userSearchTerm: string = '';\r\n\r\n    user: User;\r\n    editableUser: User;\r\n    profileHasBeenEdited: boolean = false;\r\n    grainSAId: string;\r\n\r\n    options: any = {\r\n        types: ['(regions)'],\r\n    };\r\n\r\n    ratingData: bbbeeRating[] = ratingData;\r\n\r\n    version: string = version;\r\n\r\n    isCreateOwn: boolean = false;\r\n    isAdmin: boolean = false;\r\n\r\n    isEntityLoading: boolean = true;\r\n    isDeliveryPointLoading: boolean = true;\r\n    isUsersLoading: boolean = true;\r\n    isDetailsActionLoading: boolean = false;\r\n    isAnalyticsActionLoading: boolean = false;\r\n    isGetLotsActionLoading: boolean = false;\r\n    isUserProfileActionLoading: boolean = false;\r\n    isDeleteActionLoading: boolean = false;\r\n    isGrainSAVerified: boolean = false;\r\n\r\n    destroyed$: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n    constructor(\r\n        private route: ActivatedRoute,\r\n        private router: Router,\r\n        private store: Store,\r\n        private actions$: Actions,\r\n        public dialog: MatDialog,\r\n        private snackbar: MatSnackBar,\r\n    ) {}\r\n\r\n    ngOnInit(): void {\r\n        this.route.queryParams.pipe(take(1)).subscribe((params) => {\r\n            if (params) {\r\n                if (params.tabIndex) {\r\n                    this.tabIndex = +params.tabIndex;\r\n                }\r\n                this.updateQueryParamsHelper();\r\n            }\r\n        });\r\n\r\n        this.store.pipe(select(fromRoot.authSelectors.getUser), takeUntil(this.destroyed$)).subscribe((user) => {\r\n            this.user = user;\r\n            this.editableUser = cloneDeep(this.user);\r\n            if (this.editableUser.grainSA) {\r\n                this.grainSAId = this.editableUser.grainSA.grainSAId;\r\n                this.isGrainSAVerified = this.editableUser.grainSA.isVerified;\r\n            }\r\n            this.isAdmin = adminEmails.includes(user?.email);\r\n            this.requestVerificationUsersHelper();\r\n        });\r\n\r\n        this.store\r\n            .pipe(select(fromRoot.authSelectors.getAdditionalEntityDetails), takeUntil(this.destroyed$))\r\n            .subscribe((entityDetails) => {\r\n                if (entityDetails && Object.keys(entityDetails).length) {\r\n                    this.entityDetails = cloneDeep(entityDetails);\r\n                    this.isEntityLoading = false;\r\n                }\r\n            });\r\n\r\n        this.store\r\n            .pipe(select(fromRoot.deliveryPointsSelectors.getAllDeliveryPoints), takeUntil(this.destroyed$))\r\n            .subscribe((deliveryPoints) => {\r\n                if (deliveryPoints) {\r\n                    this.deliveryPoints = deliveryPoints;\r\n                }\r\n            });\r\n\r\n        this.store.pipe(select(fromRoot.appSelectors.getUsers), takeUntil(this.destroyed$)).subscribe((users) => {\r\n            if (users.length) {\r\n                this.verificationUsers = users;\r\n                this.filteredVerificationUsers = this.verificationUsers;\r\n                this.isUsersLoading = false;\r\n            }\r\n        });\r\n\r\n        this.actions$\r\n            .pipe(\r\n                ofType(\r\n                    actions.deliveryPointActions.EntityDeliveryPointsSuccess,\r\n                    actions.deliveryPointActions.EntityDeliveryPointsFail,\r\n                ),\r\n                takeUntil(this.destroyed$),\r\n            )\r\n            .subscribe(() => (this.isDeliveryPointLoading = false));\r\n\r\n        this.store.dispatch(actions.authActions.ReqEntityDisplayInfo());\r\n        this.store.dispatch(actions.deliveryPointActions.ReqEntityDeliveryPoints({ executedTime: Date.now() }));\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.destroyed$.next();\r\n    }\r\n\r\n    handleNavigateToHomePage(): void {\r\n        this.router.navigate([HOME_ROUTE]);\r\n    }\r\n\r\n    handleTabChange(newTabIndex: number): void {\r\n        this.tabIndex = newTabIndex;\r\n        this.requestVerificationUsersHelper();\r\n        this.updateQueryParamsHelper();\r\n    }\r\n\r\n    handleCreateDeliveryPoint(): void {\r\n        this.isCreateOwn = true;\r\n        this.updateQueryParamsHelper();\r\n\r\n        this.isDeliveryPointLoading = true;\r\n\r\n        const dialogRef = this.dialog.open(DeliveryPointModalComponent, {\r\n            data: {\r\n                deliveryPointId: null,\r\n                showInitial: false,\r\n                isView: false,\r\n                fromProfile: true,\r\n                hidePublicDeliveryPoints: false,\r\n            },\r\n            panelClass: 'g-modal-fullwidth-container',\r\n            autoFocus: false,\r\n        });\r\n\r\n        dialogRef\r\n            .afterClosed()\r\n            .pipe(take(1))\r\n            .subscribe(() => {\r\n                this.store.dispatch(actions.deliveryPointActions.ReqEntityDeliveryPoints({ executedTime: Date.now() }));\r\n\r\n                this.actions$\r\n                    .pipe(ofType(actions.deliveryPointActions.EntityDeliveryPointsSuccess), take(1))\r\n                    .subscribe(() => {\r\n                        this.isCreateOwn = false;\r\n                        this.updateQueryParamsHelper();\r\n                    });\r\n            });\r\n    }\r\n\r\n    handleEditDeliveryPoint(id: number): void {\r\n        this.isCreateOwn = true;\r\n        this.updateQueryParamsHelper();\r\n\r\n        this.isDeliveryPointLoading = true;\r\n\r\n        const dialogRef = this.dialog.open(DeliveryPointModalComponent, {\r\n            data: {\r\n                deliveryPointId: id,\r\n                showInitial: false,\r\n                isView: true,\r\n                fromProfile: true,\r\n                hideDeliveryPublicDeliveryPoints: false,\r\n            },\r\n            panelClass: 'g-modal-fullwidth-container',\r\n            autoFocus: false,\r\n        });\r\n\r\n        dialogRef\r\n            .afterClosed()\r\n            .pipe(take(1))\r\n            .subscribe(() => {\r\n                this.store.dispatch(actions.deliveryPointActions.ReqEntityDeliveryPoints({ executedTime: Date.now() }));\r\n\r\n                this.actions$\r\n                    .pipe(ofType(actions.deliveryPointActions.EntityDeliveryPointsSuccess), take(1))\r\n                    .subscribe(() => {\r\n                        this.isCreateOwn = false;\r\n                        this.updateQueryParamsHelper();\r\n                    });\r\n            });\r\n    }\r\n\r\n    handleFilterUsers(): void {\r\n        const lowerCaseSearchTerm: string = this.userSearchTerm.toLowerCase();\r\n        this.filteredVerificationUsers = this.verificationUsers.filter((verificationUser) => {\r\n            const userNameAndEmail: string =\r\n                `${verificationUser.firstname} ${verificationUser.lastname} ${verificationUser.email}`.toLowerCase();\r\n            if (userNameAndEmail.includes(lowerCaseSearchTerm)) {\r\n                return true;\r\n            }\r\n            const relatedEntityNames: Entity = verificationUser.entities?.find((entity) =>\r\n                entity.name.toLowerCase().includes(lowerCaseSearchTerm),\r\n            );\r\n            return !!relatedEntityNames;\r\n        });\r\n        if (this.selectedVerificationType) {\r\n            this.filterByVerificationTypeHelper();\r\n        }\r\n    }\r\n\r\n    handleOpenVerificationModal(isFilter: boolean): void {\r\n        isFilter && this.handleClearUserSelection();\r\n\r\n        const dialogRef = this.dialog.open(VerificationModalComponent, {\r\n            data: {\r\n                isFilter,\r\n                verificationTypes: this.verificationTypes,\r\n                selectedVerificationType: this.selectedVerificationType,\r\n            },\r\n            panelClass: 'g-modal-fullwidth-container',\r\n        });\r\n\r\n        dialogRef\r\n            .afterClosed()\r\n            .pipe(take(1))\r\n            .subscribe((verificationType) => {\r\n                if (verificationType || verificationType === null) {\r\n                    this.toggleVerificationTypeHelper(verificationType, isFilter);\r\n                    if (!isFilter) {\r\n                        this.isUsersLoading = true;\r\n                        this.updateUsersVerificationTypeHelper();\r\n                    }\r\n                }\r\n            });\r\n    }\r\n\r\n    handleToggleSelectUser(user: User): void {\r\n        this.selectedVerificationUsers.indexOf(user) > -1\r\n            ? this.selectedVerificationUsers.splice(this.selectedVerificationUsers.indexOf(user), 1)\r\n            : this.selectedVerificationUsers.push(user);\r\n    }\r\n\r\n    handleClearUserSelection(): void {\r\n        this.selectedVerificationUsers = [];\r\n    }\r\n\r\n    handleToggleExFarm(option: boolean): void {\r\n        if (option !== this.entityDetails.exFarm) {\r\n            this.entityDetails.exFarm = option;\r\n        }\r\n    }\r\n\r\n    handleSaveEntityDetails(): void {\r\n        this.isDetailsActionLoading = true;\r\n        const isEmail = this.validateEmailHelper(this.entityDetails.email);\r\n\r\n        if (this.entityDetails.legalEntityName.length < 2) {\r\n            this.isDetailsActionLoading = false;\r\n            this.snackbar.open('Please enter a valid entity name.', 'CLOSE', snackBarConfigs.errorConfig);\r\n        } else {\r\n            if (isEmail) {\r\n                this.actions$\r\n                    .pipe(\r\n                        ofType(actions.authActions.UpdateEntityInfoSuccess, actions.authActions.UpdateEntityInfoFail),\r\n                        take(1),\r\n                    )\r\n                    .subscribe(() => {\r\n                        this.isDetailsActionLoading = false;\r\n                    });\r\n\r\n                this.store.dispatch(\r\n                    actions.authActions.ReqUpdateEntityInfo({ additionalEntityDetails: this.entityDetails }),\r\n                );\r\n            } else {\r\n                this.isDetailsActionLoading = false;\r\n                this.snackbar.open('Please enter a valid Email', 'CLOSE', snackBarConfigs.errorConfig);\r\n            }\r\n        }\r\n    }\r\n\r\n    handleRequestAnalytics(): void {\r\n        this.store.dispatch(actions.appActions.ReqGetAnalytics());\r\n        this.isAnalyticsActionLoading = true;\r\n        this.actions$.pipe(ofType(actions.appActions.GetAnalyticsSuccess), take(1)).subscribe(({ analytics }) => {\r\n            this.isAnalyticsActionLoading = false;\r\n\r\n            this.dialog.open<SkuduAnalyticsModalComponent>(SkuduAnalyticsModalComponent, {\r\n                data: {\r\n                    numberOfBuyingScouts: analytics.numberOfBuyingScouts,\r\n                    numberOfSellingScouts: analytics.numberOfSellingScouts,\r\n                    numberOfBuyingLots: analytics.numberOfBuyingLots,\r\n                    numberOfSellingLots: analytics.numberOfSellingLots,\r\n                    totalSkuduMatches: analytics.totalSkuduMatches,\r\n                    volumeNegotiatedInTons: analytics.volumeNegotiatedInTons,\r\n                },\r\n                panelClass: 'g-modal-container',\r\n            });\r\n        });\r\n        this.actions$.pipe(ofType(actions.appActions.GetAnalyticsFail), take(1)).subscribe(() => {\r\n            this.isAnalyticsActionLoading = false;\r\n        });\r\n    }\r\n\r\n    handleSelectLocation($event): void {\r\n        this.editableUser.location = $event.formatted_address;\r\n    }\r\n\r\n    handleSaveUserProfile(): void {\r\n        this.isUserProfileActionLoading = true;\r\n\r\n        this.actions$\r\n            .pipe(\r\n                ofType(actions.authActions.ReqUpdateUserDetailsSuccess, actions.authActions.ReqUpdateUserDetailsFail),\r\n                take(1),\r\n            )\r\n            .subscribe(() => {\r\n                this.isUserProfileActionLoading = false;\r\n            });\r\n\r\n        if (!this.editableUser.grainSA || this.editableUser.grainSA.grainSAId !== this.grainSAId) {\r\n            this.editableUser.grainSA = { grainSAId: this.grainSAId || null, isVerified: false };\r\n        }\r\n\r\n        this.store.dispatch(\r\n            actions.authActions.ReqUpdateUserDetails({ user: { ...this.editableUser, updatedAt: Date.now() } }),\r\n        );\r\n    }\r\n\r\n    handleGetLotsInDateRange(): void {\r\n        const dialogRef = this.dialog.open<LotsAnalyticsModalComponent>(LotsAnalyticsModalComponent, {\r\n            panelClass: 'g-modal-container',\r\n        });\r\n        dialogRef.afterClosed().subscribe((dateRange) => {\r\n            this.isGetLotsActionLoading = true;\r\n            this.store.dispatch(actions.appActions.ReqGetLotsInDateRange({ dateRange }));\r\n        });\r\n        this.actions$\r\n            .pipe(\r\n                ofType(actions.appActions.GetLotsInDateRangeSuccess, actions.appActions.GetLotsInDateRangeFail),\r\n                take(1),\r\n            )\r\n            .subscribe(() => {\r\n                this.isGetLotsActionLoading = false;\r\n            });\r\n    }\r\n\r\n    handleLogout(): void {\r\n        this.store.dispatch(actions.authActions.ReqLogoutAction());\r\n    }\r\n\r\n    handleDeletionRequestModal() {\r\n        this.isDeleteActionLoading = true;\r\n        const dialogRef = this.dialog.open(DeleteAccountModalComponent, {\r\n            panelClass: 'g-modal-container',\r\n        });\r\n        dialogRef.afterClosed().subscribe((response) => {\r\n            if (response) {\r\n                this.store.dispatch(actions.authActions.ReqDeleteAccountEmail({ user: this.user }));\r\n            } else {\r\n                this.isDeleteActionLoading = false;\r\n            }\r\n        });\r\n        this.actions$\r\n            .pipe(\r\n                ofType(actions.authActions.ReqDeleteAccountEmailSuccess, actions.authActions.ReqDeleteAccountEmailFail),\r\n                take(1),\r\n            )\r\n            .subscribe(() => {\r\n                this.isDeleteActionLoading = false;\r\n            });\r\n    }\r\n\r\n    handleGrainSAModal() {\r\n        this.dialog.open(GrainSaModalComponent, {\r\n            panelClass: 'g-modal-container',\r\n            autoFocus: false,\r\n            data: { showSubscription: true },\r\n        });\r\n    }\r\n\r\n    updateQueryParamsHelper(): void {\r\n        let queryParams = this.isCreateOwn\r\n            ? {\r\n                  tabIndex: this.tabIndex,\r\n                  isCreateOwn: this.isCreateOwn,\r\n              }\r\n            : { tabIndex: this.tabIndex };\r\n        this.router.navigate([], {\r\n            relativeTo: this.route,\r\n            queryParams,\r\n            replaceUrl: true,\r\n        });\r\n    }\r\n\r\n    validateEmailHelper(email: string): boolean {\r\n        const regularExpression = emailRegex;\r\n        return regularExpression.test(String(email).toLowerCase());\r\n    }\r\n\r\n    requestVerificationUsersHelper(): void {\r\n        if (this.isAdmin && this.tabIndex === 1 && !this.verificationUsers.length) {\r\n            this.store.dispatch(actions.appActions.ReqGetUsersForVerification());\r\n        }\r\n    }\r\n\r\n    toggleVerificationTypeHelper(verificationType: VerificationType | null, isFilter: boolean): void {\r\n        this.selectedVerificationType = verificationType;\r\n        isFilter && this.handleFilterUsers();\r\n    }\r\n\r\n    filterByVerificationTypeHelper(): void {\r\n        this.filteredVerificationUsers = this.selectedVerificationType\r\n            ? this.filteredVerificationUsers.filter(\r\n                  (filteredVerificationUser) =>\r\n                      filteredVerificationUser.verification?.id === this.selectedVerificationType.id,\r\n              )\r\n            : this.verificationUsers;\r\n    }\r\n\r\n    updateUsersVerificationTypeHelper() {\r\n        const dialogRef = this.dialog.open(ConfirmationModalComponent, {\r\n            data: { currentAction: 'update', currentItem: 'user verifications' },\r\n            panelClass: 'g-modal-container',\r\n        });\r\n\r\n        dialogRef\r\n            .afterClosed()\r\n            .pipe(take(1))\r\n            .subscribe((shouldDispatch) => {\r\n                if (shouldDispatch) {\r\n                    this.actions$\r\n                        .pipe(\r\n                            ofType(\r\n                                actions.authActions.ReqUpdateUserVerificationStatusSuccess,\r\n                                actions.authActions.ReqUpdateUserVerificationStatusFail,\r\n                            ),\r\n                            take(1),\r\n                        )\r\n                        .subscribe(() => {\r\n                            this.isUsersLoading = false;\r\n                        });\r\n\r\n                    this.store.dispatch(\r\n                        actions.authActions.ReqUpdateUserVerificationStatus({\r\n                            userVerifications: this.transformUsersForVerificationHelper(this.selectedVerificationUsers),\r\n                            showSnackBar: true,\r\n                        }),\r\n                    );\r\n\r\n                    this.handleClearUserSelection();\r\n                    this.toggleVerificationTypeHelper(null, true);\r\n                }\r\n            });\r\n    }\r\n\r\n    transformUsersForVerificationHelper(verificationUsers: User[]): UserVerification[] {\r\n        const verificationDate: number = Date.now();\r\n        return verificationUsers.map((verificationUser) => {\r\n            return {\r\n                uid: verificationUser.uid,\r\n                fullName: `${verificationUser.firstname} ${verificationUser.lastname}`,\r\n                verification: {\r\n                    id: this.selectedVerificationType.id,\r\n                    verificationDate,\r\n                },\r\n            };\r\n        });\r\n    }\r\n\r\n    toggleProfileEditStatusHelper(): void {\r\n        !this.profileHasBeenEdited && (this.profileHasBeenEdited = true);\r\n    }\r\n\r\n    handleRouteToDocumentViewer(name: string) {\r\n        this.router.navigate([`${DOCUMENT_VIEWER_ROUTE}/${name}`]);\r\n    }\r\n}\r\n","<div *ngIf=\"this.entityDetails\" class=\"l-container\">\r\n    <!-- #region header -->\r\n\r\n    <div class=\"l-header\">\r\n        <img\r\n            class=\"l-home-img\"\r\n            src=\"./assets/icons/home-blue-icon.svg\"\r\n            alt=\"Blue bell\"\r\n            (click)=\"handleNavigateToHomePage()\"\r\n        />\r\n        <div class=\"l-header-img-container\">\r\n            <img src=\"./assets/images/MX-logo-full.svg\" alt=\"MX Match Logo\" (click)=\"handleNavigateToHomePage()\" />\r\n        </div>\r\n        <img class=\"l-profile-img\" src=\"./assets/icons/user-blue-selected-icon.svg\" alt=\"User Icon\" />\r\n    </div>\r\n\r\n    <!-- #endregion -->\r\n\r\n    <!-- #region  Page Tabs -->\r\n\r\n    <mat-tab-group\r\n        class=\"g-mat-tabs-dashboard l-tabs\"\r\n        [selectedIndex]=\"tabIndex\"\r\n        (selectedTabChange)=\"handleTabChange($event.index)\"\r\n    >\r\n        <!-- #region Entity -->\r\n\r\n        <mat-tab label=\"{{ profileTabs[0] }}\">\r\n            <!-- #region Loading Spinner -->\r\n\r\n            <div *ngIf=\"isEntityLoading; else entityHasLoaded\" class=\"l-spinner-holder\">\r\n                <mat-progress-spinner\r\n                    class=\"g-mat-progress-spinner\"\r\n                    mode=\"indeterminate\"\r\n                    [diameter]=\"40\"\r\n                ></mat-progress-spinner>\r\n            </div>\r\n\r\n            <!-- #endregion -->\r\n\r\n            <!-- #region Tab Content -->\r\n\r\n            <ng-template #entityHasLoaded>\r\n                <div class=\"l-content-holder\">\r\n                    <div class=\"g-form-input-group\">\r\n                        <label class=\"g-form-label\">Legal Entity Name</label>\r\n                        <div class=\"g-text-input-container\">\r\n                            <input\r\n                                class=\"g-input-text-no-icon\"\r\n                                type=\"text\"\r\n                                name=\"fullName\"\r\n                                placeholder=\"Legal Entity Name\"\r\n                                [(ngModel)]=\"entityDetails.legalEntityName\"\r\n                                required\r\n                            />\r\n                        </div>\r\n                        <div class=\"g-form-input-group mt-3\">\r\n                            <label class=\"g-form-label\">Entity Email</label>\r\n\r\n                            <div class=\"g-text-input-container\">\r\n                                <img class=\"g-input-text-icon\" src=\"../../../assets/icons/mail-icon.svg\" alt=\"\" />\r\n                                <input\r\n                                    class=\"g-input-text\"\r\n                                    type=\"email\"\r\n                                    placeholder=\"Entity Email\"\r\n                                    [(ngModel)]=\"entityDetails.email\"\r\n                                    name=\"email\"\r\n                                    required\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <!-- #region Ex Farm Toggle -->\r\n\r\n                    <div class=\"w-100 d-flex flex-column mt-3\">\r\n                        <label class=\"g-form-label\">Do you have the ability to deliver Ex-Farm?</label>\r\n\r\n                        <div class=\"l-delivery-container\">\r\n                            <button\r\n                                class=\"l-delivery-option\"\r\n                                [class.l-active-delivery]=\"entityDetails.exFarm\"\r\n                                (click)=\"handleToggleExFarm(true)\"\r\n                            >\r\n                                Yes<img\r\n                                    class=\"l-selected-icon\"\r\n                                    src=\"./assets/icons/unselected-icon.svg\"\r\n                                    [src]=\"\r\n                                        entityDetails.exFarm\r\n                                            ? './assets/icons/selected-blue-icon.svg'\r\n                                            : './assets/icons/unselected-icon.svg'\r\n                                    \"\r\n                                    alt=\"selected-icon\"\r\n                                />\r\n                            </button>\r\n                            <button\r\n                                class=\"l-delivery-option\"\r\n                                [class.l-active-delivery]=\"!entityDetails.exFarm\"\r\n                                (click)=\"handleToggleExFarm(false)\"\r\n                            >\r\n                                No\r\n                                <img\r\n                                    class=\"l-selected-icon\"\r\n                                    [src]=\"\r\n                                        !entityDetails.exFarm\r\n                                            ? './assets/icons/selected-blue-icon.svg'\r\n                                            : './assets/icons/unselected-icon.svg'\r\n                                    \"\r\n                                    alt=\"selected-icon\"\r\n                                />\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <!-- #endregion -->\r\n\r\n                    <!-- #region B-BBEE Rating -->\r\n\r\n                    <div class=\"w-100 d-flex flex-column mt-3\">\r\n                        <label class=\"g-form-label\">Do you have a B-BBEE rating?</label>\r\n                        <mat-select class=\"g-form-select\" [(ngModel)]=\"entityDetails.bbbeeRating\" name=\"bbbeeRating\">\r\n                            <mat-option *ngFor=\"let rating of ratingData\" [value]=\"ratingData.indexOf(rating)\">\r\n                                {{ rating }}\r\n                            </mat-option>\r\n                        </mat-select>\r\n                    </div>\r\n\r\n                    <p class=\"g-text-p-small-grey mt-2\">\r\n                        If your turnover is less than R10 Million, you can choose level 4.\r\n                    </p>\r\n\r\n                    <!-- #endregion -->\r\n\r\n                    <!-- #region Save Entity Details Button -->\r\n\r\n                    <button mat-flat-button class=\"g-primary-button\" (click)=\"handleSaveEntityDetails()\">\r\n                        <mat-progress-spinner\r\n                            *ngIf=\"isDetailsActionLoading; else showButtonText\"\r\n                            class=\"g-mat-progress-spinner-blue mx-auto\"\r\n                            mode=\"indeterminate\"\r\n                            [diameter]=\"30\"\r\n                        ></mat-progress-spinner>\r\n                        <ng-template #showButtonText> Save Details </ng-template>\r\n                    </button>\r\n\r\n                    <!-- #endregion -->\r\n                </div>\r\n            </ng-template>\r\n\r\n            <!-- #endregion -->\r\n        </mat-tab>\r\n\r\n        <!-- #endregion -->\r\n\r\n        <!-- #region Delivery/Admin Tab -->\r\n\r\n        <mat-tab label=\"{{ profileTabs[1].split('/')[isAdmin ? 1 : 0] }}\">\r\n            <!-- #region Delivery -->\r\n\r\n            <ng-container *ngIf=\"!isAdmin; else showAdminTab\">\r\n                <div *ngIf=\"isDeliveryPointLoading; else showDeliveryPoints\" class=\"l-spinner-holder\">\r\n                    <mat-progress-spinner\r\n                        class=\"g-mat-progress-spinner\"\r\n                        mode=\"indeterminate\"\r\n                        [diameter]=\"40\"\r\n                    ></mat-progress-spinner>\r\n                </div>\r\n                <ng-template #showDeliveryPoints>\r\n                    <div class=\"l-content-holder\">\r\n                        <h2 class=\"g-text-h2-dark\"><b>My delivery points</b></h2>\r\n                        <div\r\n                            class=\"l-type-option g-clickable l-create-own-button mt-3\"\r\n                            (click)=\"handleCreateDeliveryPoint()\"\r\n                        >\r\n                            Create new delivery point\r\n                            <img\r\n                                class=\"l-create-icon g-clickable\"\r\n                                src=\"./assets/icons/plus-icon-white.svg\"\r\n                                alt=\"create\"\r\n                            />\r\n                        </div>\r\n                        <div *ngFor=\"let deliveryPoint of deliveryPoints\" class=\"w-100\">\r\n                            <div class=\"l-type-option g-clickable\" (click)=\"handleEditDeliveryPoint(deliveryPoint.id)\">\r\n                                {{ deliveryPoint.name }}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </ng-template>\r\n            </ng-container>\r\n\r\n            <!-- #endregion -->\r\n\r\n            <!-- #region Admin -->\r\n\r\n            <ng-template #showAdminTab>\r\n                <div *ngIf=\"isUsersLoading; else showAdminTabContent\" class=\"l-spinner-holder\">\r\n                    <mat-progress-spinner\r\n                        class=\"g-mat-progress-spinner\"\r\n                        mode=\"indeterminate\"\r\n                        [diameter]=\"40\"\r\n                    ></mat-progress-spinner>\r\n                </div>\r\n                <ng-template #showAdminTabContent>\r\n                    <div class=\"l-input-container\">\r\n                        <!-- #region Search Input -->\r\n\r\n                        <img class=\"l-search-icon\" src=\"./assets/icons/search-grey-icon.svg\" alt=\"Magnifying glass\" />\r\n                        <input\r\n                            class=\"g-form-input l-search-input\"\r\n                            [(ngModel)]=\"userSearchTerm\"\r\n                            (ngModelChange)=\"handleFilterUsers()\"\r\n                            name=\"userSearch\"\r\n                            type=\"text\"\r\n                            [placeholder]=\"'Search...'\"\r\n                        />\r\n\r\n                        <!-- #endregion -->\r\n\r\n                        <!-- #region Filter + Download -->\r\n\r\n                        <div class=\"l-header-icons-container\">\r\n                            <div class=\"l-header-icon-holder\" [mat-ripple] (click)=\"handleOpenVerificationModal(true)\">\r\n                                <img class=\"l-header-icon\" src=\"./assets/icons/filter-icon.svg\" alt=\"Filter\" />\r\n                            </div>\r\n                            <div class=\"l-header-icon-holder\" [mat-ripple] (click)=\"handleRequestAnalytics()\">\r\n                                <img\r\n                                    *ngIf=\"!isAnalyticsActionLoading; else showAnalyticsSpinner\"\r\n                                    class=\"l-header-icon\"\r\n                                    src=\"./assets/icons/download-icon.svg\"\r\n                                    alt=\"A piece of paper with a downward facing arrow\"\r\n                                />\r\n                                <ng-template #showAnalyticsSpinner>\r\n                                    <mat-progress-spinner\r\n                                        class=\"g-mat-progress-spinner-blue\"\r\n                                        mode=\"indeterminate\"\r\n                                        [diameter]=\"20\"\r\n                                    ></mat-progress-spinner>\r\n                                </ng-template>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <!-- #endregion -->\r\n                    </div>\r\n                    <div class=\"l-admin-content-holder\">\r\n                        <!-- #region User Count & Current Filter -->\r\n\r\n                        <div class=\"l-user-count-container\">\r\n                            <p class=\"g-text-p text-left\">Users:</p>\r\n                            <div class=\"l-pill g-text-p\">{{ filteredVerificationUsers.length }}</div>\r\n                        </div>\r\n\r\n                        <div *ngIf=\"selectedVerificationType\" class=\"l-current-filter-container mt-2\">\r\n                            <p class=\"g-text-p text-left\">Current Filter:</p>\r\n                            <div class=\"l-pill g-text-p\">\r\n                                {{ selectedVerificationType.name }}\r\n                            </div>\r\n                            <div class=\"l-remove-filter-container\" (click)=\"toggleVerificationTypeHelper(null, true)\">\r\n                                <img\r\n                                    class=\"l-remove-filter-icon\"\r\n                                    src=\"./assets/icons/remove-filter-icon.svg\"\r\n                                    alt=\"closing x\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <!-- #endregion -->\r\n\r\n                        <!-- #region Users Container -->\r\n\r\n                        <div class=\"l-users-container\">\r\n                            <div\r\n                                *ngFor=\"let user of filteredVerificationUsers\"\r\n                                class=\"l-user-container\"\r\n                                [mat-ripple]\r\n                                (click)=\"handleToggleSelectUser(user)\"\r\n                            >\r\n                                <div class=\"l-padded-container\">\r\n                                    <div class=\"l-checkbox-container\">\r\n                                        <input type=\"checkbox\" [checked]=\"selectedVerificationUsers.includes(user)\" />\r\n                                    </div>\r\n                                    <div class=\"l-user-info-container\">\r\n                                        <h2 class=\"g-text-h2 text-left mb-2\">\r\n                                            <b>{{ user.firstname }} {{ user.lastname }}</b>\r\n                                        </h2>\r\n                                        <p class=\"g-text-p text-left\">\r\n                                            {{ user.verification.verificationType }}\r\n                                        </p>\r\n                                        <p class=\"g-text-p text-left\">\r\n                                            {{ user.email }}\r\n                                        </p>\r\n                                    </div>\r\n                                    <div class=\"l-verification-icon-container\">\r\n                                        <img\r\n                                            class=\"l-verification-icon\"\r\n                                            [src]=\"verificationTypes[user.verification.id].source\"\r\n                                            alt=\"verification-icon\"\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <!-- #endregion -->\r\n\r\n                        <!-- #region Select Verification Button -->\r\n\r\n                        <ng-container *ngIf=\"selectedVerificationUsers.length\">\r\n                            <button\r\n                                class=\"g-primary-button mt-3\"\r\n                                mat-flat-button\r\n                                (click)=\"handleOpenVerificationModal(false)\"\r\n                            >\r\n                                Select Verification Type\r\n                            </button>\r\n                            <button\r\n                                class=\"g-secondary-button mt-3\"\r\n                                mat-flat-button\r\n                                (click)=\"handleClearUserSelection()\"\r\n                            >\r\n                                Clear User Selection\r\n                            </button>\r\n                        </ng-container>\r\n\r\n                        <!-- #endregion -->\r\n                    </div>\r\n                </ng-template>\r\n            </ng-template>\r\n\r\n            <!-- #endregion -->\r\n        </mat-tab>\r\n\r\n        <!-- #endregion -->\r\n\r\n        <!-- #region User Tab -->\r\n\r\n        <mat-tab label=\"{{ profileTabs[2] }}\">\r\n            <form class=\"l-content-holder\" *ngIf=\"editableUser\">\r\n                <!-- #region Verification Badge -->\r\n\r\n                <div class=\"l-verification-badge-container\">\r\n                    <app-verification-badge\r\n                        [verificationTypes]=\"verificationTypes\"\r\n                        [isOwn]=\"true\"\r\n                        [verificationId]=\"user?.verification.id\"\r\n                    ></app-verification-badge>\r\n                </div>\r\n\r\n                <!-- #endregion -->\r\n\r\n                <!-- #region First Name -->\r\n\r\n                <div class=\"g-form-input-group mt-3\">\r\n                    <label class=\"g-form-label\">First Name</label>\r\n                    <div class=\"g-text-input-container\">\r\n                        <img class=\"g-input-text-icon\" src=\"./assets/icons/user-blue-icon.svg\" alt=\"\" />\r\n                        <input\r\n                            class=\"g-input-text\"\r\n                            type=\"text\"\r\n                            name=\"firstName\"\r\n                            placeholder=\"Name\"\r\n                            [(ngModel)]=\"editableUser.firstname\"\r\n                            (ngModelChange)=\"toggleProfileEditStatusHelper()\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <!-- #endregion -->\r\n\r\n                <!-- #region Last Name -->\r\n\r\n                <div class=\"g-form-input-group mt-3\">\r\n                    <label class=\"g-form-label\">Last Name</label>\r\n                    <div class=\"g-text-input-container\">\r\n                        <img class=\"g-input-text-icon\" src=\"./assets/icons/user-blue-icon.svg\" alt=\"\" />\r\n                        <input\r\n                            class=\"g-input-text\"\r\n                            type=\"text\"\r\n                            name=\"lastName\"\r\n                            placeholder=\"Name\"\r\n                            [(ngModel)]=\"editableUser.lastname\"\r\n                            (ngModelChange)=\"toggleProfileEditStatusHelper()\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <!-- #endregion -->\r\n\r\n                <!-- #region Email -->\r\n\r\n                <div class=\"g-form-input-group mt-2\">\r\n                    <label class=\"g-form-label\">Email</label>\r\n                    <div class=\"g-text-input-container\">\r\n                        <img class=\"g-input-text-icon\" src=\"./assets/icons/mail-icon.svg\" alt=\"\" />\r\n                        <input\r\n                            class=\"g-input-text\"\r\n                            type=\"email\"\r\n                            name=\"email\"\r\n                            placeholder=\"Email\"\r\n                            [(ngModel)]=\"editableUser.email\"\r\n                            (ngModelChange)=\"toggleProfileEditStatusHelper()\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <!-- #endregion -->\r\n\r\n                <!-- #region Mobile Number -->\r\n\r\n                <div class=\"g-form-input-group mt-2\">\r\n                    <label class=\"g-form-label\">Mobile Number</label>\r\n                    <div class=\"g-text-input-container\">\r\n                        <img class=\"g-input-text-icon\" src=\"./assets/icons/phone-blue-icon.svg\" alt=\"\" />\r\n                        <input\r\n                            class=\"g-input-text\"\r\n                            type=\"tel\"\r\n                            name=\"enterprise\"\r\n                            placeholder=\"\"\r\n                            [(ngModel)]=\"editableUser.phone\"\r\n                            (ngModelChange)=\"toggleProfileEditStatusHelper()\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <!-- #endregion -->\r\n\r\n                <!-- #region Location -->\r\n\r\n                <div class=\"g-form-input-group mt-2\">\r\n                    <label class=\"g-form-label\">Location</label>\r\n                    <div class=\"g-text-input-container\">\r\n                        <img class=\"g-input-text-icon\" src=\"./assets/icons/location-blue-icon.svg\" alt=\"\" />\r\n                        <input\r\n                            class=\"g-input-text\"\r\n                            [class.l-form-input-filled]=\"editableUser.location\"\r\n                            type=\"location\"\r\n                            name=\"location\"\r\n                            [(ngModel)]=\"editableUser.location\"\r\n                            ngx-gp-autocomplete\r\n                            [options]=\"options\"\r\n                            (onAddressChange)=\"handleSelectLocation($event)\"\r\n                            placeholder=\"\"\r\n                            autocomplete=\"off\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <!-- #endregion -->\r\n\r\n                <!-- #region Grain SA Number -->\r\n\r\n                <div class=\"g-form-input-group mt-2\">\r\n                    <label class=\"g-form-label\">Grain SA Number</label>\r\n                    <img class=\"ml-3\" *ngIf=\"isGrainSAVerified\" src=\"./assets/icons/green-tick.svg\" />\r\n                    <div class=\"g-text-input-container\">\r\n                        <img class=\"g-input-text-icon\" src=\"./assets/icons/grainSA-icon.svg\" alt=\"\" />\r\n                        <input\r\n                            class=\"g-input-text\"\r\n                            type=\"text\"\r\n                            name=\"grainSA\"\r\n                            #grainSA=\"ngModel\"\r\n                            pattern=\"[Gg][Ss][Aa][0-9]{3,5}$\"\r\n                            placeholder=\"Optional\"\r\n                            [(ngModel)]=\"grainSAId\"\r\n                        />\r\n                        <img\r\n                            class=\"l-additional-icon\"\r\n                            (click)=\"handleGrainSAModal()\"\r\n                            src=\"../../../assets/icons/info-icon-blue.svg\"\r\n                            alt=\"Grain SA Info view\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <!-- #endregion -->\r\n\r\n                <!-- #region Save User Profile Button -->\r\n\r\n                <button\r\n                    mat-flat-button\r\n                    class=\"g-primary-button mt-3\"\r\n                    (click)=\"handleSaveUserProfile()\"\r\n                    [disabled]=\"grainSA.invalid\"\r\n                    [ngClass]=\"{\r\n                        'g-disabled-button': grainSA.invalid\r\n                    }\"\r\n                >\r\n                    <mat-progress-spinner\r\n                        *ngIf=\"isUserProfileActionLoading; else showButtonText\"\r\n                        class=\"g-mat-progress-spinner-blue mx-auto\"\r\n                        mode=\"indeterminate\"\r\n                        [diameter]=\"30\"\r\n                    ></mat-progress-spinner>\r\n                    <ng-template #showButtonText> Save Details </ng-template>\r\n                </button>\r\n\r\n                <!-- #endregion -->\r\n\r\n                <!-- #region Additional Registration Questions -->\r\n\r\n                <a\r\n                    class=\"g-secondary-button l-additional-registration-button\"\r\n                    href=\"https://docs.google.com/forms/d/1-tz4aLzxetvOy4sMOIlwZ5D9gJM6xT__IGS7aLlBXNc/viewform?ts=60d97d85&edit_requested=true\"\r\n                    target=\"_blank\"\r\n                    matRipple\r\n                    >Additional Registration Questions</a\r\n                >\r\n\r\n                <!-- #endregion -->\r\n\r\n                <!-- #region Lots in Date Range Button -->\r\n\r\n                <button\r\n                    *ngIf=\"isAdmin\"\r\n                    class=\"g-secondary-button mt-2\"\r\n                    mat-flat-button\r\n                    (click)=\"handleGetLotsInDateRange()\"\r\n                >\r\n                    <ng-container *ngIf=\"!isGetLotsActionLoading; else showGetLotsSpinner\"\r\n                        >Get Lots In Date Range</ng-container\r\n                    >\r\n                    <ng-template #showGetLotsSpinner>\r\n                        <mat-progress-spinner\r\n                            class=\"g-mat-progress-spinner-white\"\r\n                            mode=\"indeterminate\"\r\n                            [diameter]=\"30\"\r\n                        ></mat-progress-spinner>\r\n                    </ng-template>\r\n                </button>\r\n\r\n                <!-- #endregion -->\r\n\r\n                <button class=\"g-secondary-button mt-2\" (click)=\"handleLogout()\">Log out</button>\r\n\r\n                <button class=\"l-delete-account g-secondary-button mt-4\" (click)=\"handleDeletionRequestModal()\">\r\n                    <ng-container *ngIf=\"!isDeleteActionLoading; else showDeleteSpinner\">Delete Account</ng-container>\r\n                    <ng-template #showDeleteSpinner>\r\n                        <mat-progress-spinner\r\n                            class=\"g-mat-progress-spinner-white mx-auto\"\r\n                            mode=\"indeterminate\"\r\n                            [diameter]=\"30\"\r\n                        ></mat-progress-spinner>\r\n                    </ng-template>\r\n                </button>\r\n\r\n                <div class=\"g-text-p-small-dark mt-2\">{{ version }}</div>\r\n\r\n                <p class=\"g-text-p-small-dark pt-3 l-terms\">\r\n                    By using our site, you agree to the\r\n                    <span class=\"g-text-blue\"\r\n                        ><a\r\n                            (click)=\"handleRouteToDocumentViewer('ToS.pdf')\"\r\n                            target=\"_blank\"\r\n                            class=\"terms clickable\"\r\n                            id=\"TermsOfServiceLink\"\r\n                        >\r\n                            Terms Of Service</a\r\n                        >,\r\n                        <a\r\n                            (click)=\"handleRouteToDocumentViewer('privacyPolicy.pdf')\"\r\n                            class=\"terms clickable\"\r\n                            id=\"PrivacyPolicyLink\"\r\n                            target=\"_blank\"\r\n                        >\r\n                            Privacy Policy\r\n                        </a></span\r\n                    >\r\n                    and\r\n                    <span class=\"g-text-blue\"\r\n                        ><a\r\n                            (click)=\"handleRouteToDocumentViewer('Skudu_Acceptable.pdf')\"\r\n                            class=\"terms clickable\"\r\n                            id=\"WebsiteTermsofUseLink\"\r\n                            target=\"_blank\"\r\n                        >\r\n                            Website Terms of Use\r\n                        </a></span\r\n                    >\r\n                </p>\r\n            </form>\r\n        </mat-tab>\r\n    </mat-tab-group>\r\n\r\n    <!-- #endregion -->\r\n\r\n    <!-- #endregion -->\r\n</div>\r\n","import { Store } from '@ngrx/store';\r\nimport { Component, Input, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ScoutCard } from 'src/app/core/models/viewModels';\r\n\r\nimport * as actions from 'src/app/core/helpers/index.actions';\r\nimport * as fromDashboard from 'src/app/features/dashboard/dashboard.selectors';\r\nimport { LOTS_CREATE_ROUTE, SCOUT_EDIT_ROUTE } from './../../../../core/helpers/constants';\r\n\r\n@Component({\r\n    selector: 'app-scout-card',\r\n    templateUrl: './scout-card.component.html',\r\n    styleUrls: ['./scout-card.component.scss'],\r\n})\r\nexport class ScoutCardComponent implements OnInit {\r\n    @Input() scoutCard: ScoutCard;\r\n\r\n    constructor(private router: Router, private store: Store<fromDashboard.State>) {}\r\n\r\n    ngOnInit(): void {}\r\n\r\n    handleEditScout(id: number) {\r\n        this.router.navigate([`${SCOUT_EDIT_ROUTE}/${id}`]);\r\n    }\r\n\r\n    handleCreateLot(scout: ScoutCard) {\r\n        this.store.dispatch(actions.lotActions.LinkCurrentScoutToLot({ scout }));\r\n        this.router.navigate([LOTS_CREATE_ROUTE], {\r\n            queryParams: { cropCategoryId: scout.crop.cropCategoryId },\r\n        });\r\n    }\r\n}\r\n","<div\r\n    class=\"l-container\"\r\n    [ngClass]=\"{\r\n        'g-card-border-sell': scoutCard?.scoutType === 'Sell',\r\n        'g-card-border-buy': scoutCard?.scoutType === 'Buy'\r\n    }\"\r\n>\r\n    <!-- #region Header -->\r\n    <div\r\n        class=\"l-header\"\r\n        [ngClass]=\"{\r\n            'l-banner-sell': scoutCard?.scoutType === 'Sell',\r\n            'l-banner-buy': scoutCard?.scoutType === 'Buy'\r\n        }\"\r\n    >\r\n        <h2\r\n            [ngClass]=\"{\r\n                'l-sell-text': scoutCard?.scoutType === 'Sell',\r\n                'l-buy-text': scoutCard?.scoutType === 'Buy'\r\n            }\"\r\n            class=\"g-text-h2-dark\"\r\n        >\r\n            <b>{{ scoutCard.scoutType.toLocaleUpperCase() }}</b>\r\n        </h2>\r\n    </div>\r\n\r\n    <!-- #endregion -->\r\n\r\n    <!-- #region Scout Name / Edit -->\r\n\r\n    <div class=\"l-edit-container\" (click)=\"handleEditScout(scoutCard.id)\">\r\n        <span class=\"l-type\">{{ scoutCard.isPublic ? 'Public' : 'Private' }}</span>\r\n        <p class=\"l-edit-text g-clickable\">Edit</p>\r\n    </div>\r\n\r\n    <!-- #endregion -->\r\n\r\n    <!-- #region Content (Details) -->\r\n\r\n    <div class=\"l-detail-container\">\r\n        <div class=\"l-content-holder\">\r\n            <img class=\"l-detail-icon\" src=\"./assets/icons/location-icon.svg\" alt=\"delivery-point-icon\" />\r\n            <p class=\"g-text-card-prop\">{{ scoutCard.town }}</p>\r\n        </div>\r\n        <div class=\"l-content-holder\">\r\n            <img class=\"l-detail-icon\" src=\"./assets/icons/crop-icon.svg\" alt=\"crop-icon\" />\r\n            <p class=\"g-text-card-prop\">{{ scoutCard.crop.name }}</p>\r\n        </div>\r\n    </div>\r\n\r\n    <!-- #endregion -->\r\n\r\n    <!-- #region count -->\r\n\r\n    <div\r\n        class=\"l-count-holder\"\r\n        [ngClass]=\"{\r\n            'l-sell-text': scoutCard?.scoutType === 'Sell',\r\n            'l-buy-text': scoutCard?.scoutType === 'Buy'\r\n        }\"\r\n    >\r\n        <div class=\"l-match-count-container\">\r\n            <h2 class=\"l-count-text\">\r\n                {{ scoutCard.matchCount }} {{ scoutCard.scoutType === 'Sell' ? 'Buyers' : 'Sellers' }}\r\n            </h2>\r\n        </div>\r\n\r\n        <div class=\"l-match-count-container\" *ngIf=\"scoutCard.lotCount\">\r\n            <h2 class=\"l-count-text\">{{ scoutCard.lotCount }} Lots</h2>\r\n        </div>\r\n    </div>\r\n\r\n    <!-- #endregion -->\r\n\r\n    <!-- #region create lot button -->\r\n\r\n    <div class=\"l-footer\">\r\n        <button class=\"g-primary-button g-clickable\" (click)=\"handleCreateLot(scoutCard)\">Create a Lot</button>\r\n\r\n        <div class=\"l-info-container\">\r\n            <img class=\"g-form-info-icon\" src=\"./assets/icons/info-icon-grey.svg\" alt=\"info-icon-grey\" />\r\n            <p class=\"g-text-p-small-grey mt-3\">\r\n                Create a Lot to Match with potential {{ scoutCard.scoutType === 'Buy' ? 'sellers' : 'buyers' }}.\r\n            </p>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { PROFILE_ROUTE } from 'src/app/core/helpers/constants';\r\nimport { Component, EventEmitter, OnDestroy, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport * as fromRoot from 'src/app/features/dashboard/dashboard.selectors';\r\nimport * as actions from 'src/app/core/helpers/index.actions';\r\nimport * as snackBarConfigs from 'src/app/core/helpers/snackbar';\r\nimport { Actions, ofType } from '@ngrx/effects';\r\nimport { select, Store } from '@ngrx/store';\r\nimport { ScoutCard, Toggle } from 'src/app/core/models/viewModels';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { take, takeUntil } from 'rxjs/operators';\r\nimport { SCOUT_CREATE_ROUTE, HOME_ROUTE, STEP_INFO_DATA } from './../../../../core/helpers/constants';\r\nimport { MatLegacyDialog as MatDialog } from '@angular/material/legacy-dialog';\r\nimport { StepInfoModalComponent } from 'src/app/features/shared/components/step-info-modal/step-info-modal.component';\r\n\r\n@Component({\r\n    selector: 'app-scout',\r\n    templateUrl: './scout.component.html',\r\n    styleUrls: ['./scout.component.scss'],\r\n})\r\nexport class ScoutComponent implements OnInit, OnDestroy {\r\n    scoutToggles: Toggle[] = ['All', 'Sell', 'Buy'];\r\n    toggleIndex: number = 0;\r\n\r\n    scoutCards: ScoutCard[];\r\n    filteredScoutCards: ScoutCard[];\r\n\r\n    searchInput: string;\r\n\r\n    isScoutLoading: boolean = true;\r\n    animateIn: boolean = false;\r\n\r\n    destroyed$: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n    constructor(\r\n        private route: ActivatedRoute,\r\n        private router: Router,\r\n        private store: Store<fromRoot.State>,\r\n        private actions$: Actions,\r\n        private snackbar: MatSnackBar,\r\n        private dialog: MatDialog,\r\n    ) {}\r\n\r\n    ngOnInit(): void {\r\n        this.actions$\r\n            .pipe(ofType(actions.scoutActions.UserScoutCardsFail, actions.scoutActions.UserScoutCardsSuccess))\r\n            .subscribe((action) => {\r\n                if (action.type === actions.scoutActions.UserScoutCardsSuccess.type) {\r\n                    this.isScoutLoading = false;\r\n                } else {\r\n                    this.snackbar.open(\r\n                        'An error occurred when trying to retrieve your scouts. Please reload the page.',\r\n                        'CLOSE',\r\n                        snackBarConfigs.errorConfig,\r\n                    );\r\n                }\r\n            });\r\n\r\n        this.route.queryParams.pipe(take(1)).subscribe((params) => {\r\n            if (Object.keys(params).length) {\r\n                if (params.toggleIndex) {\r\n                    this.toggleIndex = +params.toggleIndex;\r\n                }\r\n                if (params.searchInput) {\r\n                    this.searchInput = params.searchInput;\r\n                }\r\n            }\r\n        });\r\n\r\n        this.store\r\n            .pipe(select(fromRoot.marketSelectors.getAllOrderedScoutCards), takeUntil(this.destroyed$))\r\n            .subscribe((scoutCards: ScoutCard[]) => {\r\n                if (scoutCards) {\r\n                    this.scoutCards = scoutCards;\r\n                    this.filteredScoutCards = this.scoutCards;\r\n                    if (this.toggleIndex) {\r\n                        this.filterAccordingToToggleHelper();\r\n                    }\r\n                    if (this.searchInput) {\r\n                        this.filterAccordingToSearchInputHelper();\r\n                    }\r\n                }\r\n            });\r\n\r\n        this.store.dispatch(actions.scoutActions.ReqUserScoutCards());\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.destroyed$.next();\r\n    }\r\n\r\n    handleToggleChange(newToggleIndex: 0 | 1 | 2) {\r\n        this.toggleIndex = newToggleIndex;\r\n        if (this.searchInput) {\r\n            this.filterAccordingToSearchInputHelper();\r\n        } else {\r\n            this.filterAccordingToToggleHelper();\r\n        }\r\n        this.updateQueryParamsHelper();\r\n    }\r\n\r\n    handleSearchInput(input: string) {\r\n        this.searchInput = input;\r\n        if (this.searchInput || this.searchInput === '') {\r\n            this.filterAccordingToSearchInputHelper();\r\n        } else {\r\n            this.resetSearchInputFilterHelper();\r\n        }\r\n        this.updateQueryParamsHelper();\r\n    }\r\n\r\n    handleNavigateToCreateScout() {\r\n        this.store.dispatch(actions.lotActions.LinkCurrentScoutToLot({ scout: null }));\r\n        this.toggleIndex === 2\r\n            ? this.router.navigate([SCOUT_CREATE_ROUTE], {\r\n                  queryParams: { scoutType: 'Buy' },\r\n              })\r\n            : this.router.navigate([SCOUT_CREATE_ROUTE]);\r\n    }\r\n\r\n    handleNavigateToHomePage() {\r\n        this.router.navigate([HOME_ROUTE]);\r\n    }\r\n\r\n    handleNavigateToProfile(): void {\r\n        this.router.navigate([PROFILE_ROUTE]);\r\n    }\r\n\r\n    handleInfoModal() {\r\n        this.dialog.open(StepInfoModalComponent, {\r\n            panelClass: 'g-modal-container',\r\n            data: {\r\n                stepInfo: STEP_INFO_DATA['Scout the Market'],\r\n            },\r\n        });\r\n    }\r\n\r\n    updateQueryParamsHelper() {\r\n        let queryParams = this.searchInput\r\n            ? { toggleIndex: this.toggleIndex, searchInput: this.searchInput }\r\n            : { toggleIndex: this.toggleIndex };\r\n        this.router.navigate([], {\r\n            relativeTo: this.route,\r\n            queryParams,\r\n            replaceUrl: true,\r\n        });\r\n    }\r\n\r\n    filterAccordingToToggleHelper() {\r\n        this.toggleIndex\r\n            ? (this.filteredScoutCards = this.scoutCards.filter(\r\n                  (scoutCard) => scoutCard.scoutType === this.scoutToggles[this.toggleIndex],\r\n              ))\r\n            : (this.filteredScoutCards = this.scoutCards);\r\n        this.animateInHelper();\r\n    }\r\n\r\n    filterAccordingToSearchInputHelper() {\r\n        this.filterAccordingToToggleHelper();\r\n        this.filteredScoutCards = this.filteredScoutCards.filter((cards) => {\r\n            return (\r\n                cards.crop.name.toLocaleLowerCase().includes(this.searchInput.toLocaleLowerCase()) ||\r\n                cards.town.toLocaleLowerCase().includes(this.searchInput.toLocaleLowerCase())\r\n            );\r\n        });\r\n    }\r\n\r\n    resetSearchInputFilterHelper() {\r\n        this.filteredScoutCards = this.scoutCards;\r\n        this.filterAccordingToToggleHelper();\r\n    }\r\n\r\n    animateInHelper() {\r\n        this.animateIn = true;\r\n        setTimeout(() => {\r\n            this.animateIn = false;\r\n        }, 300);\r\n    }\r\n}\r\n","<div class=\"l-container g-fade-in\">\r\n    <!-- #region Header -->\r\n\r\n    <div class=\"l-header\">\r\n        <img\r\n            class=\"l-home-img\"\r\n            src=\"./assets/icons/home-blue-icon.svg\"\r\n            alt=\"Blue bell\"\r\n            (click)=\"handleNavigateToHomePage()\"\r\n        />\r\n        <div class=\"g-logo-header-container\">\r\n            <img\r\n                class=\"g-header-mx-icon\"\r\n                src=\"./assets/icons/MX-small-logo.svg\"\r\n                alt=\"home icon\"\r\n                (click)=\"handleNavigateToHomePage()\"\r\n            />\r\n            <h2 class=\"g-text-h2-dark mb-0\">Scouts</h2>\r\n        </div>\r\n        <div class=\"g-profile-icon-container\">\r\n            <img\r\n                class=\"g-profile-icon\"\r\n                src=\"./assets/icons/profile-icon.svg\"\r\n                alt=\"home icon\"\r\n                (click)=\"handleNavigateToProfile()\"\r\n            />\r\n        </div>\r\n    </div>\r\n\r\n    <!-- #endregion -->\r\n\r\n    <!-- #region Loading Spinner -->\r\n\r\n    <div *ngIf=\"isScoutLoading; else scoutsIsLoaded\" class=\"l-spinner-holder\">\r\n        <mat-progress-spinner\r\n            class=\"g-mat-progress-spinner\"\r\n            mode=\"indeterminate\"\r\n            [diameter]=\"40\"\r\n        ></mat-progress-spinner>\r\n    </div>\r\n\r\n    <!-- #endregion -->\r\n\r\n    <!-- #region Content -->\r\n\r\n    <ng-template #scoutsIsLoaded>\r\n        <div *ngIf=\"scoutCards && scoutCards.length; else noScouts\" class=\"l-content-container\">\r\n            <cdk-virtual-scroll-viewport id=\"lot-cdk\" class=\"l-cdk\" itemSize=\"334\">\r\n                <app-dashboard-header\r\n                    [activeRoute]=\"'scouts'\"\r\n                    [toggleIndex]=\"toggleIndex\"\r\n                    [toggles]=\"scoutToggles\"\r\n                    [showSearchBar]=\"searchInput || searchInput === ''\"\r\n                    ($changeToggleEvent)=\"handleToggleChange($event)\"\r\n                    ($searchInputEvent)=\"handleSearchInput($event)\"\r\n                    ($createEvent)=\"handleNavigateToCreateScout()\"\r\n                ></app-dashboard-header>\r\n                <div\r\n                    *cdkVirtualFor=\"let scoutCard of filteredScoutCards\"\r\n                    class=\"l-card-holder\"\r\n                    [class.g-fade-in]=\"animateIn\"\r\n                >\r\n                    <app-scout-card [scoutCard]=\"scoutCard\"></app-scout-card>\r\n                </div>\r\n            </cdk-virtual-scroll-viewport>\r\n        </div>\r\n\r\n        <ng-template #noScouts>\r\n            <div class=\"l-content-container p-3\">\r\n                <button mat-flat-button class=\"g-primary-button\" (click)=\"handleNavigateToCreateScout()\">\r\n                    CREATE NEW SCOUT\r\n                </button>\r\n                <div class=\"d-flex flex-column justify-content-center align-items-center mt-5\">\r\n                    <h1 class=\"g-text-h2-dark mt-5 mb-3\">It's a bit empty here...</h1>\r\n                    <p class=\"g-text-p-dark mx-5\">\r\n                        Tell the Market what you're planning to buy or sell. Build your own Match Exchange Scouts, with\r\n                        <b>no obligations</b>.\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </ng-template>\r\n    </ng-template>\r\n\r\n    <!-- #endregion -->\r\n</div>\r\n","import { Analytics } from '../../../../core/models/queryModels';\r\nimport { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatLegacyDialogRef as MatDialogRef, MAT_LEGACY_DIALOG_DATA as MAT_DIALOG_DATA } from '@angular/material/legacy-dialog';\r\n\r\n@Component({\r\n    selector: 'app-skudu-analytics-modal',\r\n    templateUrl: './skudu-analytics-modal.component.html',\r\n    styleUrls: ['./skudu-analytics-modal.component.scss'],\r\n})\r\nexport class SkuduAnalyticsModalComponent implements OnInit {\r\n    numberOfBuyingScouts: number;\r\n    numberOfSellingScouts: number;\r\n    numberOfBuyingLots: number;\r\n    numberOfSellingLots: number;\r\n    totalSkuduMatches: number;\r\n    volumeNegotiatedInTons: number;\r\n\r\n    constructor(\r\n        private dialogRef: MatDialogRef<SkuduAnalyticsModalComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: Analytics,\r\n    ) {}\r\n\r\n    ngOnInit(): void {\r\n        this.numberOfBuyingScouts = this.data.numberOfBuyingScouts;\r\n        this.numberOfSellingScouts = this.data.numberOfSellingScouts;\r\n        this.numberOfBuyingLots = this.data.numberOfBuyingLots;\r\n        this.numberOfSellingLots = this.data.numberOfSellingLots;\r\n        this.totalSkuduMatches = this.data.totalSkuduMatches;\r\n        this.volumeNegotiatedInTons = this.data.volumeNegotiatedInTons;\r\n    }\r\n\r\n    handleCloseModal() {\r\n        this.dialogRef.close();\r\n    }\r\n}\r\n","<div class=\"l-container\">\r\n    <!-- #region Modal Header -->\r\n\r\n    <div class=\"l-header\">\r\n        <img class=\"l-close-icon\" src=\"./assets/icons/close-icon-dark.svg\" alt=\"close\" (click)=\"handleCloseModal()\" />\r\n        <h2 class=\"g-text-h1-dark\">Match Analytics</h2>\r\n    </div>\r\n\r\n    <!-- #endregion -->\r\n\r\n    <!-- #region Modal Content -->\r\n\r\n    <div class=\"l-content\">\r\n        <p class=\"g-text-p\">\r\n            Number Of Buying Scouts: <b>{{ numberOfBuyingScouts }}</b>\r\n        </p>\r\n        <p class=\"g-text-p\">\r\n            Number Of Selling Scouts: <b>{{ numberOfSellingScouts }}</b>\r\n        </p>\r\n        <p class=\"g-text-p\">\r\n            Number Of Buying Lots: <b>{{ numberOfBuyingLots }}</b>\r\n        </p>\r\n        <p class=\"g-text-p\">\r\n            Number Of Selling Lots: <b>{{ numberOfSellingLots }}</b>\r\n        </p>\r\n        <p class=\"g-text-p\">\r\n            Total Matches: <b>{{ totalSkuduMatches }}</b>\r\n        </p>\r\n        <p class=\"g-text-p\">\r\n            Volume Negotiated In Tons: <b>{{ volumeNegotiatedInTons }}</b>\r\n        </p>\r\n    </div>\r\n\r\n    <!-- #endregion -->\r\n\r\n    <!-- #region Buttons -->\r\n\r\n    <button class=\"g-primary-button\" (click)=\"handleCloseModal()\">Close</button>\r\n\r\n    <!-- #endregion -->\r\n</div>\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatLegacyDialogRef as MatDialogRef, MAT_LEGACY_DIALOG_DATA as MAT_DIALOG_DATA } from '@angular/material/legacy-dialog';\r\nimport { Dictionary } from '@ngrx/entity';\r\nimport { VerificationType } from 'src/app/core/models/viewModels';\r\n\r\n@Component({\r\n    selector: 'app-verification-modal',\r\n    templateUrl: './verification-modal.component.html',\r\n    styleUrls: ['./verification-modal.component.scss'],\r\n})\r\nexport class VerificationModalComponent implements OnInit {\r\n    isFilter: boolean = true;\r\n    verificationTypes: Dictionary<VerificationType> = {};\r\n    selectedVerificationType: VerificationType | null = null;\r\n    showWarning: boolean = false;\r\n\r\n    constructor(\r\n        private dialogRef: MatDialogRef<VerificationModalComponent>,\r\n        @Inject(MAT_DIALOG_DATA)\r\n        private data: {\r\n            isFilter: boolean;\r\n            verificationTypes: Dictionary<VerificationType>;\r\n            selectedVerificationType: VerificationType;\r\n        },\r\n    ) {}\r\n\r\n    ngOnInit(): void {\r\n        this.isFilter = this.data.isFilter;\r\n        this.verificationTypes = this.data.verificationTypes;\r\n        this.selectedVerificationType = this.data.selectedVerificationType;\r\n    }\r\n\r\n    handleCloseModal() {\r\n        this.dialogRef.close();\r\n    }\r\n\r\n    handleSelectVerificationType(verificationType: VerificationType) {\r\n        this.selectedVerificationType = verificationType === this.selectedVerificationType ? null : verificationType;\r\n    }\r\n\r\n    handleCloseModalAndUpdateVerification() {\r\n        !this.isFilter && !this.selectedVerificationType\r\n            ? (this.showWarning = true)\r\n            : this.dialogRef.close(this.selectedVerificationType);\r\n    }\r\n}\r\n","<div class=\"l-container\">\r\n    <!-- #region Header -->\r\n\r\n    <div class=\"l-header\">\r\n        <h2 class=\"g-text-h2-dark\">{{ isFilter ? 'Filter' : 'Choose' }} Verification Type</h2>\r\n        <img class=\"l-header-icon\" src=\"./assets/icons/close-icon-dark.svg\" alt=\"close\" (click)=\"handleCloseModal()\" />\r\n    </div>\r\n\r\n    <!-- #endregion -->\r\n\r\n    <!-- #region Content -->\r\n\r\n    <div class=\"l-content\">\r\n        <div\r\n            *ngFor=\"let verificationType of verificationTypes | keyvalue\"\r\n            class=\"l-verification-type\"\r\n            [mat-ripple]\r\n            (click)=\"handleSelectVerificationType(verificationType.value)\"\r\n        >\r\n            <div class=\"l-checkbox-container\">\r\n                <input type=\"checkbox\" [checked]=\"selectedVerificationType === verificationType.value\" />\r\n            </div>\r\n            <div class=\"l-verification-info-container\">\r\n                <h2 class=\"g-text-h2 l-text-left\">\r\n                    {{ verificationType.value.name }}\r\n                </h2>\r\n            </div>\r\n            <div class=\"l-verification-icon-container\">\r\n                <img class=\"l-verification-icon\" [src]=\"verificationType.value.source\" alt=\"verification-icon\" />\r\n            </div>\r\n        </div>\r\n\r\n        <!-- #region Spacer -->\r\n\r\n        <div class=\"l-spacer\"></div>\r\n\r\n        <!-- #endregion -->\r\n\r\n        <!-- #region Warning -->\r\n\r\n        <div *ngIf=\"showWarning\" class=\"l-info-container g-fade-in\">\r\n            <img class=\"g-form-info-icon mt-1\" src=\"./assets/icons/info-icon-red.svg\" alt=\"info-icon-red\" />\r\n            <p class=\"g-form-info-p l-red m-0\">\r\n                Please choose a verification type, or choose 'Unverified' if none of the verification types are\r\n                applicable.\r\n            </p>\r\n        </div>\r\n\r\n        <!-- #engregion -->\r\n\r\n        <!-- #region Content -->\r\n\r\n        <button class=\"g-primary-button mt-3\" mat-flat-button (click)=\"handleCloseModalAndUpdateVerification()\">\r\n            {{ isFilter ? 'Apply Verification Filter' : 'Update Verification Type' }}\r\n        </button>\r\n\r\n        <!-- #endregion -->\r\n    </div>\r\n\r\n    <!-- #endregion -->\r\n</div>\r\n","import { DashboardComponent } from './dashboard.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { NegotiationsComponent } from './components/negotiations/negotiations.component';\r\nimport { ProfileComponent } from './components/profile/profile.component';\r\nimport { CompletedComponent } from './components/completed/completed.component';\r\nimport { ScoutComponent } from './components/scout/scout.component';\r\nimport { LotComponent } from './components/lot/lot.component';\r\nimport { BrowseTheMarketComponent } from './components/browse-the-market/browse-the-market.component';\r\nimport { BrokersComponent } from './components/agents/brokers.component';\r\nimport { BrokerRequestsComponent } from './components/agents/components/broker-requests/broker-requests.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: DashboardComponent,\r\n        children: [\r\n            { path: '', redirectTo: 'scouts', pathMatch: 'full' },\r\n            { path: 'profile', component: ProfileComponent },\r\n            { path: 'scouts', component: ScoutComponent },\r\n            { path: 'lots', component: LotComponent },\r\n            { path: 'negotiations', component: NegotiationsComponent },\r\n            { path: 'completed', component: CompletedComponent },\r\n            { path: 'browse', component: BrowseTheMarketComponent },\r\n            { path: 'brokers', component: BrokersComponent },\r\n            { path: 'requested', component: BrokerRequestsComponent },\r\n        ],\r\n    },\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule],\r\n})\r\nexport class DashboardRoutingModule {}\r\n","import * as actions from 'src/app/core/helpers/index.actions';\r\nimport { AuthService } from '../../core/services/auth/auth.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Store, select } from '@ngrx/store';\r\nimport * as fromRoot from '../../core/ngrx/reducers/index';\r\nimport { map, take, tap } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector: 'app-dashboard',\r\n    templateUrl: './dashboard.component.html',\r\n    styleUrls: ['./dashboard.component.scss'],\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n    user$;\r\n    constructor(public authService: AuthService, public store: Store<fromRoot.State>) {}\r\n\r\n    handleLogout() {\r\n        this.store.dispatch(actions.authActions.ReqLogoutAction());\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.user$ = this.store.pipe(select(fromRoot.authSelectors.getUser), take(1));\r\n    }\r\n}\r\n","<div class=\"g-app-dimensions\">\r\n    <app-main-nav>\r\n        <div content class=\"l-container\">\r\n            <router-outlet></router-outlet>\r\n        </div>\r\n    </app-main-nav>\r\n</div>\r\n","// #region Module Imports\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { EffectsModule } from '@ngrx/effects';\r\nimport { StoreModule } from '@ngrx/store';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { AngularMaterialModule } from './../shared/angular-material.module';\r\nimport { DashboardRoutingModule } from './dashboard-routing.module';\r\nimport { DeliveryPointModule } from '../shared/components/delivery-point-modal/delivery-point-modal.component';\r\nimport { VerificationBadgeModule } from '../shared/components/verification-badge/verification-badge.component';\r\nimport { ScrollingModule } from '@angular/cdk/scrolling';\r\n//import { GooglePlaceModule } from 'ngx-google-places-autocomplete';\r\nimport { BrokerInfoCardModule } from '../shared/components/broker-info-card/broker-info-card.component';\r\n\r\n// #endregion\r\n\r\n// #region Component Imports\r\n\r\nimport { DashboardComponent } from './dashboard.component';\r\nimport { MainNavComponent } from './components/main-nav/main-nav.component';\r\nimport { ScoutComponent } from './components/scout/scout.component';\r\nimport { LotComponent } from './components/lot/lot.component';\r\nimport { NegotiationsComponent } from './components/negotiations/negotiations.component';\r\nimport { ProfileComponent } from './components/profile/profile.component';\r\nimport { DashboardHeaderComponent } from './components/dashboard-header/dashboard-header.component';\r\nimport { ScoutCardComponent } from './components/scout-card/scout-card.component';\r\nimport { LotCardComponent } from './components/lot-card/lot-card.component';\r\nimport { CompletedComponent } from './components/completed/completed.component';\r\nimport { NegotiationCardComponent } from './components/negotiation-card/negotiation-card.component';\r\nimport { SkuduAnalyticsModalComponent } from './components/skudu-analytics-modal/skudu-analytics-modal.component';\r\nimport { LotsAnalyticsModalComponent } from './components/lot-analytics-modal/lots-analytics-modal.component';\r\nimport { VerificationModalComponent } from './components/verification-modal/verification-modal.component';\r\nimport { ExpiredLotPeriodModalComponent } from './components/expired-lot-period-modal/expired-lot-period-modal.component';\r\nimport { BrowseTheMarketComponent } from './components/browse-the-market/browse-the-market.component';\r\nimport { FilterTheMarketModalComponent } from './components/browse-the-market/components/filter-the-market-modal/filter-the-market-modal.component';\r\nimport { PremiumFeatureModalComponent } from '../premium-feature-modal/premium-feature-modal.component';\r\nimport { MarketLotCardComponent } from './components/browse-the-market/components/market-lot-card/market-lot-card.component';\r\nimport { DuplicateScoutModalComponent } from './components/browse-the-market/components/duplicate-scout-modal/duplicate-scout-modal.component';\r\nimport { LocationModalComponent } from './components/browse-the-market/components/location-modal/location-modal.component';\r\n\r\n// #endregion\r\n\r\n// #region Other\r\n\r\nimport { NegotiationEffects } from './../../core/ngrx/entities/negotiations/negotiation.effects';\r\nimport { MatchEffects } from './../../core/ngrx/entities/match/match.effects';\r\nimport { LotEffects } from './../../core/ngrx/entities/lot/lot.effects';\r\nimport { MarketEffects } from './../../core/ngrx/market/market.effects';\r\nimport { BrokersEffects } from '../../core/ngrx/brokers/brokers-effects.service';\r\nimport * as fromLot from './../../core/ngrx/entities/lot/index';\r\nimport * as fromMatch from './../../core/ngrx/entities/match/index';\r\nimport * as fromNegotiation from './../../core/ngrx/entities/negotiations/index';\r\nimport * as fromMarket from './../../core/ngrx/market/index';\r\n//import { AgmCoreModule } from '@diegomvh/agm-core';\r\n\r\nimport { GoogleMap, GoogleMapsModule} from '@angular/google-maps';\r\n\r\nimport { NavigateToScoutModalComponent } from './components/navigate-to-scout-modal/navigate-to-scout-modal.component';\r\nimport { DeleteAccountModalComponent } from './components/delete-account-modal/delete-account-modal.component';\r\nimport { BrokersComponent } from './components/agents/brokers.component';\r\nimport { HowItWorksModalComponent } from './components/agents/components/how-it-works-modal/how-it-works-modal.component';\r\nimport { UpdateInfoModalComponent } from './components/agents/components/update-info-modal/update-info-modal.component';\r\nimport { RequestBrokerModalComponent } from './components/agents/components/request-broker-modal/request-broker-modal.component';\r\nimport { BrokerRequestsComponent } from './components/agents/components/broker-requests/broker-requests.component';\r\nimport { PendingRequestModalComponent } from './components/agents/components/pending-request-modal/pending-request-modal.component';\r\nimport { ConfirmBrokerAdminPermissionComponent } from './components/agents/components/confirm-broker-admin-permission/confirm-broker-admin-permission.component';\r\nimport { NgxGpAutocompleteModule } from '@angular-magic/ngx-gp-autocomplete';\r\n\r\n// #endregion\r\n\r\n@NgModule({\r\n    declarations: [\r\n        DashboardComponent,\r\n        MainNavComponent,\r\n        ScoutComponent,\r\n        LotComponent,\r\n        NegotiationsComponent,\r\n        ProfileComponent,\r\n        DashboardHeaderComponent,\r\n        ScoutCardComponent,\r\n        LotCardComponent,\r\n        NegotiationCardComponent,\r\n        CompletedComponent,\r\n        ScoutComponent,\r\n        LotComponent,\r\n        SkuduAnalyticsModalComponent,\r\n        LotsAnalyticsModalComponent,\r\n        VerificationModalComponent,\r\n        ExpiredLotPeriodModalComponent,\r\n        BrowseTheMarketComponent,\r\n        FilterTheMarketModalComponent,\r\n        PremiumFeatureModalComponent,\r\n        MarketLotCardComponent,\r\n        DuplicateScoutModalComponent,\r\n        LocationModalComponent,\r\n        NavigateToScoutModalComponent,\r\n        DeleteAccountModalComponent,\r\n        BrokersComponent,\r\n        HowItWorksModalComponent,\r\n        UpdateInfoModalComponent,\r\n        RequestBrokerModalComponent,\r\n        BrokerRequestsComponent,\r\n        PendingRequestModalComponent,\r\n        ConfirmBrokerAdminPermissionComponent,\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        DashboardRoutingModule,\r\n        AngularMaterialModule,\r\n        FormsModule,\r\n        NgxGpAutocompleteModule,\r\n        DeliveryPointModule,\r\n        VerificationBadgeModule,\r\n     //   GooglePlaceModule,\r\n        BrokerInfoCardModule,\r\n        StoreModule.forFeature(fromLot.lotFeatureKey, fromLot.lotReducer),\r\n        StoreModule.forFeature(fromMatch.matchFeatureKey, fromMatch.matchReducer),\r\n        StoreModule.forFeature(fromNegotiation.negotiationFeatureKey, fromNegotiation.negotiationReducer),\r\n        StoreModule.forFeature(fromMarket.marketFeatureKey, fromMarket.marketReducer),\r\n        EffectsModule.forFeature([LotEffects, MatchEffects, NegotiationEffects, MarketEffects, BrokersEffects]),\r\n        ScrollingModule,\r\n        GoogleMapsModule\r\n       /*\r\n        AgmCoreModule.forRoot({\r\n            apiKey: 'AIzaSyAPz_4c60V_PBTnACgcWOz2nVPKpyN8DT8',\r\n            libraries: ['geometry'],\r\n        })*/\r\n    ],\r\n})\r\nexport class DashboardModule {}\r\n"],"names":["marketActions","marketSelectors","marketFeatureKey","reducer","marketReducer","createAction","props","ReqMarketLotCards","MarketLotCardsFail","MarketLotCardsSuccess","ReqMarketScoutCards","MarketScoutCardsFail","MarketScoutCardsSuccess","SetCurrentSessionFilters","Router","MatSnackBar","Store","ApiService","Actions","ofType","createEffect","switchMap","mergeMap","catchError","take","from","MarketEffects","constructor","actions$","api","store","snackbar","router","ReqMarketLotCards$","pipe","payload","getMarketLotCards","marketFilters","lots","error","console","log","message","ReqMarketScoutCards$","getMarketScoutCards","scouts","_","i0","ɵɵinject","i1","i2","i3","i4","i5","_2","factory","ɵfac","ReqLogoutAction","createReducer","on","initialState","currentSessionFilters","state","action","createFeatureSelector","createSelector","fromMarket","selectMarketState","getLotCards","getScoutCards","getCurrentSessionFilters","MatLegacyDialog","MatDialog","ConfirmationModalComponent","ConfirmationModalService","dialog","open","header","subHeader","clientData","confirmButton","declineButton","panelClass","data","providedIn","EventEmitter","ActivatedRoute","Capacitor","takeUntil","select","fromAuth","fromBrokers","fromNotifications","HowItWorksModalComponent","RequestBrokerModalComponent","HOME_ROUTE","REQUESTS_ROUTE","brokersActions","brokersSelectors","ConfirmBrokerAdminPermissionComponent","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","ctx_r0","isWeb","ɵɵsanitizeUrl","ɵɵelement","ɵɵlistener","BrokersComponent_ng_template_10_div_0_Template_app_broker_info_card_toggleOutputValueEvent_2_listener","$event","ɵɵrestoreView","_r8","ctx_r7","ɵɵnextContext","ɵɵresetView","handleToggleSwitch","ctx_r4","toggleValue","activeBroker","brokerExpiryDate","ɵɵtextInterpolate1","ctx_r9","notificationUids","length","BrokersComponent_ng_template_10_ng_template_1_div_6_Template_button_click_2_listener","restoredCtx","_r13","broker_r11","$implicit","ctx_r12","handleRequestBroker","BrokersComponent_ng_template_10_ng_template_1_Template_button_click_3_listener","_r15","ctx_r14","handleRouteToRequests","ɵɵtemplate","BrokersComponent_ng_template_10_ng_template_1_div_5_Template","BrokersComponent_ng_template_10_ng_template_1_div_6_Template","ctx_r6","brokers","BrokersComponent_ng_template_10_div_0_Template","BrokersComponent_ng_template_10_ng_template_1_Template","ɵɵtemplateRefExtractor","ctx_r3","_r5","BrokersComponent","route","isLoading","showTermsMenu","acceptedTerms","destroyed$","getPlatform","ngOnInit","authSelectors","getUser","subscribe","user","dispatch","ReqBrokersAndDistance_Shared","ReqClientBrokerRequests_Client","uid","getBrokerTermsCheck","termsChecked","tsandCsRef","afterClosed","ReqBrokerTermsCheck_Client","getFilteredBrokers","response","brokerList","queryParams","getToggleValueHelper","handleClick","handleBack","navigate","handleToggleTermsMenu","e","stopPropagation","broker","notificationActions","ReqToggleNotificationStatus","getClientsBrokerRequests","requests","brokerRequest","filter","request","acceptedRequest","pop","brokerAdminRole","expiryDate","value","handleOpenConfirmBrokerPermissionModal","ReqToggleBrokerAdminRole","brokerUid","clientUid","adminRole","ɵɵdirectiveInject","selectors","hostBindings","BrokersComponent_HostBindings","rf","ctx","ɵɵresolveWindow","BrokersComponent_Template_img_click_2_listener","BrokersComponent_Template_mat_icon_click_5_listener","BrokersComponent_div_7_Template","BrokersComponent_div_9_Template","BrokersComponent_ng_template_10_Template","_r2","BROKERS_ROUTE","Broker","User","PendingRequestModalComponent","BrokerRequestsComponent_div_5_ng_template_2_div_0_Template_button_click_4_listener","_r10","clientRequest_r8","handleViewRequest","BrokerRequestsComponent_div_5_ng_template_2_div_1_Template_button_click_4_listener","brokerRequest_r11","BrokerRequestsComponent_div_5_ng_template_2_div_0_Template","BrokerRequestsComponent_div_5_ng_template_2_div_1_Template","ctx_r5","fromClientRequests","fromBrokerRequests","BrokerRequestsComponent_div_5_div_1_Template","BrokerRequestsComponent_div_5_ng_template_2_Template","_r4","BrokerRequestsComponent","noRequests","getFilteredRequests","fromBroker","decls","vars","consts","template","BrokerRequestsComponent_Template","BrokerRequestsComponent_Template_img_click_2_listener","BrokerRequestsComponent_div_5_Template","BrokerRequestsComponent_ng_template_6_Template","_r1","MatLegacyDialogRef","MatDialogRef","dialogRef","handleCloseModal","close","ConfirmBrokerAdminPermissionComponent_Template","ConfirmBrokerAdminPermissionComponent_Template_img_click_3_listener","ConfirmBrokerAdminPermissionComponent_Template_button_click_10_listener","handleRouteToBrokers","HowItWorksModalComponent_Template","HowItWorksModalComponent_Template_button_click_15_listener","MAT_LEGACY_DIALOG_DATA","MAT_DIALOG_DATA","actions","PendingRequestModalComponent_div_2_div_6_Template_button_click_1_listener","handleShowTerms","PendingRequestModalComponent_div_2_div_6_Template_button_click_3_listener","handleDeleteRequest","PendingRequestModalComponent_div_2_div_6_mat_progress_spinner_4_Template","PendingRequestModalComponent_div_2_div_6_ng_template_5_Template","PendingRequestModalComponent_div_2_ng_template_7_Template_button_click_0_listener","_r19","ctx_r18","PendingRequestModalComponent_div_2_ng_template_7_Template_button_click_2_listener","ctx_r20","PendingRequestModalComponent_div_2_ng_template_7_mat_progress_spinner_3_Template","PendingRequestModalComponent_div_2_ng_template_7_ng_template_4_Template","ctx_r8","_r16","PendingRequestModalComponent_div_2_div_1_Template","PendingRequestModalComponent_div_2_ng_template_2_Template","PendingRequestModalComponent_div_2_div_6_Template","PendingRequestModalComponent_div_2_ng_template_7_Template","_r7","PendingRequestModalComponent_ng_template_3_Template_mat_checkbox_ngModelChange_9_listener","_r25","ctx_r24","termsAccepted","PendingRequestModalComponent_ng_template_3_Template_button_click_12_listener","ctx_r26","handleAcceptRequest","PendingRequestModalComponent_ng_template_3_mat_progress_spinner_13_Template","PendingRequestModalComponent_ng_template_3_ng_template_14_Template","ctx_r2","ɵɵpureFunction2","_c0","_r22","requestBroker","ReqDeleteRequest_SharedSuccess","ReqDeleteRequest_SharedFail","ReqClientBrokerRequests_ClientSuccess","ReqClientBrokerRequests_ClientFail","ReqDeleteRequest_Shared","ReqAcceptRequest_SharedSuccess","ReqAcceptRequest_SharedFail","ReqSendPairingNotification_Shared","newRequest","ReqAcceptRequest_Shared","PendingRequestModalComponent_Template","PendingRequestModalComponent_Template_img_click_1_listener","PendingRequestModalComponent_div_2_Template","PendingRequestModalComponent_ng_template_3_Template","RequestBrokerModalComponent_div_2_Template_button_click_7_listener","RequestBrokerModalComponent_div_2_div_8_Template","RequestBrokerModalComponent_div_2_ng_template_9_Template","RequestBrokerModalComponent_ng_template_3_Template_button_click_4_listener","_r9","handleViewBrokerRequest","isRequestSent","ReqCreateRequest_SharedSuccess","ReqCreateRequest_SharedFail","ReqCreateRequest_Shared","sentByBroker","RequestBrokerModalComponent_Template","RequestBrokerModalComponent_Template_img_click_1_listener","RequestBrokerModalComponent_div_2_Template","RequestBrokerModalComponent_ng_template_3_Template","LOTS_CROP_CATEGORIES_ROUTE","PROFILE_ROUTE","MarketFilterClass","FilterTheMarketModalComponent","PremiumFeatureModalComponent","BrowseTheMarketComponent_div_9_Template_button_click_16_listener","handleOpenFilterTheMarketModal","marketLotCard_r12","ɵɵelementContainerStart","BrowseTheMarketComponent_ng_template_10_ng_template_9_ng_container_0_div_1_Template","ɵɵelementContainerEnd","marketLotCards","BrowseTheMarketComponent_ng_template_10_ng_template_9_ng_template_1_ng_container_0_Template_button_click_8_listener","_r17","ctx_r16","BrowseTheMarketComponent_ng_template_10_ng_template_9_ng_template_1_ng_template_1_Template_button_click_7_listener","handleNavigateToCreateLot","BrowseTheMarketComponent_ng_template_10_ng_template_9_ng_template_1_ng_container_0_Template","BrowseTheMarketComponent_ng_template_10_ng_template_9_ng_template_1_ng_template_1_Template","ctx_r10","hasFiltered","_r14","BrowseTheMarketComponent_ng_template_10_ng_template_9_ng_container_0_Template","BrowseTheMarketComponent_ng_template_10_ng_template_9_ng_template_1_Template","BrowseTheMarketComponent_ng_template_10_Template_button_click_4_listener","_r21","BrowseTheMarketComponent_ng_template_10_div_8_Template","BrowseTheMarketComponent_ng_template_10_ng_template_9_Template","actionIsLoading","_r6","BrowseTheMarketComponent","showFeatureIntroduction","userIsVerified","subscriptionsAreNotActive","selectClient","hasBrowsedMarket","verification","id","type","ngOnDestroy","next","getCurrentClient","client","handleNavigateToHomePage","handleNavigateToProfile","clientIsVerified","filters","autoFocus","authActions","ReqUpdateUserDetails","updateSQL","featurePhrase","subscribeText","BrowseTheMarketComponent_Template","BrowseTheMarketComponent_Template_img_click_2_listener","BrowseTheMarketComponent_Template_img_click_4_listener","BrowseTheMarketComponent_Template_img_click_8_listener","BrowseTheMarketComponent_div_9_Template","BrowseTheMarketComponent_ng_template_10_Template","fromScout","SCOUTS_ROUTE","SCOUT_EDIT_ROUTE","prepareScoutFromMarketLotCardHelper","cloneDeep","DuplicateScoutModalComponent","duplicateScoutCard","marketLotCard","handleClose","handleRouteToScout","handleCreateScout","scoutActions","CreateScoutSuccess","CreateScoutFail","scout","ReqUpdateSearchValues","ReqCreateScout","isPublic","DuplicateScoutModalComponent_Template","DuplicateScoutModalComponent_Template_img_click_1_listener","DuplicateScoutModalComponent_Template_button_click_9_listener","DuplicateScoutModalComponent_Template_button_click_11_listener","DuplicateScoutModalComponent_mat_progress_spinner_12_Template","DuplicateScoutModalComponent_ng_template_13_Template","fromCrop","LocationModalComponent","environment","radius_r10","cropCategory_r11","ɵɵtextInterpolate","name","crop_r12","FilterTheMarketModalComponent_ng_template_6_button_37_Template_button_click_0_listener","ctx_r13","handleClearFilters","FilterTheMarketModalComponent_ng_template_6_Template_div_click_3_listener","ctx_r15","handleToggleLotType","FilterTheMarketModalComponent_ng_template_6_Template_div_click_7_listener","ctx_r17","FilterTheMarketModalComponent_ng_template_6_Template_div_click_11_listener","handleOpenLocationModal","FilterTheMarketModalComponent_ng_template_6_Template_input_ngModelChange_13_listener","ctx_r19","town","FilterTheMarketModalComponent_ng_template_6_Template_mat_select_ngModelChange_15_listener","radius","FilterTheMarketModalComponent_ng_template_6_mat_option_16_Template","FilterTheMarketModalComponent_ng_template_6_Template_mat_select_ngModelChange_18_listener","ctx_r21","cropCategory","FilterTheMarketModalComponent_ng_template_6_Template_mat_select_selectionChange_18_listener","ctx_r22","handleChangeCropCategory","FilterTheMarketModalComponent_ng_template_6_mat_option_19_Template","FilterTheMarketModalComponent_ng_template_6_Template_mat_select_ngModelChange_21_listener","ctx_r23","crop","FilterTheMarketModalComponent_ng_template_6_mat_option_22_Template","FilterTheMarketModalComponent_ng_template_6_Template_div_click_25_listener","ɵɵreference","FilterTheMarketModalComponent_ng_template_6_Template_input_ngModelChange_27_listener","ctx_r25","dateFrom","FilterTheMarketModalComponent_ng_template_6_Template_input_dateChange_27_listener","handlePeriodChange","FilterTheMarketModalComponent_ng_template_6_Template_div_click_30_listener","FilterTheMarketModalComponent_ng_template_6_Template_input_ngModelChange_32_listener","ctx_r28","dateTo","FilterTheMarketModalComponent_ng_template_6_Template_input_dateChange_32_listener","ctx_r29","FilterTheMarketModalComponent_ng_template_6_mat_error_35_Template","FilterTheMarketModalComponent_ng_template_6_button_37_Template","FilterTheMarketModalComponent_ng_template_6_Template_button_click_38_listener","ctx_r30","handleCloseAndApplyFilters","ɵɵclassProp","cardType","radii","compareSelectionsHelper","cropCategories","crops","periodHadBeenEdited","isPeriodValid","filtersExistHelper","cropActions","AllCropsSuccess","AllCropsFail","cropCategoryChangeHelper","cropSelectors","selectCropByCategories","CROP_CATEGORIES","includes","ReqCropCategories","ReqAllCrops","ngOnDestroyed","gpsCoordinates","location","isPeriodValidHelper","selectCropByCategoryId","Date","selection1","selection2","Boolean","FilterTheMarketModalComponent_Template","FilterTheMarketModalComponent_Template_img_click_2_listener","FilterTheMarketModalComponent_div_5_Template","FilterTheMarketModalComponent_ng_template_6_Template","BehaviorSubject","Loader","LocationModalComponent_div_6_Template_map_marker_dragend_2_listener","ctx_r1","handleDragEnd","zoom","lat","lng","ɵɵpureFunction0","_c1","_c2","loader","options","types","locationHasBeenSelected","apiLoaded","importLibrary","then","Map","catch","handleSelectLocation","formatted_address","geometry","latLng","handleCloseWithGPSCoordinates","LocationModalComponent_Template","LocationModalComponent_Template_img_click_2_listener","LocationModalComponent_Template_input_ngModelChange_5_listener","LocationModalComponent_Template_input_onAddressChange_5_listener","LocationModalComponent_div_6_Template","LocationModalComponent_Template_button_click_9_listener","ɵɵpipeBind1","lotType","toLocaleUpperCase","MarketLotCardComponent","isSelling","formattedTownName","actionIsBeingDispatched","formatTextHelper","scoutCards","scoutsHaveBeenRetrieved$","scoutSelectors","getAllScoutCards","existingScoutCards","UserScoutCardsSuccess","UserScoutCardsFail","duplicateScoutCardExistsHelper","ReqUserScoutCards","text","formattedLength","slice","find","scoutCard","scoutType","inputs","MarketLotCardComponent_Template","MarketLotCardComponent_div_1_Template","MarketLotCardComponent_ng_template_2_Template","MarketLotCardComponent_Template_button_click_28_listener","MarketLotCardComponent_mat_progress_spinner_29_Template","MarketLotCardComponent_ng_template_30_Template","quantity","ɵɵtextInterpolate2","price","unitOfMeasure","isExpired","ɵɵpipeBind2","STEP_INFO_DATA","fromRoot","snackBarConfigs","fromAgents","StepInfoModalComponent","getAllLotMatchIdsFromNegotiationCards","completedCard_r7","hasActiveBroker","handleGetNotification","CompletedComponent_ng_template_10_div_0_div_2_app_negotiation_card_1_Template","CompletedComponent_ng_template_10_div_0_div_2_ng_template_2_Template","animateIn","notificationLotIds","CompletedComponent_ng_template_10_div_0_Template_app_dashboard_header__changeToggleEvent_1_listener","handleToggleChange","CompletedComponent_ng_template_10_div_0_Template_app_dashboard_header__searchInputEvent_1_listener","handleSearchInput","CompletedComponent_ng_template_10_div_0_div_2_Template","toggleIndex","completedToggles","searchInput","filteredCompletedCards","CompletedComponent_ng_template_10_div_0_Template","CompletedComponent_ng_template_10_ng_template_1_Template","completedCards","CompletedComponent","notifications","fromSuccess","negotiationActions","UserNegotiationCardsFail","UserNegotiationCardsSuccess","errorConfig","params","Object","keys","negotiationSelector","getAllOrderedNegotiationCards","negotiationCards","negotiationCard","isCompleted","filterAccordingToToggleHelper","fetchBrokerNegotiationDocuments","filterAccordingToSearchInputHelper","notificationSelectors","getCompletedNegotiationNotifications","setTimeout","toggleForAgent","map","notification","lotId","lotMatchIds","chuckSize","i","smallerLotMatchIdsArray","ReqGetBrokerNegotiationDocuments","ReqUserNegotiationCards","newToggleIndex","updateQueryParamsHelper","input","resetSearchInputFilterHelper","handleInfoModal","stepInfo","relativeTo","replaceUrl","referenceToggles","completedCard","animateInHelper","cards","lotName","toLocaleLowerCase","CompletedComponent_Template","CompletedComponent_Template_img_click_2_listener","CompletedComponent_Template_img_click_4_listener","CompletedComponent_Template_img_click_8_listener","CompletedComponent_div_9_Template","CompletedComponent_ng_template_10_Template","DashboardHeaderComponent_div_1_Template_input_ngModelChange_3_listener","activeRoute","DashboardHeaderComponent_mat_tab_group_2_Template_mat_tab_group_selectedTabChange_0_listener","handleChangeToggle","index","DashboardHeaderComponent_button_4_Template_button_click_0_listener","handleCreate","isScout","DashboardHeaderComponent","$changeToggleEvent","$searchInputEvent","$createEvent","infoText","isScoutOrLot","tooltip","showSearchBar","newToggle","emit","handleToggleSearchBar","toggles","dontShowTabs","dontShowSearchBar","outputs","DashboardHeaderComponent_Template","DashboardHeaderComponent_div_1_Template","DashboardHeaderComponent_mat_tab_group_2_Template","DashboardHeaderComponent_button_4_Template","DashboardHeaderComponent_Template_div_click_5_listener","undefined","DeleteAccountModalComponent","handleDelete","DeleteAccountModalComponent_Template","DeleteAccountModalComponent_Template_img_click_2_listener","DeleteAccountModalComponent_Template_button_click_9_listener","DeleteAccountModalComponent_Template_button_click_11_listener","ExpiredLotPeriodModalComponent","handleCloseWithAction","ExpiredLotPeriodModalComponent_Template","ExpiredLotPeriodModalComponent_Template_img_click_2_listener","ExpiredLotPeriodModalComponent_Template_button_click_12_listener","ExpiredLotPeriodModalComponent_Template_button_click_14_listener","LotsAnalyticsModalComponent","dateRange","lowerBound","upperBound","LotsAnalyticsModalComponent_Template","LotsAnalyticsModalComponent_Template_img_click_2_listener","LotsAnalyticsModalComponent_Template_div_click_7_listener","_r0","LotsAnalyticsModalComponent_Template_input_ngModelChange_10_listener","LotsAnalyticsModalComponent_Template_input_ngModelChange_11_listener","LotsAnalyticsModalComponent_Template_button_click_14_listener","LOTS_EDIT_ROUTE","LOTS_MATCH_ROUTE","LotCardComponent","lotCard","_lotCard","isBuyer","usableLotName","usableLotDeliveryPointName","deliveryPointName","handleCardClick","intendedAction","openExpiredLotPeriodDialogHelper","editLotHelper","lotActions","ReqSaveLotFormData","lot","viewLotHelper","LotCardComponent_Template","LotCardComponent_Template_div_click_5_listener","LotCardComponent_Template_div_click_10_listener","LotCardComponent_Template_div_click_33_listener","matchCount","NavigateToScoutModalComponent","Client","lotCard_r7","LotComponent_ng_template_10_div_0_Template_app_dashboard_header__changeToggleEvent_2_listener","LotComponent_ng_template_10_div_0_Template_app_dashboard_header__searchInputEvent_2_listener","LotComponent_ng_template_10_div_0_Template_app_dashboard_header__createEvent_2_listener","ctx_r11","handleNavigateToScoutModal","LotComponent_ng_template_10_div_0_div_3_Template","lotToggles","filteredLotCards","trackByIdx","LotComponent_ng_template_10_ng_template_1_Template_button_click_1_listener","LotComponent_ng_template_10_div_0_Template","LotComponent_ng_template_10_ng_template_1_Template","lotCards","LotComponent","isLotsLoading","lotSelectors","getAllOrderedLotCards","privatiseExpiredLotsHelper","UserLotsFail","UserLotsSuccess","ReqCloudMessagingPermissionStatus","ReqGetClientEntitiesSuccess","ReqGetClientEntitiesFail","ReqUserLots","ReqGetClientEntities","lotIds","forEach","push","ReqPrivatiseLots","LotComponent_Template","LotComponent_Template_img_click_2_listener","LotComponent_Template_img_click_4_listener","LotComponent_Template_img_click_8_listener","LotComponent_div_9_Template","LotComponent_ng_template_10_Template","NavigationEnd","iconDetails","isProfileCompleteHelper","iconDetail_r2","notificationCounts","negotiations","completedNegotiations","profile","MainNavComponent_div_3_div_1_Template_div_click_0_listener","handleToggleActiveRoute","MainNavComponent_div_3_div_1_ng_container_1_Template","matRippleColor","sourceBlue","sourceGrey","key","MainNavComponent_div_3_div_1_Template","maintainOrderHelper","MainNavComponent","confirmModalService","total","hideNav","events","val","activeRouteFromUrl","split","selectClientHelper","selectUserHelper","getUserNotificationsCountHelper","getNotificationCounts","ReqClientNotifications","ReqUserNotifications","newRoute","changeNavigationTabHelper","hideNavForAgentHelper","checkIfUserCompletedProfileHelper","url","isBroker","result","ngContentSelectors","MainNavComponent_Template","ɵɵprojection","MainNavComponent_div_3_Template","handleNavigateToScout","NavigateToScoutModalComponent_Template","NavigateToScoutModalComponent_Template_img_click_2_listener","NavigateToScoutModalComponent_Template_button_click_10_listener","NEGOTIATION_EDIT_ROUTE","NEGOTIATION_VIEW_ROUTE","PaymentCheckModalComponent","filterOutNegotiationDocument","NegotiationCardComponent_span_7_Template_span_click_0_listener","handleOpenPaymentDetails","cardStatusTag","activeNegotiationsCount","isExpanded","NegotiationCardComponent_ng_template_26_Template_div_click_1_listener","handleRouteToCompletedNegotiation","activeNegotiation_r11","lotMatchId","matchedPropertyCount","NegotiationCardComponent_div_28_div_1_Template_div_click_0_listener","handleRouteToNegotiation","isPending","NegotiationCardComponent_div_28_div_1_div_9_Template","NegotiationCardComponent_div_28_div_1_ng_container_15_Template","NegotiationCardComponent_div_28_div_1_ng_template_16_Template","ɵɵtextInterpolate3","isSafexMinus","ɵɵpureFunction7","NegotiationCardComponent_div_28_div_1_Template","activeNegotiations","_notifications","NegotiationCardComponent","notificationLotMatchIds","BASE_CARD_HEIGHT","cardHeight","isPaymentComplete","agentNegotiationExists","EXPANDED_CARD_HEIGHT","selectBindingNegotiationDocuments","getNegotiationDocuments","negotiationDocs","getNegotiationCardStatusTagHelper","paymentReady","paymentComplete","metricTons","paymentStepReady","counterPartySubmitted","currentUserSubmitted","negotiationNotifications","getCompletedNegotiationIdHelper","handleToggleIsExpanded","alterCardHeightHelper","toggleAnimateInHelper","activeNegotiation","activeNegotioation","negotiationDoc","checkIfCounterPartyHasSubmittedMatch","checkIfCurrentUserHasSubmitted","buyerEmail","sellerEmail","buyerPaid","sellerPaid","checkNegotiationPaymentStatusHelper","emailSent","sendIntroductionEmailHelper","ReqSendIntroductionEmail","hasActiveAgent","NegotiationCardComponent_Template","NegotiationCardComponent_Template_div_click_2_listener","NegotiationCardComponent_span_7_Template","NegotiationCardComponent_div_25_Template","NegotiationCardComponent_ng_template_26_Template","NegotiationCardComponent_div_28_Template","NegotiationCardComponent_div_29_Template","ɵɵpureFunction1","_c3","_c4","cropName","negotiatingRoomCard_r7","NegotiationsComponent_ng_template_10_div_0_div_2_app_negotiation_card_1_Template","NegotiationsComponent_ng_template_10_div_0_div_2_ng_template_2_Template","NegotiationsComponent_ng_template_10_div_0_Template_app_dashboard_header__changeToggleEvent_1_listener","NegotiationsComponent_ng_template_10_div_0_Template_app_dashboard_header__searchInputEvent_1_listener","NegotiationsComponent_ng_template_10_div_0_div_2_Template","negotiatingToggles","filteredNegotiatingRoomCards","NegotiationsComponent_ng_template_10_div_0_Template","NegotiationsComponent_ng_template_10_ng_template_1_Template","negotiatingRoomCards","NegotiationsComponent","getNegotiationNotifications","NegotiationsComponent_Template","NegotiationsComponent_Template_img_click_2_listener","NegotiationsComponent_Template_img_click_4_listener","NegotiationsComponent_Template_img_click_8_listener","NegotiationsComponent_div_9_Template","NegotiationsComponent_ng_template_10_Template","adminEmails","ratingData","verificationTypes","version","emailRegex","DOCUMENT_VIEWER_ROUTE","AdditionalEntityDetailsClass","DeliveryPointModalComponent","SkuduAnalyticsModalComponent","VerificationModalComponent","GrainSaModalComponent","indexOf","rating_r12","ProfileComponent_div_0_ng_template_9_Template_input_ngModelChange_5_listener","entityDetails","legalEntityName","ProfileComponent_div_0_ng_template_9_Template_input_ngModelChange_11_listener","email","ProfileComponent_div_0_ng_template_9_Template_button_click_16_listener","handleToggleExFarm","ProfileComponent_div_0_ng_template_9_Template_button_click_19_listener","ProfileComponent_div_0_ng_template_9_Template_mat_select_ngModelChange_25_listener","bbbeeRating","ProfileComponent_div_0_ng_template_9_mat_option_26_Template","ProfileComponent_div_0_ng_template_9_Template_button_click_29_listener","handleSaveEntityDetails","ProfileComponent_div_0_ng_template_9_mat_progress_spinner_30_Template","ProfileComponent_div_0_ng_template_9_ng_template_31_Template","exFarm","isDetailsActionLoading","ProfileComponent_div_0_ng_container_12_ng_template_2_div_7_Template_div_click_1_listener","_r26","deliveryPoint_r24","handleEditDeliveryPoint","ProfileComponent_div_0_ng_container_12_ng_template_2_Template_div_click_4_listener","_r28","ctx_r27","handleCreateDeliveryPoint","ProfileComponent_div_0_ng_container_12_ng_template_2_div_7_Template","deliveryPoints","ProfileComponent_div_0_ng_container_12_div_1_Template","ProfileComponent_div_0_ng_container_12_ng_template_2_Template","isDeliveryPointLoading","ProfileComponent_div_0_ng_template_13_ng_template_1_div_16_Template_div_click_5_listener","_r39","ctx_r38","toggleVerificationTypeHelper","ctx_r35","selectedVerificationType","ProfileComponent_div_0_ng_template_13_ng_template_1_div_18_Template_div_click_0_listener","_r42","user_r40","ctx_r41","handleToggleSelectUser","ctx_r36","selectedVerificationUsers","firstname","lastname","verificationType","source","ProfileComponent_div_0_ng_template_13_ng_template_1_ng_container_19_Template_button_click_1_listener","_r44","ctx_r43","handleOpenVerificationModal","ProfileComponent_div_0_ng_template_13_ng_template_1_ng_container_19_Template_button_click_3_listener","ctx_r45","handleClearUserSelection","ProfileComponent_div_0_ng_template_13_ng_template_1_Template_input_ngModelChange_2_listener","_r47","ctx_r46","userSearchTerm","ctx_r48","handleFilterUsers","ProfileComponent_div_0_ng_template_13_ng_template_1_Template_div_click_4_listener","ctx_r49","ProfileComponent_div_0_ng_template_13_ng_template_1_Template_div_click_6_listener","ctx_r50","handleRequestAnalytics","ProfileComponent_div_0_ng_template_13_ng_template_1_img_7_Template","ProfileComponent_div_0_ng_template_13_ng_template_1_ng_template_8_Template","ProfileComponent_div_0_ng_template_13_ng_template_1_div_16_Template","ProfileComponent_div_0_ng_template_13_ng_template_1_div_18_Template","ProfileComponent_div_0_ng_template_13_ng_template_1_ng_container_19_Template","ctx_r31","isAnalyticsActionLoading","_r33","filteredVerificationUsers","ProfileComponent_div_0_ng_template_13_div_0_Template","ProfileComponent_div_0_ng_template_13_ng_template_1_Template","isUsersLoading","_r30","ProfileComponent_div_0_form_16_button_48_Template_button_click_0_listener","_r64","ctx_r63","handleGetLotsInDateRange","ProfileComponent_div_0_form_16_button_48_ng_container_1_Template","ProfileComponent_div_0_form_16_button_48_ng_template_2_Template","ctx_r56","isGetLotsActionLoading","_r61","ProfileComponent_div_0_form_16_Template_input_ngModelChange_8_listener","_r66","ctx_r65","editableUser","ctx_r67","toggleProfileEditStatusHelper","ProfileComponent_div_0_form_16_Template_input_ngModelChange_14_listener","ctx_r68","ctx_r69","ProfileComponent_div_0_form_16_Template_input_ngModelChange_20_listener","ctx_r70","ctx_r71","ProfileComponent_div_0_form_16_Template_input_ngModelChange_26_listener","ctx_r72","phone","ctx_r73","ProfileComponent_div_0_form_16_Template_input_ngModelChange_32_listener","ctx_r74","ProfileComponent_div_0_form_16_Template_input_onAddressChange_32_listener","ctx_r75","ProfileComponent_div_0_form_16_img_36_Template","ProfileComponent_div_0_form_16_Template_input_ngModelChange_39_listener","ctx_r76","grainSAId","ProfileComponent_div_0_form_16_Template_img_click_41_listener","ctx_r77","handleGrainSAModal","ProfileComponent_div_0_form_16_Template_button_click_42_listener","ctx_r78","handleSaveUserProfile","ProfileComponent_div_0_form_16_mat_progress_spinner_43_Template","ProfileComponent_div_0_form_16_ng_template_44_Template","ProfileComponent_div_0_form_16_button_48_Template","ProfileComponent_div_0_form_16_Template_button_click_49_listener","ctx_r79","handleLogout","ProfileComponent_div_0_form_16_Template_button_click_51_listener","ctx_r80","handleDeletionRequestModal","ProfileComponent_div_0_form_16_ng_container_52_Template","ProfileComponent_div_0_form_16_ng_template_53_Template","ProfileComponent_div_0_form_16_Template_a_click_60_listener","ctx_r81","handleRouteToDocumentViewer","ProfileComponent_div_0_form_16_Template_a_click_63_listener","ctx_r82","ProfileComponent_div_0_form_16_Template_a_click_67_listener","ctx_r83","isGrainSAVerified","_r52","invalid","isUserProfileActionLoading","_r54","isAdmin","isDeleteActionLoading","_r58","ProfileComponent_div_0_Template_img_click_2_listener","_r85","ctx_r84","ProfileComponent_div_0_Template_img_click_4_listener","ctx_r86","ProfileComponent_div_0_Template_mat_tab_group_selectedTabChange_6_listener","ctx_r87","handleTabChange","ProfileComponent_div_0_div_8_Template","ProfileComponent_div_0_ng_template_9_Template","ProfileComponent_div_0_ng_container_12_Template","ProfileComponent_div_0_ng_template_13_Template","ProfileComponent_div_0_form_16_Template","tabIndex","ɵɵpropertyInterpolate","profileTabs","isEntityLoading","ProfileComponent","toggleIsCreateOwnEvent","additionalEntityDetails","verificationUsers","profileHasBeenEdited","isCreateOwn","grainSA","isVerified","requestVerificationUsersHelper","getAdditionalEntityDetails","deliveryPointsSelectors","getAllDeliveryPoints","appSelectors","getUsers","users","deliveryPointActions","EntityDeliveryPointsSuccess","EntityDeliveryPointsFail","ReqEntityDisplayInfo","ReqEntityDeliveryPoints","executedTime","now","newTabIndex","deliveryPointId","showInitial","isView","fromProfile","hidePublicDeliveryPoints","hideDeliveryPublicDeliveryPoints","lowerCaseSearchTerm","toLowerCase","verificationUser","userNameAndEmail","relatedEntityNames","entities","entity","filterByVerificationTypeHelper","isFilter","updateUsersVerificationTypeHelper","splice","option","isEmail","validateEmailHelper","UpdateEntityInfoSuccess","UpdateEntityInfoFail","ReqUpdateEntityInfo","appActions","ReqGetAnalytics","GetAnalyticsSuccess","analytics","numberOfBuyingScouts","numberOfSellingScouts","numberOfBuyingLots","numberOfSellingLots","totalSkuduMatches","volumeNegotiatedInTons","GetAnalyticsFail","ReqUpdateUserDetailsSuccess","ReqUpdateUserDetailsFail","updatedAt","ReqGetLotsInDateRange","GetLotsInDateRangeSuccess","GetLotsInDateRangeFail","ReqDeleteAccountEmail","ReqDeleteAccountEmailSuccess","ReqDeleteAccountEmailFail","showSubscription","regularExpression","test","String","ReqGetUsersForVerification","filteredVerificationUser","currentAction","currentItem","shouldDispatch","ReqUpdateUserVerificationStatusSuccess","ReqUpdateUserVerificationStatusFail","ReqUpdateUserVerificationStatus","userVerifications","transformUsersForVerificationHelper","showSnackBar","verificationDate","fullName","ProfileComponent_Template","ProfileComponent_div_0_Template","LOTS_CREATE_ROUTE","lotCount","ScoutCardComponent","handleEditScout","handleCreateLot","LinkCurrentScoutToLot","cropCategoryId","ScoutCardComponent_Template","ScoutCardComponent_Template_div_click_5_listener","ScoutCardComponent_div_23_Template","ScoutCardComponent_Template_button_click_25_listener","SCOUT_CREATE_ROUTE","scoutCard_r7","ScoutComponent_ng_template_10_div_0_Template_app_dashboard_header__changeToggleEvent_2_listener","ScoutComponent_ng_template_10_div_0_Template_app_dashboard_header__searchInputEvent_2_listener","ScoutComponent_ng_template_10_div_0_Template_app_dashboard_header__createEvent_2_listener","handleNavigateToCreateScout","ScoutComponent_ng_template_10_div_0_div_3_Template","scoutToggles","filteredScoutCards","ScoutComponent_ng_template_10_ng_template_1_Template_button_click_1_listener","ScoutComponent_ng_template_10_div_0_Template","ScoutComponent_ng_template_10_ng_template_1_Template","ScoutComponent","isScoutLoading","getAllOrderedScoutCards","ScoutComponent_Template","ScoutComponent_Template_img_click_2_listener","ScoutComponent_Template_img_click_4_listener","ScoutComponent_Template_img_click_8_listener","ScoutComponent_div_9_Template","ScoutComponent_ng_template_10_Template","SkuduAnalyticsModalComponent_Template","SkuduAnalyticsModalComponent_Template_img_click_2_listener","SkuduAnalyticsModalComponent_Template_button_click_30_listener","VerificationModalComponent_div_6_Template_div_click_0_listener","verificationType_r2","handleSelectVerificationType","showWarning","handleCloseModalAndUpdateVerification","VerificationModalComponent_Template","VerificationModalComponent_Template_img_click_4_listener","VerificationModalComponent_div_6_Template","VerificationModalComponent_div_9_Template","VerificationModalComponent_Template_button_click_10_listener","DashboardComponent","RouterModule","routes","path","component","children","redirectTo","pathMatch","DashboardRoutingModule","_3","forChild","imports","exports","AuthService","authService","user$","DashboardComponent_Template","CommonModule","EffectsModule","StoreModule","FormsModule","AngularMaterialModule","DeliveryPointModule","VerificationBadgeModule","ScrollingModule","BrokerInfoCardModule","NegotiationEffects","MatchEffects","LotEffects","BrokersEffects","fromLot","fromMatch","fromNegotiation","GoogleMapsModule","UpdateInfoModalComponent","NgxGpAutocompleteModule","DashboardModule","forFeature","lotFeatureKey","lotReducer","matchFeatureKey","matchReducer","negotiationFeatureKey","negotiationReducer","declarations","StoreFeatureModule","EffectsFeatureModule"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}