{"version":3,"file":"src_app_features_broker-dashboard_broker-dashboard_module_ts.js","mappings":"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","sources":["./src/app/features/broker-dashboard/broker-dashboard-routing.module.ts","./src/app/features/broker-dashboard/broker-dashboard.component.ts","./src/app/features/broker-dashboard/broker-dashboard.component.html","./src/app/features/broker-dashboard/broker-dashboard.module.ts","./src/app/features/broker-dashboard/components/add-new-client-modal/add-new-client-modal.component.ts","./src/app/features/broker-dashboard/components/add-new-client-modal/add-new-client-modal.component.html","./src/app/features/broker-dashboard/components/broker-main-nav/broker-main-nav.component.ts","./src/app/features/broker-dashboard/components/broker-main-nav/broker-main-nav.html","./src/app/features/broker-dashboard/components/broker-toolbar/broker-toolbar.component.ts","./src/app/features/broker-dashboard/components/broker-toolbar/broker-toolbar.component.html","./src/app/features/broker-dashboard/components/request-sent-modal/request-sent-modal.component.ts","./src/app/features/broker-dashboard/components/request-sent-modal/request-sent-modal.component.html"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { BrokerDashboardComponent } from './broker-dashboard.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: BrokerDashboardComponent,\r\n    },\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n})\r\nexport class BrokerDashboardRoutingModule {}\r\n","import { Component, EventEmitter, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatLegacyDialog as MatDialog } from '@angular/material/legacy-dialog';\r\nimport { AddNewClientModalComponent } from './components/add-new-client-modal/add-new-client-modal.component';\r\nimport { Broker, Client, User } from '../../core/models/queryModels';\r\nimport { Actions, ofType } from '@ngrx/effects';\r\nimport { Store } from '@ngrx/store';\r\nimport { State } from '../../core/ngrx/authState/auth.reducer';\r\nimport { authSelectors } from '../../core/ngrx/reducers';\r\nimport { take, takeUntil } from 'rxjs/operators';\r\nimport { brokersActions, brokersSelectors } from '../../core/ngrx/brokers';\r\nimport * as snackBarConfigs from '../../core/helpers/snackbar';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { LOTS_ROUTE } from '../../core/helpers/constants';\r\nimport { ConfirmationModalComponent } from './components/confirmation-modal/confirmation-modal.component';\r\nimport { authActions } from '../../core/ngrx/authState';\r\nimport { lotActions } from '../../core/ngrx/entities/lot';\r\nimport { NotificationsService } from '../../core/services/notifications/notifications.service';\r\nimport { Dictionary } from '@ngrx/entity';\r\nimport { notificationActions } from '../../core/ngrx/entities/notifications';\r\nimport { scoutActions } from '../../core/ngrx/entities/scout';\r\n\r\n@Component({\r\n    selector: 'app-broker-dashboard',\r\n    templateUrl: './broker-dashboard.component.html',\r\n    styleUrls: ['./broker-dashboard.scss'],\r\n})\r\nexport class BrokerDashboardComponent implements OnInit, OnDestroy {\r\n    tabIndex = 0;\r\n    broker: Broker;\r\n    brokers: Broker[];\r\n    activeClients: Client[];\r\n    filteredActiveClients: Client[];\r\n    pendingClients: Client[];\r\n    filteredPendingClients: Client[];\r\n    pendingRequestsByBroker: string[];\r\n    pendingRequests: string[];\r\n    acceptedRequests: string[];\r\n    searchResults: Client[];\r\n    clientNotificationsCount: Dictionary<number>;\r\n\r\n    private destroyed$ = new EventEmitter();\r\n\r\n    constructor(\r\n        private dialog: MatDialog,\r\n        private actions$: Actions,\r\n        private store: Store<State>,\r\n        private snackbar: MatSnackBar,\r\n        private router: Router,\r\n    ) {}\r\n\r\n    // #region Life Cycle Hooks\r\n    ngOnInit(): void {\r\n        this.fetchBrokerInfoHelper();\r\n        this.selectActiveClientsList();\r\n        this.selectPendingClientsList();\r\n        this.selectPendingRequests();\r\n        this.selectAcceptedRequests();\r\n        this.clearClientObject();\r\n        this.clearBrokerRequest();\r\n        this.clearClientEntities();\r\n        this.clearAllLots();\r\n        this.clearAllScouts();\r\n        this.selectClientsNotificationsCount();\r\n        this.clearNotificationsHelper();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.destroyed$.emit(true);\r\n    }\r\n    // #endregion\r\n\r\n    clearClientObject(): void {\r\n        this.store.dispatch(brokersActions.ClearClientObject_Broker());\r\n    }\r\n\r\n    clearBrokerRequest(): void {\r\n        this.store.dispatch(brokersActions.ClearBrokerRequest());\r\n    }\r\n\r\n    clearClientEntities(): void {\r\n        this.store.dispatch(authActions.ClearClientEntities());\r\n    }\r\n\r\n    clearAllLots(): void {\r\n        this.store.dispatch(lotActions.ClearAllLots());\r\n    }\r\n\r\n    clearAllScouts(): void {\r\n        this.store.dispatch(scoutActions.ClearAllScouts());\r\n    }\r\n\r\n    selectPendingClientsList(): void {\r\n        this.store\r\n            .select(brokersSelectors.getPendingClients)\r\n            .pipe(takeUntil(this.destroyed$))\r\n            .subscribe((pendingClients) => {\r\n                this.pendingClients = pendingClients;\r\n                this.filteredPendingClients = pendingClients;\r\n            });\r\n    }\r\n\r\n    selectPendingRequests(): void {\r\n        this.store\r\n            .select(brokersSelectors.getPendingRequests)\r\n            .pipe(takeUntil(this.destroyed$))\r\n            .subscribe((pendingRequests) => {\r\n                this.pendingRequests = pendingRequests.map((request) => request.clientUid);\r\n                this.pendingRequestsByBroker = pendingRequests\r\n                    .filter((request) => request.sentByBroker)\r\n                    .map((request) => request.clientUid);\r\n\r\n                this.pendingRequests.length\r\n                    ? this.fetchPendingClientRequests()\r\n                    : this.store.dispatch(brokersActions.ResetPendingClientsState());\r\n            });\r\n    }\r\n\r\n    selectAcceptedRequests(): void {\r\n        this.store\r\n            .select(brokersSelectors.getAcceptedRequests)\r\n            .pipe(takeUntil(this.destroyed$))\r\n            .subscribe((acceptedRequests) => {\r\n                this.acceptedRequests = acceptedRequests.map((request) => request.clientUid);\r\n\r\n                if (this.acceptedRequests.length) {\r\n                    this.fetchActiveClientsNotifications();\r\n                    this.fetchActiveClientsList();\r\n                } else {\r\n                    this.store.dispatch(brokersActions.ResetActiveClientsState());\r\n                }\r\n            });\r\n    }\r\n\r\n    selectActiveClientsList(): void {\r\n        this.store\r\n            .select(brokersSelectors.getActiveClients)\r\n            .pipe(takeUntil(this.destroyed$))\r\n            .subscribe((activeClients) => {\r\n                this.activeClients = activeClients;\r\n                this.filteredActiveClients = activeClients;\r\n            });\r\n    }\r\n\r\n    selectClientsNotificationsCount(): void {\r\n        this.store\r\n            .select(brokersSelectors.getClientNotificationsCount)\r\n            .pipe(takeUntil(this.destroyed$))\r\n            .subscribe((clientNotificationsCount) => {\r\n                this.clientNotificationsCount = clientNotificationsCount;\r\n            });\r\n    }\r\n\r\n    fetchActiveClientsNotifications(): void {\r\n        if (this.acceptedRequests.length > 10) {\r\n            const chuckSize = 10;\r\n            for (let i = 0; i < this.acceptedRequests.length; i += chuckSize) {\r\n                const smallerAcceptedRequestsIdsArray: string[] = this.acceptedRequests.slice(i, i + chuckSize);\r\n                this.store.dispatch(\r\n                    brokersActions.ReqClientsNotifications({ clientsUids: smallerAcceptedRequestsIdsArray }),\r\n                );\r\n            }\r\n        } else {\r\n            this.store.dispatch(brokersActions.ReqClientsNotifications({ clientsUids: this.acceptedRequests }));\r\n        }\r\n    }\r\n\r\n    fetchBrokerInfoHelper(): void {\r\n        this.store\r\n            .select(authSelectors.getUser)\r\n            .pipe(takeUntil(this.destroyed$))\r\n            .subscribe((broker: User) => {\r\n                this.broker = broker as Broker;\r\n                this.fetchPendingRequests();\r\n                this.fetchAcceptedRequests();\r\n            });\r\n    }\r\n\r\n    clearNotificationsHelper(): void {\r\n        this.store.dispatch(notificationActions.ClearNotifications());\r\n    }\r\n\r\n    fetchActiveClientsList(): void {\r\n        if (this.acceptedRequests.length > 10) {\r\n            const chuckSize = 10;\r\n            for (let i = 0; i < this.acceptedRequests.length; i += chuckSize) {\r\n                const smallerAcceptedRequestsIdsArray: string[] = this.acceptedRequests.slice(i, i + chuckSize);\r\n                this.store.dispatch(\r\n                    brokersActions.ReqGetActiveClients_Broker({ clientIds: smallerAcceptedRequestsIdsArray }),\r\n                );\r\n            }\r\n        } else {\r\n            this.store.dispatch(brokersActions.ReqGetActiveClients_Broker({ clientIds: this.acceptedRequests }));\r\n        }\r\n    }\r\n\r\n    fetchPendingClientRequests(): void {\r\n        if (this.pendingRequests.length > 10) {\r\n            const chuckSize = 10;\r\n            for (let i = 0; i < this.pendingRequests.length; i += chuckSize) {\r\n                const smallerPendingRequestsIdsArray: string[] = this.pendingRequests.slice(i, i + chuckSize);\r\n                this.store.dispatch(\r\n                    brokersActions.ReqGetPendingClients_Broker({ clientIds: smallerPendingRequestsIdsArray }),\r\n                );\r\n            }\r\n        } else {\r\n            this.store.dispatch(brokersActions.ReqGetPendingClients_Broker({ clientIds: this.pendingRequests }));\r\n        }\r\n    }\r\n\r\n    fetchPendingRequests(): void {\r\n        this.store.dispatch(brokersActions.ReqPendingBrokerRequests_Broker({ brokerUid: this.broker.uid }));\r\n    }\r\n\r\n    fetchAcceptedRequests(): void {\r\n        this.store.dispatch(brokersActions.ReqAcceptedBrokerRequests_Broker({ brokerUid: this.broker.uid }));\r\n    }\r\n\r\n    acceptRequest(clientUid: string): void {\r\n        this.actions$\r\n            .pipe(\r\n                ofType(brokersActions.ReqAcceptRequest_SharedSuccess, brokersActions.ReqAcceptRequest_SharedFail),\r\n                take(1),\r\n            )\r\n            .subscribe((action) => {\r\n                if (action.type === brokersActions.ReqAcceptRequest_SharedSuccess.type) {\r\n                    this.snackbar.open(\r\n                        'Client request has been accepted successfully.',\r\n                        'CLOSE',\r\n                        snackBarConfigs.successConfig,\r\n                    );\r\n                    this.store.dispatch(\r\n                        brokersActions.ReqSendPairingNotification_Shared({\r\n                            fromBroker: true,\r\n                            newRequest: false,\r\n                            brokerUid: this.broker.uid,\r\n                            clientUid: clientUid,\r\n                        }),\r\n                    );\r\n                } else {\r\n                    this.snackbar.open(\r\n                        'Something went wrong while trying to accept client request, Please try again.',\r\n                        'CLOSE',\r\n                        snackBarConfigs.errorConfig,\r\n                    );\r\n                }\r\n            });\r\n\r\n        this.store.dispatch(brokersActions.ReqAcceptRequest_Shared({ brokerUid: this.broker.uid, clientUid }));\r\n    }\r\n\r\n    declineRequest(clientUid: string): void {\r\n        this.actions$\r\n            .pipe(\r\n                ofType(brokersActions.ReqDeleteRequest_SharedSuccess, brokersActions.ReqDeleteRequest_SharedFail),\r\n                take(1),\r\n            )\r\n            .subscribe((action) => {\r\n                if (action.type === brokersActions.ReqDeleteRequest_SharedSuccess.type) {\r\n                    this.snackbar.open(\r\n                        'Client request has been declined successfully.',\r\n                        'CLOSE',\r\n                        snackBarConfigs.successConfig,\r\n                    );\r\n                } else {\r\n                    this.snackbar.open(\r\n                        'Something went wrong while trying to decline client request, Please try again.',\r\n                        'CLOSE',\r\n                        snackBarConfigs.errorConfig,\r\n                    );\r\n                }\r\n            });\r\n\r\n        this.store.dispatch(brokersActions.ReqDeleteRequest_Shared({ brokerUid: this.broker.uid, clientUid }));\r\n    }\r\n\r\n    removeClient(clientUid: string): void {\r\n        this.actions$\r\n            .pipe(\r\n                ofType(brokersActions.ReqDeleteRequest_SharedSuccess, brokersActions.ReqDeleteRequest_SharedFail),\r\n                take(1),\r\n            )\r\n            .subscribe((action) => {\r\n                if (action.type === brokersActions.ReqDeleteRequest_SharedSuccess.type) {\r\n                    this.snackbar.open('Client has been removed successfully.', 'CLOSE', snackBarConfigs.successConfig);\r\n                } else {\r\n                    this.snackbar.open(\r\n                        'Something went wrong while trying to remove the client , Please try again.',\r\n                        'CLOSE',\r\n                        snackBarConfigs.errorConfig,\r\n                    );\r\n                }\r\n            });\r\n\r\n        this.store.dispatch(brokersActions.ReqDeleteRequest_Shared({ brokerUid: this.broker.uid, clientUid }));\r\n    }\r\n\r\n    handleClientSearch(searchPhrase: string): void {\r\n        searchPhrase = searchPhrase.toLowerCase();\r\n        if (this.tabIndex === 0) {\r\n            this.filteredActiveClients = this.filterClientsHelper(this.activeClients, searchPhrase);\r\n        } else {\r\n            this.filteredPendingClients = this.filterClientsHelper(this.pendingClients, searchPhrase);\r\n        }\r\n    }\r\n\r\n    handleGetToggleOption(index: number): void {\r\n        this.tabIndex = index;\r\n    }\r\n\r\n    handleAddNewClient(): void {\r\n        this.dialog.open(AddNewClientModalComponent, {\r\n            panelClass: 'g-modal-container',\r\n        });\r\n    }\r\n\r\n    handleViewLots(clientUid: string): void {\r\n        const client = this.activeClients.filter((clientObj) => clientObj.uid === clientUid).pop();\r\n        this.store.dispatch(brokersActions.PopulateClientObject({ client }));\r\n        this.store.dispatch(brokersActions.ReqGetBrokerRequest({ brokerUid: this.broker.uid, clientUid: clientUid }));\r\n        this.router.navigate([LOTS_ROUTE]);\r\n    }\r\n\r\n    filterClientsHelper(clientsList: Client[], searchPhrase: string): Client[] {\r\n        return clientsList.filter(\r\n            ({ firstname, lastname, email }) =>\r\n                firstname.toLowerCase().includes(searchPhrase) ||\r\n                lastname.toLowerCase().includes(searchPhrase) ||\r\n                email.toLowerCase().includes(searchPhrase),\r\n        );\r\n    }\r\n\r\n    // #region Confirmation Modals/Dialogs\r\n\r\n    handleViewRequest(client: Client): void {\r\n        const dialogRef = this.dialog.open(ConfirmationModalComponent, {\r\n            panelClass: 'g-modal-container',\r\n            data: {\r\n                header: 'Accept Request?',\r\n                subHeader: 'The following user would like you to be their broker for their lots! ',\r\n                clientData: client,\r\n                confirmButton: 'Accept Request',\r\n                declineButton: 'Decline Request',\r\n            },\r\n        });\r\n\r\n        dialogRef.afterClosed().subscribe((result) => {\r\n            if (result === true) {\r\n                this.acceptRequest(client.uid);\r\n            } else if (result === false) {\r\n                this.declineRequest(client.uid);\r\n            }\r\n        });\r\n    }\r\n\r\n    handleCancelRequest(client: Client): void {\r\n        const dialogRef = this.dialog.open(ConfirmationModalComponent, {\r\n            panelClass: 'g-modal-container',\r\n            data: {\r\n                header: 'Pending Request',\r\n                subHeader:\r\n                    'This request is awaiting acceptance from the MX User.' +\r\n                    ' You may cancel this request before they have accepted.',\r\n                clientData: client,\r\n                confirmButton: 'Keep Request',\r\n                declineButton: 'Cancel Request',\r\n            },\r\n        });\r\n\r\n        dialogRef.afterClosed().subscribe((result) => {\r\n            if (result === false) {\r\n                this.declineRequest(client.uid);\r\n            }\r\n        });\r\n    }\r\n\r\n    handleOpenDeleteClientConfirmation(client: Client): void {\r\n        const dialogRef = this.dialog.open(ConfirmationModalComponent, {\r\n            panelClass: 'g-modal-container',\r\n            data: {\r\n                header: 'Are You Sure?',\r\n                subHeader:\r\n                    'Are you sure you want to remove this client?' +\r\n                    ' The contractual agreement period is not concluded. This cannot be undone.',\r\n                clientData: client,\r\n                confirmButton: 'Keep Client',\r\n                declineButton: 'Remove Client',\r\n            },\r\n        });\r\n\r\n        dialogRef.afterClosed().subscribe((result) => {\r\n            if (result === false) {\r\n                this.removeClient(client.uid);\r\n            }\r\n        });\r\n    }\r\n\r\n    // #endregion\r\n}\r\n","<div class=\"d-flex flex-column g-app-dimensions\">\r\n    <div class=\"l-header-container d-flex flex-column g-fade-in\">\r\n        <app-broker-main-nav ($handleNotificationNavigate)=\"handleGetToggleOption($event)\"></app-broker-main-nav>\r\n        <app-broker-toolbar\r\n            ($searchInputEvent)=\"handleClientSearch($event)\"\r\n            ($changeToggleEvent)=\"handleGetToggleOption($event)\"\r\n            ($addNewClientEvent)=\"handleAddNewClient()\"\r\n            [tabIndex]=\"tabIndex\"\r\n        ></app-broker-toolbar>\r\n    </div>\r\n\r\n    <!-- #Region Clients Tab-->\r\n    <div *ngIf=\"tabIndex === 0\" class=\"l-list-container d-flex flex-column\">\r\n        <div *ngIf=\"filteredActiveClients.length; else noActiveClients\">\r\n            <div class=\"l-card-container\" *ngFor=\"let client of filteredActiveClients\">\r\n                <app-broker-info-card [data]=\"client\"></app-broker-info-card>\r\n                <div class=\"d-flex flex-column\">\r\n                    <div class=\"l-buttons d-flex flex-row\">\r\n                        <button\r\n                            mat-flat-button\r\n                            class=\"g-secondary-button l-secondary-button mt-0\"\r\n                            (click)=\"handleViewLots(client.uid)\"\r\n                        >\r\n                            View Client\r\n                            <div class=\"l-btn-red-dot\" *ngIf=\"this.clientNotificationsCount[client.uid]\">\r\n                                {{ this.clientNotificationsCount[client.uid] }}\r\n                            </div>\r\n                        </button>\r\n                        <button\r\n                            mat-flat-button\r\n                            class=\"g-secondary-button mt-0 w-auto\"\r\n                            (click)=\"handleOpenDeleteClientConfirmation(client)\"\r\n                        >\r\n                            <img src=\"assets/icons/delete-icon-black.svg\" alt=\"delete\" />\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <ng-template #noActiveClients>\r\n            <div class=\"d-flex flex-column g-text-h1-dark justify-content-center align-content-center h-50 p-2\">\r\n                You currently have no active clients\r\n            </div>\r\n        </ng-template>\r\n    </div>\r\n    <!--  #endregion-->\r\n\r\n    <!--  #Region Pending Tab-->\r\n    <div *ngIf=\"tabIndex === 1\" class=\"l-list-container d-flex flex-column\">\r\n        <div *ngIf=\"filteredPendingClients.length; else noPendingClients\">\r\n            <div class=\"l-card-container\" *ngFor=\"let client of filteredPendingClients\">\r\n                <app-broker-info-card [data]=\"client\"></app-broker-info-card>\r\n                <div class=\"d-flex flex-column\">\r\n                    <button\r\n                        *ngIf=\"!pendingRequestsByBroker.includes(client.uid); else showOutGoingRequest\"\r\n                        mat-flat-button\r\n                        class=\"g-primary-button mt-0\"\r\n                        (click)=\"handleViewRequest(client)\"\r\n                    >\r\n                        View\r\n                    </button>\r\n                    <ng-template #showOutGoingRequest>\r\n                        <button mat-flat-button class=\"g-secondary-button mt-0\" (click)=\"handleCancelRequest(client)\">\r\n                            Cancel\r\n                        </button>\r\n                    </ng-template>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <ng-template #noPendingClients>\r\n            <div class=\"d-flex flex-column g-text-h1-dark justify-content-center align-content-center h-50 p-2\">\r\n                You currently have no Pending Client Requests\r\n            </div>\r\n        </ng-template>\r\n    </div>\r\n    <!--  #endregion-->\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BrokerDashboardComponent } from './broker-dashboard.component';\r\nimport { BrokerDashboardRoutingModule } from './broker-dashboard-routing.module';\r\nimport { HomeModule } from '../home/home.module';\r\nimport { BrokerMainNavComponent } from './components/broker-main-nav/broker-main-nav.component';\r\nimport { BrokerToolbarComponent } from './components/broker-toolbar/broker-toolbar.component';\r\nimport { AngularMaterialModule } from '../shared/angular-material.module';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { AddNewClientModalComponent } from './components/add-new-client-modal/add-new-client-modal.component';\r\nimport { RequestSentModalComponent } from './components/request-sent-modal/request-sent-modal.component';\r\nimport { BrokerInfoCardModule } from '../shared/components/broker-info-card/broker-info-card.component';\r\nimport { ConfirmationModalComponent } from './components/confirmation-modal/confirmation-modal.component';\r\nimport { MatLegacyDialogModule as MatDialogModule } from '@angular/material/legacy-dialog';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        BrokerDashboardComponent,\r\n        BrokerMainNavComponent,\r\n        BrokerToolbarComponent,\r\n        AddNewClientModalComponent,\r\n        RequestSentModalComponent,\r\n        ConfirmationModalComponent,\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        AngularMaterialModule,\r\n        BrokerDashboardRoutingModule,\r\n        HomeModule,\r\n        FormsModule,\r\n        BrokerInfoCardModule,\r\n        MatDialogModule,\r\n    ],\r\n})\r\nexport class BrokerDashboardModule {}\r\n","import { Component, EventEmitter, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatLegacyDialog as MatDialog, MatLegacyDialogRef as MatDialogRef } from '@angular/material/legacy-dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport * as snackBarConfigs from '../../../../core/helpers/snackbar';\r\nimport { RequestSentModalComponent } from '../request-sent-modal/request-sent-modal.component';\r\nimport { Actions, ofType } from '@ngrx/effects';\r\nimport { Store } from '@ngrx/store';\r\nimport { State } from '../../../../core/ngrx/authState/auth.reducer';\r\nimport { take, takeUntil } from 'rxjs/operators';\r\nimport { brokersActions, brokersSelectors } from '../../../../core/ngrx/brokers';\r\nimport { Broker, Client } from '../../../../core/models/queryModels';\r\nimport { authSelectors } from '../../../../core/ngrx/reducers';\r\n\r\n@Component({\r\n    selector: 'app-add-new-client-modal',\r\n    templateUrl: './add-new-client-modal.component.html',\r\n    styleUrls: ['./add-new-client-modal.component.scss'],\r\n})\r\nexport class AddNewClientModalComponent implements OnInit, OnDestroy {\r\n    clientEmail: string;\r\n    emailValidationLoading: boolean;\r\n    client: Client;\r\n    broker: Broker;\r\n    activeClients: string[];\r\n    pendingRequestsByBroker: string[];\r\n    pendingRequestsByClient: string[];\r\n    private destroyed$ = new EventEmitter();\r\n\r\n    constructor(\r\n        private dialogRef: MatDialogRef<AddNewClientModalComponent>,\r\n        private snackbar: MatSnackBar,\r\n        private dialog: MatDialog,\r\n        private actions$: Actions,\r\n        private store: Store<State>,\r\n    ) {}\r\n    // #region Life Cycle Hooks\r\n    ngOnInit(): void {\r\n        this.selectClient();\r\n        this.selectBroker();\r\n        this.selectActiveClientsList();\r\n        this.selectPendingRequests();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.destroyed$.emit(true);\r\n    }\r\n\r\n    // #endregion\r\n\r\n    selectClient(): void {\r\n        this.store\r\n            .select(brokersSelectors.getCurrentClient)\r\n            .pipe(takeUntil(this.destroyed$))\r\n            .subscribe((client) => {\r\n                this.client = client;\r\n            });\r\n    }\r\n\r\n    selectBroker(): void {\r\n        this.store\r\n            .select(authSelectors.getUser)\r\n            .pipe(takeUntil(this.destroyed$))\r\n            .subscribe((broker) => {\r\n                this.broker = broker as Broker;\r\n            });\r\n    }\r\n\r\n    selectActiveClientsList(): void {\r\n        this.store\r\n            .select(brokersSelectors.getActiveClients)\r\n            .pipe(takeUntil(this.destroyed$))\r\n            .subscribe((activeClients) => {\r\n                this.activeClients = activeClients.map((client) => client.uid);\r\n            });\r\n    }\r\n\r\n    selectPendingRequests(): void {\r\n        this.store\r\n            .select(brokersSelectors.getPendingRequests)\r\n            .pipe(takeUntil(this.destroyed$))\r\n            .subscribe((pendingRequests) => {\r\n                this.pendingRequestsByBroker = pendingRequests.map((request) =>\r\n                    request.sentByBroker ? request.clientUid : null,\r\n                );\r\n                this.pendingRequestsByClient = pendingRequests.map((request) =>\r\n                    !request.sentByBroker ? request.clientUid : null,\r\n                );\r\n            });\r\n    }\r\n\r\n    handleCloseModal(): void {\r\n        this.dialogRef.close();\r\n    }\r\n\r\n    handleValidateClientEmail(): void {\r\n        this.emailValidationLoading = true;\r\n\r\n        this.actions$\r\n            .pipe(\r\n                ofType(\r\n                    brokersActions.ReqCheckIfClientExists_BrokerSuccess,\r\n                    brokersActions.ReqCheckIfClientExists_BrokerFail,\r\n                ),\r\n                take(1),\r\n            )\r\n            .subscribe((action) => {\r\n                if (action.type === brokersActions.ReqCheckIfClientExists_BrokerSuccess.type) {\r\n                    this.dialogRef.close(this.clientEmail);\r\n                    this.checkIfClientHasBroker();\r\n                } else {\r\n                    this.emailValidationLoading = false;\r\n                    this.snackbar.open(\r\n                        'The client email provided does not exist on our system, please enter a valid client email',\r\n                        'CLOSE',\r\n                        snackBarConfigs.errorConfig,\r\n                    );\r\n                }\r\n            });\r\n\r\n        this.store.dispatch(brokersActions.ReqCheckIfClientExists_Broker({ email: this.clientEmail }));\r\n    }\r\n\r\n    checkIfClientHasBroker(): void {\r\n        this.actions$\r\n            .pipe(\r\n                ofType(brokersActions.ReqCheckIfClientHasBrokerSuccess, brokersActions.ReqCheckIfClientHasBrokerFail),\r\n                take(1),\r\n            )\r\n            .subscribe((action) => {\r\n                if (action.type === brokersActions.ReqCheckIfClientHasBrokerSuccess.type) {\r\n                    if (action.result) {\r\n                        this.activeClients.includes(this.client.uid)\r\n                            ? this.snackbar.open(\r\n                                  'You have already been paired with the client, please try another client',\r\n                                  'CLOSE',\r\n                                  snackBarConfigs.errorConfig,\r\n                              )\r\n                            : this.snackbar.open(\r\n                                  'The client already has a Broker, please try another client or contact support if you think this is a mistake',\r\n                                  'CLOSE',\r\n                                  snackBarConfigs.errorConfig,\r\n                              );\r\n\r\n                        this.store.dispatch(brokersActions.ClearClientObject_Broker());\r\n                    } else {\r\n                        this.checkPendingRequest();\r\n                    }\r\n                }\r\n            });\r\n\r\n        this.store.dispatch(brokersActions.ReqCheckIfClientHasBroker({ clientId: this.client.uid }));\r\n    }\r\n\r\n    checkPendingRequest(): void {\r\n        if (this.pendingRequestsByClient.includes(this.client.uid)) {\r\n            this.snackbar.open('The client has already sent you a request', 'CLOSE', snackBarConfigs.errorConfig);\r\n        } else if (this.pendingRequestsByBroker.includes(this.client.uid)) {\r\n            this.snackbar.open('You have already sent the client a request', 'CLOSE', snackBarConfigs.errorConfig);\r\n        } else {\r\n            this.sendClientRequest();\r\n        }\r\n    }\r\n\r\n    sendClientRequest(): void {\r\n        this.actions$\r\n            .pipe(\r\n                ofType(brokersActions.ReqCreateRequest_SharedSuccess, brokersActions.ReqCreateRequest_SharedFail),\r\n                take(1),\r\n            )\r\n            .subscribe((action) => {\r\n                if (action.type === brokersActions.ReqCreateRequest_SharedSuccess.type) {\r\n                    this.store.dispatch(\r\n                        brokersActions.ReqSendPairingNotification_Shared({\r\n                            fromBroker: true,\r\n                            newRequest: true,\r\n                            brokerUid: action.brokerUid,\r\n                            clientUid: action.clientUid,\r\n                        }),\r\n                    );\r\n                    this.dialog.open(RequestSentModalComponent, {\r\n                        panelClass: 'g-modal-container',\r\n                    });\r\n                } else {\r\n                    this.emailValidationLoading = false;\r\n                    this.snackbar.open(\r\n                        'Something went wrong while trying to send the request, please try again',\r\n                        'CLOSE',\r\n                        snackBarConfigs.errorConfig,\r\n                    );\r\n                }\r\n            });\r\n\r\n        this.store.dispatch(\r\n            brokersActions.ReqCreateRequest_Shared({\r\n                brokerUid: this.broker.uid,\r\n                clientUid: this.client.uid,\r\n                sentByBroker: true,\r\n            }),\r\n        );\r\n        this.store.dispatch(brokersActions.ClearClientObject_Broker());\r\n    }\r\n}\r\n","<div class=\"d-flex flex-column\">\r\n  <!-- #region Header -->\r\n\r\n  <div class=\"d-flex flex-column\">\r\n    <div class=\"d-flex flex-row justify-content-end w-100\">\r\n      <img\r\n        class=\"g-modal-close-icon\"\r\n        src=\"./assets/icons/close-icon-dark.svg\"\r\n        alt=\"close\"\r\n        (click)=\"handleCloseModal()\" />\r\n    </div>\r\n    <h1 class=\"g-text-h1-dark mb-3 w-100\">\r\n      <b>Client Email</b>\r\n    </h1>\r\n  </div>\r\n\r\n  <!-- #endregion -->\r\n\r\n  <!-- #region Modal Content -->\r\n\r\n  <div class=\"g-text-p-dark\">\r\n    <p>\r\n      Please enter the client's email to send them a pairing request.\r\n    </p>\r\n  </div>\r\n\r\n  <div class=\"g-text-input-container\">\r\n    <input\r\n      #email=\"ngModel\"\r\n      pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\"\r\n      class=\"g-input-text-no-icon\"\r\n      type=\"text\"\r\n      name=\"email\"\r\n      placeholder=\"Client Email\"\r\n      [(ngModel)]=\"clientEmail\"\r\n      [disabled]=\"emailValidationLoading\"\r\n      required\r\n    />\r\n  </div>\r\n  <!-- #endregion -->\r\n\r\n  <!-- #region Buttons -->\r\n\r\n  <button\r\n    [disabled]=\"email.errors?.pattern || email.pristine || emailValidationLoading\"\r\n    [class.g-disabled-button]=\"email.errors?.pattern || email.pristine\"\r\n    class=\"g-primary-button my-2\"\r\n    (click)=\"handleValidateClientEmail()\">\r\n    <mat-progress-spinner\r\n      *ngIf=\"emailValidationLoading; else showButtonText\"\r\n      class=\"g-mat-progress-spinner-white mx-auto\"\r\n      mode=\"indeterminate\"\r\n      [diameter]=\"30\"\r\n    ></mat-progress-spinner>\r\n    <ng-template #showButtonText>Send Request</ng-template>\r\n  </button>\r\n\r\n  <!-- #endregion -->\r\n</div>\r\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { select, Store } from '@ngrx/store';\r\nimport { take, takeUntil } from 'rxjs/operators';\r\nimport { PROFILE_ROUTE } from '../../../../core/helpers/constants';\r\nimport * as fromNotifications from 'src/app/core/ngrx/entities/notifications/index';\r\nimport { Notification, NotificationCounts } from 'src/app/core/models/viewModels';\r\nimport { Dictionary } from '@ngrx/entity';\r\nimport { authActions } from '../../../../core/ngrx/authState';\r\nimport { brokersSelectors } from '../../../../core/ngrx/brokers';\r\nimport { Client, User } from '../../../../core/models/queryModels';\r\nimport * as actions from '../../../../core/helpers/index.actions';\r\nimport { authSelectors } from '../../../../core/ngrx/reducers';\r\nimport { Actions, ofType } from '@ngrx/effects';\r\n\r\n@Component({\r\n    selector: 'app-broker-main-nav',\r\n    templateUrl: './broker-main-nav.html',\r\n    styleUrls: ['./broker-main-nav.scss'],\r\n})\r\nexport class BrokerMainNavComponent implements OnInit {\r\n    notificationCounts: NotificationCounts = {\r\n        total: null,\r\n        profile: null,\r\n        negotiations: null,\r\n        completedNegotiations: null,\r\n        brokerRequest: null,\r\n    };\r\n    notifications: Dictionary<Notification[]> = {};\r\n\r\n    showNotificationDropDown: boolean = false;\r\n    animateNotificationDropDownOut: boolean = false;\r\n\r\n    user: User;\r\n\r\n    @Output() $handleNotificationNavigate: EventEmitter<number> = new EventEmitter();\r\n\r\n    private destroyed$ = new EventEmitter();\r\n\r\n    constructor(private router: Router, private store: Store, private actions$: Actions) {}\r\n\r\n    ngOnInit(): void {\r\n        this.getUserHelper();\r\n        this.store\r\n            .pipe(select(fromNotifications.notificationSelectors.getNotificationCounts), takeUntil(this.destroyed$))\r\n            .subscribe((notificationCounts: NotificationCounts) => {\r\n                this.notificationCounts = notificationCounts;\r\n            });\r\n\r\n        this.store\r\n            .pipe(\r\n                select(fromNotifications.notificationSelectors.getNotificationsForDropDown),\r\n                takeUntil(this.destroyed$),\r\n            )\r\n            .subscribe((notifications: Dictionary<Notification[]>) => {\r\n                this.notifications = notifications;\r\n            });\r\n\r\n        this.store.dispatch(fromNotifications.notificationActions.ReqUserNotifications());\r\n    }\r\n\r\n    handleRouteToProfile(): void {\r\n        this.actions$\r\n            .pipe(\r\n                ofType(authActions.GetUserFromAuthorizationSuccess, authActions.GetUserFromAuthorizationFail),\r\n                take(1),\r\n            )\r\n            .subscribe((action) => {\r\n                if (action.type === authActions.GetUserFromAuthorizationSuccess.type) {\r\n                    this.router.navigate([PROFILE_ROUTE], { queryParams: { tabIndex: 2 } });\r\n                }\r\n            });\r\n        this.store.dispatch(authActions.ReqGetUserFromAuthorization({ uid: this.user.uid }));\r\n    }\r\n\r\n    handleShowNotificationDropDown() {\r\n        this.showNotificationDropDown = true;\r\n    }\r\n\r\n    handleRemoveNotificationDropDown() {\r\n        this.animateNotificationDropDownOut = true;\r\n        setTimeout(() => {\r\n            this.showNotificationDropDown = false;\r\n            this.animateNotificationDropDownOut = false;\r\n        }, 300);\r\n    }\r\n\r\n    handleNotificationNavigate(tabIndex: number) {\r\n        this.handleRemoveNotificationDropDown();\r\n        this.$handleNotificationNavigate.emit(tabIndex);\r\n    }\r\n\r\n    getUserHelper(): void {\r\n        this.store\r\n            .select(authSelectors.getUser)\r\n            .pipe(takeUntil(this.destroyed$))\r\n            .subscribe((user: User) => {\r\n                this.user = user;\r\n            });\r\n    }\r\n}\r\n","<!-- #region Notification Dropdown -->\r\n<div\r\n    *ngIf=\"showNotificationDropDown\"\r\n    class=\"l-notification-dropdown-container\"\r\n    [class.l-hide-notification-dropdown-container]=\"animateNotificationDropDownOut\"\r\n    (click)=\"handleRemoveNotificationDropDown()\"\r\n>\r\n    <div class=\"g-fade-in-top\">\r\n        <app-notification-dropdown\r\n            [notifications]=\"notifications\"\r\n            [isAgent]=\"true\"\r\n            ($handleNotificationNavigate)=\"handleNotificationNavigate($event)\"\r\n        ></app-notification-dropdown>\r\n    </div>\r\n</div>\r\n\r\n<!-- #endregion -->\r\n\r\n<!-- #region Header -->\r\n\r\n<div class=\"l-header\">\r\n    <div class=\"l-notification-container\" role=\"button\" (click)=\"handleShowNotificationDropDown()\">\r\n        <img src=\"./assets/icons/bell-blue-icon.svg\" alt=\"Blue bell\" />\r\n        <div *ngIf=\"notificationCounts.total\" class=\"g-notification-dot-protrude\">{{ notificationCounts.total }}</div>\r\n    </div>\r\n    <div class=\"l-header-img-container\" role=\"button\">\r\n        <img class=\"l-header-img\" src=\"./assets/images/MX-logo-full.svg\" alt=\"MX Match Logo\" />\r\n    </div>\r\n\r\n    <img\r\n        class=\"l-profile-img\"\r\n        src=\"./assets/icons/user-blue-icon.svg\"\r\n        alt=\"User Icon\"\r\n        role=\"button\"\r\n        (click)=\"handleRouteToProfile()\"\r\n    />\r\n</div>\r\n\r\n<!-- #endregion -->\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-broker-toolbar',\r\n    templateUrl: './broker-toolbar.component.html',\r\n    styleUrls: ['./broker-toolbar.scss'],\r\n})\r\nexport class BrokerToolbarComponent implements OnInit {\r\n    @Output() $changeToggleEvent: EventEmitter<number> = new EventEmitter();\r\n    @Output() $searchInputEvent: EventEmitter<string> = new EventEmitter();\r\n    @Output() $addNewClientEvent: EventEmitter<void> = new EventEmitter();\r\n\r\n    @Input() get tabIndex(): number {\r\n        return this._tabIndex;\r\n    }\r\n    set tabIndex(value: number) {\r\n        this._tabIndex = value;\r\n    }\r\n\r\n    _tabIndex: number = 0;\r\n\r\n    searchInput: string;\r\n\r\n    constructor() {}\r\n\r\n    ngOnInit(): void {}\r\n\r\n    handleSearchInput() {\r\n        this.$searchInputEvent.emit(this.searchInput.toLowerCase());\r\n    }\r\n\r\n    handleChangeToggle(newToggle: number) {\r\n        this.tabIndex = newToggle;\r\n        this.$changeToggleEvent.emit(newToggle);\r\n    }\r\n\r\n    handleAddNewClient() {\r\n        this.$addNewClientEvent.emit();\r\n    }\r\n}\r\n","<div class=\"l-container\">\r\n    <!--  #region search input-->\r\n    <div class=\"l-search-container\">\r\n        <div class=\"g-text-input-container\">\r\n            <img class=\"g-input-text-icon\" src=\"./assets/icons/search-grey-icon.svg\" alt=\"search-icon\" />\r\n            <input\r\n                class=\"g-input-text\"\r\n                [(ngModel)]=\"searchInput\"\r\n                (ngModelChange)=\"handleSearchInput()\"\r\n                name=\"search\"\r\n                type=\"text\"\r\n                placeholder=\"Search client name\"\r\n            />\r\n        </div>\r\n    </div>\r\n    <!--  #endregion-->\r\n\r\n    <!-- #region Clients / Pending Toggle -->\r\n\r\n    <mat-tab-group\r\n        class=\"g-mat-tabs-dashboard\"\r\n        (selectedTabChange)=\"handleChangeToggle($event.index)\"\r\n        [(selectedIndex)]=\"tabIndex\"\r\n        mat-align-tabs=\"center\"\r\n    >\r\n        <mat-tab label=\"Clients\"></mat-tab>\r\n        <mat-tab label=\"Pending\"></mat-tab>\r\n    </mat-tab-group>\r\n\r\n    <!-- #endregion -->\r\n\r\n    <!-- #region Buttons -->\r\n\r\n    <div class=\"l-content\">\r\n        <button mat-flat-button class=\"g-primary-button my-3\" (click)=\"handleAddNewClient()\">Add New Client</button>\r\n    </div>\r\n\r\n    <!-- #endregion -->\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { MatLegacyDialogRef as MatDialogRef } from '@angular/material/legacy-dialog';\r\n\r\n@Component({\r\n    selector: 'app-request-sent-modal',\r\n    templateUrl: './request-sent-modal.component.html',\r\n    styleUrls: ['./request-sent-modal.component.scss'],\r\n})\r\nexport class RequestSentModalComponent {\r\n    constructor(private dialogRef: MatDialogRef<RequestSentModalComponent>) {}\r\n\r\n    handleCloseModal(): void {\r\n        this.dialogRef.close();\r\n    }\r\n}\r\n","<div class=\"d-flex flex-column\">\r\n  <!-- #region Header -->\r\n\r\n  <div class=\"d-flex flex-column\">\r\n    <div class=\"d-flex flex-row justify-content-end w-100\">\r\n      <img class=\"l-close-icon\" src=\"./assets/icons/close-icon-dark.svg\" alt=\"close\" (click)=\"handleCloseModal()\" />\r\n    </div>\r\n    <h1 class=\"g-text-h1-dark mb-3 w-100\">\r\n      <b>Request Sent</b>\r\n    </h1>\r\n  </div>\r\n\r\n  <!-- #endregion -->\r\n\r\n  <!-- #region Modal Content -->\r\n\r\n  <div class=\"g-text-p-dark\">\r\n    <p>\r\n      Your request has been successfully sent.\r\n    </p>\r\n  </div>\r\n  <!-- #endregion -->\r\n\r\n  <!-- #region Buttons -->\r\n\r\n  <button\r\n    class=\"g-primary-button my-2\"\r\n    (click)=\"handleCloseModal()\">\r\n    Continue\r\n  </button>\r\n\r\n  <!-- #endregion -->\r\n</div>\r\n\r\n"],"names":["RouterModule","BrokerDashboardComponent","routes","path","component","BrokerDashboardRoutingModule","_","_2","_3","forChild","imports","i1","EventEmitter","MatLegacyDialog","MatDialog","AddNewClientModalComponent","Actions","ofType","Store","authSelectors","take","takeUntil","brokersActions","brokersSelectors","snackBarConfigs","MatSnackBar","Router","LOTS_ROUTE","ConfirmationModalComponent","authActions","lotActions","notificationActions","scoutActions","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r7","clientNotificationsCount","client_r6","uid","ɵɵelement","ɵɵlistener","BrokerDashboardComponent_div_4_div_1_div_1_Template_button_click_4_listener","restoredCtx","ɵɵrestoreView","_r10","$implicit","ctx_r9","ɵɵnextContext","ɵɵresetView","handleViewLots","ɵɵtemplate","BrokerDashboardComponent_div_4_div_1_div_1_div_6_Template","BrokerDashboardComponent_div_4_div_1_div_1_Template_button_click_7_listener","ctx_r11","handleOpenDeleteClientConfirmation","ɵɵproperty","ctx_r5","BrokerDashboardComponent_div_4_div_1_div_1_Template","ctx_r2","filteredActiveClients","BrokerDashboardComponent_div_4_div_1_Template","BrokerDashboardComponent_div_4_ng_template_2_Template","ɵɵtemplateRefExtractor","ctx_r0","length","_r3","BrokerDashboardComponent_div_5_div_1_div_1_button_3_Template_button_click_0_listener","_r22","client_r16","ctx_r20","handleViewRequest","BrokerDashboardComponent_div_5_div_1_div_1_ng_template_4_Template_button_click_0_listener","_r25","ctx_r23","handleCancelRequest","BrokerDashboardComponent_div_5_div_1_div_1_button_3_Template","BrokerDashboardComponent_div_5_div_1_div_1_ng_template_4_Template","ctx_r15","pendingRequestsByBroker","includes","_r18","BrokerDashboardComponent_div_5_div_1_div_1_Template","ctx_r12","filteredPendingClients","BrokerDashboardComponent_div_5_div_1_Template","BrokerDashboardComponent_div_5_ng_template_2_Template","ctx_r1","_r13","constructor","dialog","actions$","store","snackbar","router","tabIndex","destroyed$","ngOnInit","fetchBrokerInfoHelper","selectActiveClientsList","selectPendingClientsList","selectPendingRequests","selectAcceptedRequests","clearClientObject","clearBrokerRequest","clearClientEntities","clearAllLots","clearAllScouts","selectClientsNotificationsCount","clearNotificationsHelper","ngOnDestroy","emit","dispatch","ClearClientObject_Broker","ClearBrokerRequest","ClearClientEntities","ClearAllLots","ClearAllScouts","select","getPendingClients","pipe","subscribe","pendingClients","getPendingRequests","pendingRequests","map","request","clientUid","filter","sentByBroker","fetchPendingClientRequests","ResetPendingClientsState","getAcceptedRequests","acceptedRequests","fetchActiveClientsNotifications","fetchActiveClientsList","ResetActiveClientsState","getActiveClients","activeClients","getClientNotificationsCount","chuckSize","i","smallerAcceptedRequestsIdsArray","slice","ReqClientsNotifications","clientsUids","getUser","broker","fetchPendingRequests","fetchAcceptedRequests","ClearNotifications","ReqGetActiveClients_Broker","clientIds","smallerPendingRequestsIdsArray","ReqGetPendingClients_Broker","ReqPendingBrokerRequests_Broker","brokerUid","ReqAcceptedBrokerRequests_Broker","acceptRequest","ReqAcceptRequest_SharedSuccess","ReqAcceptRequest_SharedFail","action","type","open","successConfig","ReqSendPairingNotification_Shared","fromBroker","newRequest","errorConfig","ReqAcceptRequest_Shared","declineRequest","ReqDeleteRequest_SharedSuccess","ReqDeleteRequest_SharedFail","ReqDeleteRequest_Shared","removeClient","handleClientSearch","searchPhrase","toLowerCase","filterClientsHelper","handleGetToggleOption","index","handleAddNewClient","panelClass","client","clientObj","pop","PopulateClientObject","ReqGetBrokerRequest","navigate","clientsList","firstname","lastname","email","dialogRef","data","header","subHeader","clientData","confirmButton","declineButton","afterClosed","result","ɵɵdirectiveInject","i2","i3","i4","i5","selectors","decls","vars","consts","template","BrokerDashboardComponent_Template","rf","ctx","BrokerDashboardComponent_Template_app_broker_main_nav__handleNotificationNavigate_2_listener","$event","BrokerDashboardComponent_Template_app_broker_toolbar__searchInputEvent_3_listener","BrokerDashboardComponent_Template_app_broker_toolbar__changeToggleEvent_3_listener","BrokerDashboardComponent_Template_app_broker_toolbar__addNewClientEvent_3_listener","BrokerDashboardComponent_div_4_Template","BrokerDashboardComponent_div_5_Template","CommonModule","HomeModule","BrokerMainNavComponent","BrokerToolbarComponent","AngularMaterialModule","FormsModule","RequestSentModalComponent","BrokerInfoCardModule","MatLegacyDialogModule","MatDialogModule","BrokerDashboardModule","declarations","MatLegacyDialogRef","MatDialogRef","selectClient","selectBroker","getCurrentClient","pendingRequestsByClient","handleCloseModal","close","handleValidateClientEmail","emailValidationLoading","ReqCheckIfClientExists_BrokerSuccess","ReqCheckIfClientExists_BrokerFail","clientEmail","checkIfClientHasBroker","ReqCheckIfClientExists_Broker","ReqCheckIfClientHasBrokerSuccess","ReqCheckIfClientHasBrokerFail","checkPendingRequest","ReqCheckIfClientHasBroker","clientId","sendClientRequest","ReqCreateRequest_SharedSuccess","ReqCreateRequest_SharedFail","ReqCreateRequest_Shared","AddNewClientModalComponent_Template","AddNewClientModalComponent_Template_img_click_3_listener","AddNewClientModalComponent_Template_input_ngModelChange_11_listener","AddNewClientModalComponent_Template_button_click_13_listener","AddNewClientModalComponent_mat_progress_spinner_14_Template","AddNewClientModalComponent_ng_template_15_Template","ɵɵclassProp","_r0","errors","pattern","pristine","_r2","PROFILE_ROUTE","fromNotifications","User","BrokerMainNavComponent_div_0_Template_div_click_0_listener","handleRemoveNotificationDropDown","BrokerMainNavComponent_div_0_Template_app_notification_dropdown__handleNotificationNavigate_2_listener","ctx_r4","handleNotificationNavigate","animateNotificationDropDownOut","notifications","ɵɵtextInterpolate","notificationCounts","total","profile","negotiations","completedNegotiations","brokerRequest","showNotificationDropDown","$handleNotificationNavigate","getUserHelper","notificationSelectors","getNotificationCounts","getNotificationsForDropDown","ReqUserNotifications","handleRouteToProfile","GetUserFromAuthorizationSuccess","GetUserFromAuthorizationFail","queryParams","ReqGetUserFromAuthorization","user","handleShowNotificationDropDown","setTimeout","outputs","BrokerMainNavComponent_Template","BrokerMainNavComponent_div_0_Template","BrokerMainNavComponent_Template_div_click_2_listener","BrokerMainNavComponent_div_4_Template","BrokerMainNavComponent_Template_img_click_7_listener","_tabIndex","value","$changeToggleEvent","$searchInputEvent","$addNewClientEvent","handleSearchInput","searchInput","handleChangeToggle","newToggle","inputs","BrokerToolbarComponent_Template","BrokerToolbarComponent_Template_input_ngModelChange_4_listener","BrokerToolbarComponent_Template_mat_tab_group_selectedTabChange_5_listener","BrokerToolbarComponent_Template_mat_tab_group_selectedIndexChange_5_listener","BrokerToolbarComponent_Template_button_click_9_listener","RequestSentModalComponent_Template","RequestSentModalComponent_Template_img_click_3_listener","RequestSentModalComponent_Template_button_click_10_listener"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}