{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/core/helpers/brokerHelperFunctions.ts","./src/app/core/helpers/constants.ts","./src/app/core/helpers/helperFunctions.ts","./src/app/core/helpers/index.actions.ts","./src/app/core/helpers/snackbar.ts","./src/app/core/models/queryModels.ts","./src/app/core/ngrx/app-state/app-state.actions.ts","./src/app/core/ngrx/app-state/app-state.effects.ts","./src/app/core/ngrx/app-state/app-state.reducer.ts","./src/app/core/ngrx/app-state/app-state.selectors.ts","./src/app/core/ngrx/app-state/index.ts","./src/app/core/ngrx/authState/auth.actions.ts","./src/app/core/ngrx/authState/auth.effects.ts","./src/app/core/ngrx/authState/auth.reducer.ts","./src/app/core/ngrx/authState/auth.selectors.ts","./src/app/core/ngrx/authState/index.ts","./src/app/core/ngrx/brokers/brokers-effects.service.ts","./src/app/core/ngrx/brokers/brokers.actions.ts","./src/app/core/ngrx/brokers/brokers.reducer.ts","./src/app/core/ngrx/brokers/brokers.selectors.ts","./src/app/core/ngrx/brokers/index.ts","./src/app/core/ngrx/crop/crop.actions.ts","./src/app/core/ngrx/crop/crop.effects.ts","./src/app/core/ngrx/crop/crop.reducer.ts","./src/app/core/ngrx/crop/crop.selectors.ts","./src/app/core/ngrx/crop/index.ts","./src/app/core/ngrx/entities/delivery-points/delivery-points.actions.ts","./src/app/core/ngrx/entities/delivery-points/delivery-points.effects.ts","./src/app/core/ngrx/entities/delivery-points/delivery-points.reducer.ts","./src/app/core/ngrx/entities/delivery-points/delivery-points.selectors.ts","./src/app/core/ngrx/entities/delivery-points/index.ts","./src/app/core/ngrx/entities/lot/index.ts","./src/app/core/ngrx/entities/lot/lot.actions.ts","./src/app/core/ngrx/entities/lot/lot.reducer.ts","./src/app/core/ngrx/entities/lot/lot.selectors.ts","./src/app/core/ngrx/entities/match/index.ts","./src/app/core/ngrx/entities/match/match.actions.ts","./src/app/core/ngrx/entities/match/match.reducer.ts","./src/app/core/ngrx/entities/match/match.selectors.ts","./src/app/core/ngrx/entities/negotiations/index.ts","./src/app/core/ngrx/entities/negotiations/negotiation.actions.ts","./src/app/core/ngrx/entities/negotiations/negotiation.reducer.ts","./src/app/core/ngrx/entities/negotiations/negotiation.selectors.ts","./src/app/core/ngrx/entities/notifications/index.ts","./src/app/core/ngrx/entities/notifications/notifications.actions.ts","./src/app/core/ngrx/entities/notifications/notifications.effects.ts","./src/app/core/ngrx/entities/notifications/notifications.reducer.ts","./src/app/core/ngrx/entities/notifications/notifications.selectors.ts","./src/app/core/ngrx/entities/scout/index.ts","./src/app/core/ngrx/entities/scout/scout.actions.ts","./src/app/core/ngrx/entities/scout/scout.effects.ts","./src/app/core/ngrx/entities/scout/scout.reducer.ts","./src/app/core/ngrx/entities/scout/scout.selectors.ts","./src/app/core/ngrx/helperFunctions.ts","./src/app/core/ngrx/ngrx.module.ts","./src/app/core/ngrx/paygate/index.ts","./src/app/core/ngrx/paygate/paygate.actions.ts","./src/app/core/ngrx/reducers/index.ts","./src/app/core/services/api/api.service.ts","./src/app/core/services/auth/auth.service.ts","./src/app/core/services/brokers/brokers.service.ts","./src/app/core/services/crop/crop.service.ts","./src/app/core/services/delivery-points/delivery-points.service.ts","./src/app/core/services/notifications/notifications.service.ts","./src/app/core/services/scout/scout.service.ts","./src/app/core/services/subscription/subscription.service.ts","./src/app/features/dashboard/dashboard.selectors.ts","./src/app/features/landing/landing.component.ts","./src/app/features/landing/landing.component.html","./src/app/features/notification/notification.component.ts","./src/app/features/notification/notification.component.html","./src/app/features/shared/components/additional-info-modal/additional-info-modal.component.ts","./src/app/features/shared/components/additional-info-modal/additional-info-modal.component.html","./src/app/features/shared/components/category-info-modal/category-info-modal/category-info-modal.component.ts","./src/app/features/shared/components/category-info-modal/category-info-modal/category-info-modal.component.html","./src/app/features/shared/components/document-viewer/document-viewer.component.ts","./src/app/features/shared/components/document-viewer/document-viewer.component.html","./src/app/features/shared/components/grain-sa-modal/grain-sa-modal.component.ts","./src/app/features/shared/components/grain-sa-modal/grain-sa-modal.component.html","./src/app/features/shared/components/loading-spinner/loading-spinner.component.ts","./src/app/features/shared/components/loading-spinner/loading-spinner.component.html","./src/app/features/shared/components/payment-check-modal/payment-check-modal.component.ts","./src/app/features/shared/components/payment-check-modal/payment-check-modal.component.html","./src/app/features/shared/components/refresh-modal/refresh-modal.component.ts","./src/app/features/shared/components/refresh-modal/refresh-modal.component.html","./src/app/features/shared/components/success-page/success-page.component.ts","./src/app/features/shared/components/success-page/success-page.component.html","./src/app/features/shared/firebase.module.ts.ts","./src/app/features/subscribe/subscribe.component.ts","./src/app/features/subscribe/subscribe.component.html","./src/app/features/transactional-risks/transactional-risks.component.ts","./src/app/features/transactional-risks/transactional-risks.component.html","./src/environments/environment.prod.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AngularFireAuthGuard, redirectLoggedInTo, redirectUnauthorizedTo } from '@angular/fire/compat/auth-guard';\r\n\r\nimport { LandingComponent } from './features/landing/landing.component';\r\nimport { TransactionalRisksComponent } from './features/transactional-risks/transactional-risks.component';\r\nimport { SubscribeComponent } from './features/subscribe/subscribe.component';\r\nimport { SuccessPageComponent } from './features/shared/components/success-page/success-page.component';\r\n\r\nimport { HOME_ROUTE, SIGNIN_ROUTE } from './core/helpers/constants';\r\nimport { DocumentViewerComponent } from './features/shared/components/document-viewer/document-viewer.component';\r\n\r\nconst redirectLoggedInToHome = () => redirectLoggedInTo([HOME_ROUTE]);\r\nconst redirectUnauthorizedToLogin = () => redirectUnauthorizedTo([SIGNIN_ROUTE]);\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        redirectTo: 'home',\r\n        pathMatch: 'full',\r\n    },\r\n    {\r\n        path: 'landing',\r\n        component: LandingComponent,\r\n    },\r\n    {\r\n        path: 'onboarding',\r\n        loadChildren: () => import('./features/onboarding/onboarding.module').then((m) => m.OnboardingModule),\r\n    },\r\n    {\r\n        path: 'scouts',\r\n        loadChildren: () => import('./features/scouts/scouts.module').then((m) => m.ScoutsModule),\r\n    },\r\n    {\r\n        path: 'authentication',\r\n        canActivate: [AngularFireAuthGuard],\r\n        data: { authGuardPipe: redirectLoggedInToHome },\r\n        loadChildren: () =>\r\n            import('./features/authentication/authentication.module').then((m) => m.AuthenticationModule),\r\n    },\r\n    {\r\n        path: 'transactional-risk',\r\n        component: TransactionalRisksComponent,\r\n    },\r\n    {\r\n        path: 'subscribe',\r\n        component: SubscribeComponent,\r\n    },\r\n    {\r\n        path: 'document/:name',\r\n        component: DocumentViewerComponent,\r\n    },\r\n    {\r\n        path: 'home',\r\n        canActivate: [AngularFireAuthGuard],\r\n        data: { authGuardPipe: redirectUnauthorizedToLogin },\r\n        loadChildren: () => import('./features/home/home.module').then((m) => m.HomeModule),\r\n    },\r\n    {\r\n        path: 'support',\r\n        loadChildren: () => import('./features/support/support.module').then((m) => m.SupportModule),\r\n    },\r\n    {\r\n        path: 'dashboard',\r\n        canActivate: [AngularFireAuthGuard],\r\n        data: { authGuardPipe: redirectUnauthorizedToLogin },\r\n        loadChildren: () => import('./features/dashboard/dashboard.module').then((m) => m.DashboardModule),\r\n    },\r\n    {\r\n        path: 'clearing',\r\n        canActivate: [AngularFireAuthGuard],\r\n        data: { authGuardPipe: redirectUnauthorizedToLogin },\r\n        loadChildren: () => import('./features/clearing/clearing.module').then((m) => m.ClearingModule),\r\n    },\r\n    {\r\n        path: 'lots',\r\n        canActivate: [AngularFireAuthGuard],\r\n        data: { authGuardPipe: redirectUnauthorizedToLogin },\r\n        loadChildren: () => import('./features/lots/lots.module').then((m) => m.LotsModule),\r\n    },\r\n    {\r\n        path: 'success',\r\n        canActivate: [AngularFireAuthGuard],\r\n        data: { authGuardPipe: redirectUnauthorizedToLogin },\r\n        component: SuccessPageComponent,\r\n    },\r\n    {\r\n        path: 'success/:id',\r\n        canActivate: [AngularFireAuthGuard],\r\n        data: { authGuardPipe: redirectUnauthorizedToLogin },\r\n        component: SuccessPageComponent,\r\n    },\r\n    {\r\n        path: 'negotiations',\r\n        canActivate: [AngularFireAuthGuard],\r\n        data: { authGuardPipe: redirectUnauthorizedToLogin },\r\n        loadChildren: () => import('./features/negotiations/negotiations.module').then((m) => m.NegotiationsModule),\r\n    },\r\n    {\r\n        path: 'broker-dashboard',\r\n        canActivate: [AngularFireAuthGuard],\r\n        data: { authGuardPipe: redirectUnauthorizedToLogin },\r\n        loadChildren: () =>\r\n            import('./features/broker-dashboard/broker-dashboard.module').then((m) => m.BrokerDashboardModule),\r\n    },\r\n    {\r\n        path: '**',\r\n        redirectTo: 'home',\r\n    },\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(routes, {})],\r\n    exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatLegacyDialog as MatDialog } from '@angular/material/legacy-dialog';\r\nimport { SwUpdate , VersionReadyEvent} from '@angular/service-worker';\r\nimport { Store, select } from '@ngrx/store';\r\nimport { take, filter } from 'rxjs/operators';\r\nimport * as fromRoot from './core/ngrx/reducers/index';\r\nimport { RefreshModalComponent } from './features/shared/components/refresh-modal/refresh-modal.component';\r\nimport { Purchases } from '@awesome-cordova-plugins/purchases/ngx';\r\nimport { Capacitor } from '@capacitor/core';\r\n\r\n@Component({\r\n    selector: 'app-root',\r\n    templateUrl: './app.component.html',\r\n    styleUrls: ['./app.component.scss'],\r\n})\r\nexport class AppComponent implements OnInit {\r\n    title = 'skudu_match';\r\n    appState$ = this.store.pipe(select(fromRoot.getAppState));\r\n    isWeb: boolean = false;\r\n\r\n    constructor(\r\n        private store: Store<fromRoot.State>,\r\n        private dialog: MatDialog,\r\n        private serviceWorkerUpdate: SwUpdate,\r\n        private purchases: Purchases,\r\n    ) {}\r\n\r\n    ngOnInit(): void {\r\n        if (this.serviceWorkerUpdate.isEnabled) {\r\n            this.serviceWorkerUpdate.versionUpdates.pipe(filter((evt):evt is VersionReadyEvent=> evt.type === 'VERSION_READY')).subscribe(() => {\r\n                const dialogRef = this.dialog.open(RefreshModalComponent, {\r\n                    panelClass: 'g-modal-fullwidth-transparent-container',\r\n                });\r\n                dialogRef\r\n                    .afterClosed()\r\n                    .pipe(take(1))\r\n                    .subscribe(() => {\r\n                        window.location.reload();\r\n                    });\r\n            });\r\n        }\r\n        this.isWeb = Capacitor.getPlatform() == 'web';\r\n        this.onDeviceReady();\r\n    }\r\n    onDeviceReady() {\r\n        if (!this.isWeb) {\r\n            this.purchases.setDebugLogsEnabled(true);\r\n            if (Capacitor.getPlatform() == 'ios') {\r\n                this.purchases.setFirebaseAppInstanceID('appl_SNiWZGuiodCXToFPLjYJkggISVd')\r\n                //this.purchases.setup('appl_SNiWZGuiodCXToFPLjYJkggISVd');\r\n            } else if (Capacitor.getPlatform() == 'android') {\r\n                this.purchases.setFirebaseAppInstanceID('goog_hiDXDTNYQQJNeqcKMMoMcpkJOUy')\r\n               \r\n              //  this.purchases.setup('goog_hiDXDTNYQQJNeqcKMMoMcpkJOUy');\r\n            }\r\n        }\r\n    }\r\n}\r\n","<div class=\"w-100 h-100 bg-white\" *ngIf=\"appState$ | async as appData\">\r\n    <app-loading-spinner *ngIf=\"appData.isLoading || appData.persist\"></app-loading-spinner>\r\n\r\n    <!-- #region Notification Dropdown -->\r\n\r\n    <app-notification></app-notification>\r\n\r\n    <!-- #endregion -->\r\n\r\n    <div class=\"w-100 h-100\" *ngIf=\"!appData.isLoading && !appData.persist\">\r\n        <router-outlet></router-outlet>\r\n    </div>\r\n</div>\r\n","// #region Module Imports\r\n\r\nimport { CommonModule } from '@angular/common';\r\nimport { NGRXModule } from './core/ngrx/ngrx.module';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { NgModule } from '@angular/core';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { FirebaseModule } from './features/shared/firebase.module.ts';\r\nimport { LoadingSpinnerModule } from './features/shared/components/loading-spinner/loading-spinner.component';\r\nimport { HttpClientJsonpModule, HttpClientModule } from '@angular/common/http';\r\n//import { GooglePlaceModule } from 'ngx-google-places-autocomplete';\r\nimport { MatLegacyDialogModule as MatDialogModule } from '@angular/material/legacy-dialog';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatLegacyButtonModule as MatButtonModule } from '@angular/material/legacy-button';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatLegacySelectModule as MatSelectModule } from '@angular/material/legacy-select';\r\nimport { MatLegacyProgressSpinnerModule as MatProgressSpinnerModule } from '@angular/material/legacy-progress-spinner';\r\nimport { ServiceWorkerModule } from '@angular/service-worker';\r\nimport { LottieModule } from 'ngx-lottie';\r\n\r\n// #endregion\r\n\r\n// #region Component Imports\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { AdditionalInfoModalComponent } from './features/shared/components/additional-info-modal/additional-info-modal.component';\r\nimport { RefreshModalComponent } from './features/shared/components/refresh-modal/refresh-modal.component';\r\nimport { SuccessPageComponent } from './features/shared/components/success-page/success-page.component';\r\nimport { LandingComponent } from './features/landing/landing.component';\r\nimport { TransactionalRisksComponent } from './features/transactional-risks/transactional-risks.component';\r\nimport { SubscribeComponent } from './features/subscribe/subscribe.component';\r\nimport { NotificationComponent } from './features/notification/notification.component';\r\nimport { InAppPurchase2 } from '@awesome-cordova-plugins/in-app-purchase-2/ngx';\r\nimport { CategoryInfoModalComponent } from './features/shared/components/category-info-modal/category-info-modal/category-info-modal.component';\r\n\r\n// #endregion\r\n\r\n// #region Other Imports\r\n\r\nimport { AngularFireAuthGuard } from '@angular/fire/compat/auth-guard';\r\nimport { environment } from 'src/environments/environment.prod';\r\nimport { PaymentCheckModalComponent } from './features/shared/components/payment-check-modal/payment-check-modal.component';\r\nimport { GrainSaModalComponent } from './features/shared/components/grain-sa-modal/grain-sa-modal.component';\r\nimport { DocumentViewerComponent } from './features/shared/components/document-viewer/document-viewer.component';\r\nimport { NgxExtendedPdfViewerModule } from 'ngx-extended-pdf-viewer';\r\n\r\n// #endregion\r\nimport { Loader } from '@googlemaps/js-api-loader';\r\nimport { NgxGpAutocompleteModule } from \"@angular-magic/ngx-gp-autocomplete\"\r\n// #region Lottie Player\r\n\r\nexport function playerFactory() {\r\n    return import('lottie-web');\r\n}\r\n\r\n// #endregion\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent,\r\n        LandingComponent,\r\n        TransactionalRisksComponent,\r\n        SubscribeComponent,\r\n        AdditionalInfoModalComponent,\r\n        RefreshModalComponent,\r\n        SuccessPageComponent,\r\n        NotificationComponent,\r\n        CategoryInfoModalComponent,\r\n        PaymentCheckModalComponent,\r\n        GrainSaModalComponent,\r\n        DocumentViewerComponent,\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        BrowserAnimationsModule,\r\n        AppRoutingModule,\r\n        FirebaseModule,\r\n        NGRXModule,\r\n        LoadingSpinnerModule,\r\n        HttpClientModule,\r\n        HttpClientJsonpModule,\r\n        //GooglePlaceModule,\r\n        NgxGpAutocompleteModule,\r\n        FormsModule,\r\n        MatDialogModule,\r\n        MatButtonModule,\r\n        MatRippleModule,\r\n        MatSelectModule,\r\n        MatProgressSpinnerModule,\r\n        ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production }),\r\n        LottieModule.forRoot({ player: playerFactory }),\r\n        NgxExtendedPdfViewerModule,\r\n    ],\r\n    exports: [//GooglePlaceModule\r\n    NgxGpAutocompleteModule\r\n],\r\n    providers: [AngularFireAuthGuard,  {\r\n        provide: Loader,\r\n        useValue: new Loader({\r\n          apiKey: 'AIzaSyAFaylOBsuhYPYw9YqWmhN370xTvc6DXYU',\r\n          libraries: ['places']\r\n        })\r\n      },\r\n      InAppPurchase2],\r\n    bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","import { BrokerNegotiation, Client, BrokerRequest } from '../models/queryModels';\r\nimport { NegotiationCard } from '../models/viewModels';\r\nimport { cloneDeep } from 'lodash';\r\n\r\n/**\r\n * Broker Feature Helper Functions\r\n * */\r\n\r\n// #region Negotiation Documents\r\nexport function filterOutNegotiationDocument(\r\n    lotMatchId: number,\r\n    brokerNegotiationDocuments: BrokerNegotiation[],\r\n): BrokerNegotiation | null {\r\n    if (!brokerNegotiationDocuments.length) {\r\n        return null;\r\n    }\r\n\r\n    let brokerDocument: BrokerNegotiation[];\r\n\r\n    brokerDocument = brokerNegotiationDocuments.filter((document) => document.lotMatchId === lotMatchId);\r\n    return brokerDocument[0];\r\n}\r\n\r\nexport function getAllLotMatchIdsFromNegotiationCards(negotiationCards: NegotiationCard[]): number[] {\r\n    const lotMatchIds: number[] = [];\r\n    if (!negotiationCards.length) {\r\n        return lotMatchIds;\r\n    }\r\n\r\n    negotiationCards.map((card) => {\r\n        card.activeNegotiations.map((activeNegotiation) => {\r\n            lotMatchIds.push(activeNegotiation.lotMatchId);\r\n        });\r\n    });\r\n\r\n    return lotMatchIds;\r\n}\r\n\r\nexport function newClientsListWithoutDuplicates(stateClients: Client[], actionClients: Client[]): Client[] {\r\n    if (!stateClients.length && !actionClients.length) {\r\n        return [];\r\n    } else if (!actionClients.length) {\r\n        return stateClients;\r\n    }\r\n\r\n    const newStateClients = cloneDeep(stateClients);\r\n    const newActionClients = cloneDeep(actionClients);\r\n\r\n    for (let i = actionClients.length - 1; i >= 0; i--) {\r\n        const actionClient = actionClients[i];\r\n        const existingIndex = newStateClients.findIndex((client) => client.uid === actionClient.uid);\r\n\r\n        if (existingIndex !== -1) {\r\n            newStateClients[existingIndex] = actionClient;\r\n            newActionClients.splice(i, 1);\r\n        }\r\n    }\r\n\r\n    return newStateClients.concat(newActionClients);\r\n}\r\n\r\nexport function checkIfClientHasBroker(clientId: string, brokerRequests: BrokerRequest[]): boolean {\r\n    if (!brokerRequests.length) {\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        brokerRequests.filter(\r\n            (brokerRequest: BrokerRequest) => brokerRequest.clientUid === clientId && brokerRequest.acceptedRequest,\r\n        ).length > 0\r\n    );\r\n}\r\n\r\n// #endregion\r\n","import { IAPProduct } from '@awesome-cordova-plugins/in-app-purchase-2/ngx';\r\nimport {\r\n    CropCategoryImageData,\r\n    DeliveryPointPinIcon,\r\n    StepInfo,\r\n    SupportCard,\r\n    TutorialTableItem,\r\n    VerificationSubscription,\r\n    VerificationType,\r\n} from './../models/viewModels';\r\nimport { Verification } from './../models/queryModels';\r\nimport { bbbeeRating, DisplayChoice, HomeCard, iconDetailData, StepperData } from '../models/viewModels';\r\nimport { MatchItems } from '../models/queryModels';\r\nimport { Dictionary } from '@ngrx/entity';\r\n\r\n// #region Version\r\n\r\nexport const version: string = 'V9.0.0';\r\n\r\n// #endregion\r\n\r\n//#region Numeric Constants\r\nexport const HOURS_IN_A_DAY = 24;\r\nexport const MINUTES_IN_AN_HOUR = 60;\r\nexport const SECONDS_IN_A_MINUTE = 60;\r\nexport const MILLISECONDS_IN_A_SECOND = 1000;\r\n//#endregion\r\n\r\n//#region IAP Verification Ids\r\nexport const FARMER_VERIFICATION_ID = 1;\r\nexport const FARMER_ON_FARM_STORAGE_VERIFICATION_ID = 2;\r\nexport const PROCESSOR_OF_BYPRODUCTS_VERIFICATION_ID = 3;\r\nexport const BUYER_VERIFICATION_ID = 4;\r\nexport const TRANSPORTER_VERIFICATION_ID = 5;\r\nexport const UNVERIFIED_VERIFICATION_ID = 6;\r\nexport const GRAINSA_VERIFICATION_ID = 7;\r\nexport const MATCH_EXCHANGE_VERIFICATION_ID = 8;\r\n//#endregion\r\n\r\n//#region Verification groups\r\nexport const baseVerifications = [\r\n    FARMER_VERIFICATION_ID,\r\n    FARMER_ON_FARM_STORAGE_VERIFICATION_ID,\r\n    PROCESSOR_OF_BYPRODUCTS_VERIFICATION_ID,\r\n    BUYER_VERIFICATION_ID,\r\n    TRANSPORTER_VERIFICATION_ID,\r\n];\r\nexport const promotionVerifications = [GRAINSA_VERIFICATION_ID];\r\n//#endregion\r\n\r\n// #region Routes\r\n\r\nexport const ONBOARDING_ROUTE: string = '/onboarding';\r\nexport const DOCUMENT_VIEWER_ROUTE: string = '/document';\r\nexport const TRANSACTIONAL_RISK_ROUTE: string = '/transactional-risk';\r\nexport const SUBSCRIBE_ROUTE: string = '/subscribe';\r\nexport const SIGNUP_ROUTE: string = '/authentication/sign-up';\r\nexport const SIGNIN_ROUTE: string = '/authentication/sign-in';\r\nexport const FORGOT_PASSWORD_ROUTE: string = '/authentication/forgot-password';\r\nexport const LANDING_ROUTE: string = '/landing';\r\nexport const HOME_ROUTE: string = '/home';\r\nexport const BROKER_DASHBOARD_ROUTE: string = '/broker-dashboard';\r\nexport const SUPPORT_ROUTE: string = '/support';\r\nexport const CLEARING: string = '/clearing';\r\n\r\nexport const SCOUTS_ROUTE: string = '/dashboard/scouts';\r\nexport const LOTS_ROUTE: string = '/dashboard/lots';\r\nexport const NEGOTIATING_ROOM_ROUTE: string = '/dashboard/negotiations';\r\nexport const NEGOTIATIONS_COMPLETED_ROUTE: string = '/dashboard/completed';\r\nexport const BROWSE_THE_MARKET_ROUTE: string = '/dashboard/browse';\r\nexport const BROKERS_ROUTE: string = '/dashboard/brokers';\r\nexport const REQUESTS_ROUTE: string = '/dashboard/requested';\r\nexport const PROFILE_ROUTE: string = '/dashboard/profile';\r\n\r\nexport const LOTS_CROP_CATEGORIES_ROUTE: string = '/lots/crop-categories';\r\nexport const LOTS_CREATE_ROUTE: string = '/lots/create';\r\nexport const LOTS_EDIT_ROUTE: string = '/lots/edit';\r\nexport const LOTS_MATCH_ROUTE: string = '/lots/lot-match';\r\n\r\nexport const SCOUT_CREATE_ROUTE: string = '/scouts/create';\r\nexport const SCOUT_EDIT_ROUTE: string = '/scouts/edit';\r\nexport const SCOUT_FINE_TUNE_ROUTE: string = '/scouts/fine-tune';\r\nexport const SCOUT_SEARCH_RESULT_ROUTE: string = '/scouts/search-results';\r\n\r\nexport const NEGOTIATION_EDIT_ROUTE: string = '/negotiations/edit';\r\nexport const NEGOTIATION_VIEW_ROUTE: string = '/negotiations/view';\r\n\r\nexport const DELIVERY_POINT_ROUTE: string = '/delivery-point';\r\n\r\nexport const SUCCESS_ROUTE: string = '/success';\r\n\r\nexport const MATCHBOX_ROUTE: string = '/onboarding/matchbox';\r\n\r\nexport const FAQ_ROUTE: string = '/support/FAQs';\r\nexport const CONTACT_PAGE_ROUTE: string = '/support/contact-us';\r\nexport const KYC_PARTY_ROUTE: string = '/support/kyc-party';\r\nexport const DETAILED_TUTORIAL_ROUTE: string = '/support/detailed-tutorial';\r\nexport const VERIFICATION_ROUTE: string = '/support/verification';\r\n\r\n// #endregion\r\n\r\n// #region Stepper\r\n\r\nexport const onboardingContent: StepperData[] = [\r\n    {\r\n        title: 'Testing the Water',\r\n        info: \"Tell the Market what you're planning to buy or sell. Scout the Market, with no obligations.\",\r\n        imagePath: 'assets/images/onboard-step1-MX.svg',\r\n    },\r\n    {\r\n        title: 'Step Up to the Plate',\r\n        info: 'By creating a Match Lot you are communicating to the Market that you are a willing seller or buyer of a specific portion of your crop.',\r\n        imagePath: 'assets/images/onboard-step2-MX.svg',\r\n    },\r\n    {\r\n        title: 'Matching',\r\n        info: 'Once you have created a lot, Match Exchange will match your Lot with counter parties interested in your lot. Choose a Match and you can start to negotiate.',\r\n        imagePath: 'assets/images/onboard-step3-MX.svg',\r\n    },\r\n    {\r\n        title: \"Negotiating: Let's Get Serious\",\r\n        info: \"In the Negotiating Room, the buyer and seller can negotiate the most important conditions of the deal. Agree on the 5 P's and 2 Q's to get a successful Match.\",\r\n        imagePath: 'assets/images/onboard-step4-MX.svg',\r\n    },\r\n    {\r\n        title: 'Match',\r\n        info: 'Once you have a Match, you will be introduced to the interested party. The final contract is done directly between buyer and seller.',\r\n        imagePath: 'assets/images/onboard-step5-MX.svg',\r\n    },\r\n];\r\n\r\n// #endregion\r\n\r\n// #region Home\r\n\r\nexport const HOME_CARDS_DATA: { [key: string]: HomeCard } = {\r\n    browse: {\r\n        title: 'Browse MX Market',\r\n        routesTo: BROWSE_THE_MARKET_ROUTE,\r\n        source: './assets/images/browse-blue-icon.svg',\r\n        sourceAlt: 'Browse',\r\n    },\r\n    clearing: {\r\n        title: 'Clear with MX',\r\n        routesTo: CLEARING,\r\n        source: './assets/images/clearing-blue-icon.svg',\r\n        sourceAlt: 'Clearing',\r\n    },\r\n    scouts: {\r\n        title: 'Scout the Market',\r\n        routesTo: SCOUTS_ROUTE,\r\n        source: './assets/images/scout-blue-icon.svg',\r\n        sourceAlt: 'Scout',\r\n        stepText: 'Step 1:',\r\n    },\r\n    lots: {\r\n        title: 'Lots',\r\n        routesTo: LOTS_ROUTE,\r\n        source: './assets/images/lots-blue-icon.svg',\r\n        sourceAlt: 'Lot',\r\n        stepText: 'Step 2:',\r\n    },\r\n    negotiations: {\r\n        title: 'Negotiate',\r\n        routesTo: NEGOTIATING_ROOM_ROUTE,\r\n        source: './assets/images/negotiate-blue-icon.svg',\r\n        sourceAlt: 'Negotiate',\r\n        stepText: 'Step 3:',\r\n    },\r\n    completed: {\r\n        title: 'Matches',\r\n        routesTo: NEGOTIATIONS_COMPLETED_ROUTE,\r\n        source: './assets/images/match-blue-icon.svg',\r\n        sourceAlt: 'Match',\r\n        stepText: 'Step 4:',\r\n    },\r\n    brokers: {\r\n        title: 'Brokers',\r\n        routesTo: BROKERS_ROUTE,\r\n        source: './assets/images/brokers-blue-icon.svg',\r\n        sourceAlt: 'Brokers',\r\n    },\r\n    profile: {\r\n        title: 'Profile',\r\n        routesTo: PROFILE_ROUTE,\r\n        source: './assets/icons/user-blue-icon.svg',\r\n        sourceAlt: 'Profile',\r\n    },\r\n    FAQ: {\r\n        title: 'Subscription & More Info',\r\n        routesTo: SUPPORT_ROUTE,\r\n        source: './assets/images/FAQ-blue-icon.svg',\r\n        sourceAlt: 'FAQ',\r\n    },\r\n};\r\n\r\n// #endregion\r\n\r\n// #region Support\r\n\r\nexport const SUPPORT_CARDS_DATA: SupportCard[] = [\r\n    {\r\n        title: 'Subscribe to MX',\r\n        routesTo: VERIFICATION_ROUTE,\r\n        linksTo: null,\r\n        source: './assets/images/verification-farmer-icon.svg',\r\n        sourceAlt: 'Crop field behind a green circle with a white tick inside',\r\n    },\r\n    {\r\n        title: 'Quick Tutorial',\r\n        routesTo: LANDING_ROUTE,\r\n        linksTo: null,\r\n        source: './assets/images/quick-tutorial.svg',\r\n        sourceAlt: 'Illustration with a circle and 3 sections for Buyers, Sellers and Product',\r\n    },\r\n    {\r\n        title: 'Explainer Videos',\r\n        routesTo: null,\r\n        linksTo: 'https://www.youtube.com/watch?v=ERit4FVI7GQ&list=PLHycIisL9eaGWve6BwwasY-XqzNM27bU7',\r\n        source: './assets/images/play-button.svg',\r\n        sourceAlt: 'Green play button',\r\n    },\r\n    {\r\n        title: 'Detailed Tutorial',\r\n        routesTo: DETAILED_TUTORIAL_ROUTE,\r\n        linksTo: null,\r\n        source: './assets/images/detailed-tutorial.svg',\r\n        sourceAlt: 'Two men talking over a sack of gold coins',\r\n    },\r\n    {\r\n        title: 'FAQs',\r\n        routesTo: FAQ_ROUTE,\r\n        linksTo: null,\r\n        source: './assets/images/FAQ.svg',\r\n        sourceAlt: 'Confused woman with her hands in the air',\r\n    },\r\n    {\r\n        title: 'Know Your Counterparty',\r\n        routesTo: KYC_PARTY_ROUTE,\r\n        linksTo: null,\r\n        source: './assets/images/get-to-kyk.svg',\r\n        sourceAlt: \"Man's face wearing a hat and glass\",\r\n    },\r\n    {\r\n        title: 'Contact Us',\r\n        routesTo: CONTACT_PAGE_ROUTE,\r\n        linksTo: null,\r\n        source: './assets/images/contact-us.svg',\r\n        sourceAlt: 'Old style phone with speech bubble',\r\n    },\r\n];\r\n\r\n// #endregion\r\n\r\n// #region Detailed Tutorial\r\n\r\nexport const TUTORIAL_TABLE_DATA: TutorialTableItem[] = [\r\n    {\r\n        title: 'Product and Packaging',\r\n        value: 'Yellow Maize, in Bulk',\r\n    },\r\n    {\r\n        title: 'Position / INCO terms',\r\n        value: 'Ex silo Bultfontein',\r\n    },\r\n    {\r\n        title: 'Period of availability',\r\n        value: '1 July 2021 to 31 July 2021',\r\n    },\r\n    {\r\n        title: 'Price',\r\n        value: 'R per ton of R per basis',\r\n    },\r\n    {\r\n        title: 'Payment terms',\r\n        value: 'Payment after proof of product',\r\n    },\r\n    {\r\n        title: 'Quality',\r\n        value: 'YM1',\r\n    },\r\n    {\r\n        title: 'Quantity',\r\n        value: '200 Metric tons',\r\n    },\r\n];\r\n\r\n// #endregion\r\n\r\n// #region Navigation Bar\r\n\r\nexport const iconDetails: { [key: string]: iconDetailData } = {\r\n    'Step 1': {\r\n        name: 'scouts',\r\n        sourceGrey: './assets/images/bottom-nav-scouts-grey.svg',\r\n        sourceBlue: './assets/images/bottom-nav-scouts-blue.svg',\r\n    },\r\n    'Step 2': {\r\n        name: 'lots',\r\n        sourceGrey: './assets/images/bottom-nav-lots-grey.svg',\r\n        sourceBlue: './assets/images/bottom-nav-lots-blue.svg',\r\n    },\r\n    'Step 3': {\r\n        name: 'negotiations',\r\n        sourceGrey: './assets/images/bottom-nav-negotiations-grey.svg',\r\n        sourceBlue: './assets/images/bottom-nav-negotiations-blue.svg',\r\n    },\r\n    'Step 4': {\r\n        name: 'completed',\r\n        sourceGrey: './assets/images/bottom-nav-completed-grey.svg',\r\n        sourceBlue: './assets/images/bottom-nav-completed-blue.svg',\r\n    },\r\n    Browse: {\r\n        name: 'browse',\r\n        sourceGrey: './assets/images/bottom-nav-browse-grey.svg',\r\n        sourceBlue: './assets/images/bottom-nav-browse-blue.svg',\r\n    },\r\n};\r\n\r\n// #endregion\r\n\r\n// #region BBBEE\r\n\r\nexport const ratingData: bbbeeRating[] = [\r\n    'Non-compliant',\r\n    'Level 1',\r\n    'Level 2',\r\n    'Level 3',\r\n    'Level 4',\r\n    'Level 5',\r\n    'Level 6',\r\n    'Level 7',\r\n    'Level 8',\r\n];\r\n\r\n// #endregion\r\n\r\n// #region Match Items\r\n\r\nexport const matchItems: MatchItems[] = [\r\n    'Product',\r\n    'Position',\r\n    'Period',\r\n    'ContractPrice',\r\n    'Payment',\r\n    'Quantity',\r\n    'Quality',\r\n];\r\n\r\n// #endregion\r\n\r\n// #region Market Availability\r\n\r\nexport const displayChoices: DisplayChoice[] = [\r\n    {\r\n        value: true,\r\n        key: 'Available to market',\r\n    },\r\n    {\r\n        value: false,\r\n        key: 'Not available to market',\r\n    },\r\n];\r\n\r\n// #endregion\r\n\r\n// #region Submit Match Modal\r\n\r\nexport const submitMatchContent: string[] = [\r\n    'Legal Entity Name: ',\r\n    'The Counterparty will be notified about the Match and will have 24 hours to accept the Match before the Lot opens up for negotiation again.',\r\n    'Take note: If your counterparty is making use of a Broker, they \\n' +\r\n        'have to pay a commission fee to MX to be introduced.',\r\n    'Once the interested party accepts the Match you will be introduced to them. The final contract will be negotiated directly between buyer and seller.',\r\n];\r\n\r\n// #endregion\r\n\r\n// #region Admin Email\r\nexport const adminEmails: string[] = ['info@matchmx.com', 'test@gmail.com'];\r\n\r\n// #endregion\r\n\r\n// #region Crop Categories\r\n\r\nexport const cropCategoriesImages: CropCategoryImageData[] = [\r\n    {\r\n        name: 'Grains & Oilseeds',\r\n        source: './assets/icons/grains-and-oilseeds.svg',\r\n        sourceAlt: 'Silo filled with grain',\r\n    },\r\n    {\r\n        name: 'Roughage (Bales)',\r\n        source: './assets/icons/roughage.svg',\r\n        sourceAlt: 'Bale of hay aside a rake',\r\n    },\r\n    {\r\n        name: 'Legumes & Pulses',\r\n        source: './assets/icons/legumes-and-pulses.svg',\r\n        sourceAlt: 'Pea pod with peas aside it',\r\n    },\r\n    {\r\n        name: 'Fruits & Vegetables',\r\n        source: './assets/icons/fruit-and-veg.svg',\r\n        sourceAlt: 'Carrot, apple, and avocado',\r\n    },\r\n    {\r\n        name: 'Byproducts',\r\n        source: './assets/icons/byproducts.svg',\r\n        sourceAlt: 'Bag with picture of grain on it',\r\n    },\r\n    {\r\n        name: 'Livestock',\r\n        source: './assets/icons/livestock.svg',\r\n        sourceAlt: 'Pig',\r\n    },\r\n    {\r\n        name: 'Transport',\r\n        source: './assets/icons/transport.svg',\r\n        sourceAlt: 'Truck',\r\n    },\r\n    {\r\n        name: 'Intention to plant',\r\n        source: './assets/icons/roughage.svg',\r\n        sourceAlt: 'Hand shovel in pile of dirt',\r\n    },\r\n    {\r\n        name: 'SAFEX Forward Hedging',\r\n        source: './assets/icons/safex-forward-hedging.svg',\r\n        sourceAlt: 'Dollar sign with umbrella',\r\n    },\r\n];\r\n\r\n// #endregion\r\n\r\n// #region Delivery Point Icons\r\n\r\nexport const sellerDeliveryPointIcon: DeliveryPointPinIcon = {\r\n    url: './assets/icons/green-location-pin.svg',\r\n    scaledSize: {\r\n        width: 20,\r\n        height: 40,\r\n    },\r\n};\r\n\r\nexport const buyerDeliveryPointIcon: DeliveryPointPinIcon = {\r\n    url: './assets/icons/red-location-pin.svg',\r\n    scaledSize: {\r\n        width: 20,\r\n        height: 40,\r\n    },\r\n};\r\n\r\n// #endregion\r\n\r\n//#region Verification\r\n\r\nexport const verificationTypes: Dictionary<VerificationType> = {\r\n    [FARMER_VERIFICATION_ID]: {\r\n        id: FARMER_VERIFICATION_ID,\r\n        name: 'Farmer',\r\n        source: './assets/icons/verification-farmer-icon.svg',\r\n    },\r\n    [FARMER_ON_FARM_STORAGE_VERIFICATION_ID]: {\r\n        id: FARMER_ON_FARM_STORAGE_VERIFICATION_ID,\r\n        name: 'Farmer: On-Farm Storage',\r\n        source: './assets/icons/verification-farmer-on-farm-icon.svg',\r\n    },\r\n    [PROCESSOR_OF_BYPRODUCTS_VERIFICATION_ID]: {\r\n        id: PROCESSOR_OF_BYPRODUCTS_VERIFICATION_ID,\r\n        name: 'Processor of Byproducts',\r\n        source: './assets/icons/verification-processor-icon.svg',\r\n    },\r\n    [BUYER_VERIFICATION_ID]: {\r\n        id: BUYER_VERIFICATION_ID,\r\n        name: 'Buyer',\r\n        source: './assets/icons/verification-buyer-icon.svg',\r\n    },\r\n    [TRANSPORTER_VERIFICATION_ID]: {\r\n        id: TRANSPORTER_VERIFICATION_ID,\r\n        name: 'Transporter',\r\n        source: './assets/icons/verification-transporter-icon.svg',\r\n    },\r\n    [UNVERIFIED_VERIFICATION_ID]: {\r\n        id: UNVERIFIED_VERIFICATION_ID,\r\n        name: 'Unverified',\r\n        source: './assets/icons/verification-unverified-icon.svg',\r\n    },\r\n    [GRAINSA_VERIFICATION_ID]: {\r\n        id: GRAINSA_VERIFICATION_ID,\r\n        name: 'Grain SA',\r\n        source: './assets/icons/grainSA-icon.svg',\r\n    },\r\n    [MATCH_EXCHANGE_VERIFICATION_ID]: {\r\n        id: MATCH_EXCHANGE_VERIFICATION_ID,\r\n        name: 'Acting on behalf of premium client',\r\n        source: './assets/icons/MX-verification-icon.svg',\r\n    },\r\n};\r\n\r\nexport const VERIFICATION_SUBSCRIPTIONS: Dictionary<VerificationSubscription> = {\r\n    [FARMER_VERIFICATION_ID]: {\r\n        id: FARMER_VERIFICATION_ID,\r\n        name: 'Farmer',\r\n        identifier: 'Farmer',\r\n        source: './assets/icons/verification-farmer-icon.svg',\r\n        product: { title: 'Farmer', price: 'R1150' },\r\n        product_monthly: { title: 'Farmer', price: 'R115' },\r\n    },\r\n    [FARMER_ON_FARM_STORAGE_VERIFICATION_ID]: {\r\n        id: FARMER_ON_FARM_STORAGE_VERIFICATION_ID,\r\n        name: 'Farmer: On-Farm Storage',\r\n        identifier: 'Farmer, On-farm storage',\r\n        source: './assets/icons/verification-farmer-on-farm-icon.svg',\r\n        product: { title: 'Farmer: On-Farm Storage', price: 'R2300' },\r\n        product_monthly: { title: 'Farmer: On-Farm Storage', price: 'R230' },\r\n    },\r\n    [PROCESSOR_OF_BYPRODUCTS_VERIFICATION_ID]: {\r\n        id: PROCESSOR_OF_BYPRODUCTS_VERIFICATION_ID,\r\n        name: 'Processor of Byproducts',\r\n        identifier: 'Processor of by-products',\r\n        source: './assets/icons/verification-processor-icon.svg',\r\n        product: { title: 'Processor of Byproducts', price: 'R5500' },\r\n        product_monthly: { title: 'Processor of Byproducts', price: 'R550' },\r\n    },\r\n    [BUYER_VERIFICATION_ID]: {\r\n        id: BUYER_VERIFICATION_ID,\r\n        name: 'Buyer',\r\n        identifier: 'Buyer',\r\n        source: './assets/icons/verification-buyer-icon.svg',\r\n        product: { title: 'Buyer', price: 'R5500' },\r\n        product_monthly: { title: 'Buyer', price: 'R550' },\r\n    },\r\n    [TRANSPORTER_VERIFICATION_ID]: {\r\n        id: TRANSPORTER_VERIFICATION_ID,\r\n        name: 'Transporter',\r\n        identifier: 'Transporter',\r\n        source: './assets/icons/verification-transporter-icon.svg',\r\n        product: { title: 'Transporter', price: 'R5500' },\r\n        product_monthly: { title: 'Transporter', price: 'R550' },\r\n    },\r\n    [GRAINSA_VERIFICATION_ID]: {\r\n        id: GRAINSA_VERIFICATION_ID,\r\n        name: 'Grain SA',\r\n        identifier: 'GrainSA',\r\n        source: './assets/icons/grainSA-icon.svg',\r\n        product: { title: 'GrainSA', price: 'R1150' },\r\n        product_monthly: { title: 'GrainSA', price: 'R115' },\r\n        promotion: '1 Year Free',\r\n    },\r\n};\r\n\r\nexport const RCproductIdentifiers = {\r\n    [FARMER_VERIFICATION_ID]: ['mx_farmer_year', 'mx_farmer', 'mx_farmer_month', 'mx_farmer_monthly'],\r\n    [BUYER_VERIFICATION_ID]: ['mx_buyer_year', 'mx_buyer', 'mx_buyer_month', 'mx_buyer_monthly'],\r\n    [FARMER_ON_FARM_STORAGE_VERIFICATION_ID]: [\r\n        'mx_farmer_on_farm_storage_year',\r\n        'mx_farmer_on_farm_storage',\r\n        'mx_farmer_on_farm_storage_month',\r\n        'mx_farmer_on_farm_storage_monthly',\r\n    ],\r\n    [PROCESSOR_OF_BYPRODUCTS_VERIFICATION_ID]: [\r\n        'mx_processor_of_by_products_year',\r\n        'mx_processor_of_by_products',\r\n        'mx_processor_of_by_products_month',\r\n        'mx_processor_of_by_products_monthly',\r\n    ],\r\n    [TRANSPORTER_VERIFICATION_ID]: [\r\n        'mx_transporter_year',\r\n        'mx_transporter',\r\n        'mx_transporter_month',\r\n        'mx_transporter_monthly',\r\n    ],\r\n    [GRAINSA_VERIFICATION_ID]: ['mx_grainsa_year', 'mx_grainsa', 'mx_grainsa_month', 'mx_grainsa_monthly'],\r\n};\r\n\r\n// #endregion\r\n\r\n// #region Verification\r\n\r\nexport const DEFAULT_VERIFICATION: Verification = { id: 6, verificationDate: Date.now() };\r\n\r\nexport const GRAINSA_VERIFICATION_TEXT: { description: string; period: string } = {\r\n    description:\r\n        'You are a verified member of Grain SA, giving you 1 free year of this exclusive verification type. This gives you access to all Premium features in the Match Exchange.',\r\n    period: '1 year FREE with your subscription!',\r\n};\r\n\r\n// #endregion\r\n\r\n// #region Regex\r\n\r\nexport const emailRegex =\r\n    /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n\r\nexport const specialCharacterRegex = /[ `!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/;\r\n\r\nexport const numberRegex = /.*[0-9].*/;\r\n\r\nexport const letterRegex = /.*[a-zA-Z].*/;\r\n\r\n// #endregion\r\n\r\n// #region Required User Profile Items\r\n\r\nexport const requiredUserProfileItems: string[] = ['firstname', 'lastname', 'email', 'phone', 'location'];\r\n\r\n// #endregion\r\n\r\n// #region Lot Form Asterisk Months\r\n\r\nexport const lotFormAsteriskMonths: string[] = ['March', 'May', 'July', 'September', 'December'];\r\n\r\n// #endregion\r\n\r\n// #region Home\r\n\r\nexport const STEP_INFO_DATA: { [key: string]: StepInfo } = {\r\n    browse: {\r\n        iconPath: 'assets/images/browse-blue-icon.svg',\r\n        tooltip: 'Browse the Market',\r\n        heading: 'Browse the Market',\r\n        body: 'Browse MX for existing Lots you are interested in. See what price buyers and sellers are ready to buy and sell their product for.',\r\n    },\r\n    clearing: {\r\n        iconPath: './assets/images/clearing-blue-icon.svg',\r\n        tooltip: 'Clear with MX',\r\n        heading: 'Clear with MX',\r\n        body: 'MX will walk you through a clearing process to help you trade in the safest way possible.',\r\n    },\r\n    brokers: {\r\n        iconPath: './assets/images/brokers-blue-icon.svg',\r\n        tooltip: 'Brokers',\r\n        heading: 'Why Appoint a Broker?',\r\n        body: `Subscribers can appoint a Broker to manage their account.\r\n             Brokers can create Scouts, Lots, and Negotiate on the subscribers' behalf.\r\n            ' Throughout the process keep complete control. Only you submit the final Match.`,\r\n    },\r\n    scouts: {\r\n        iconPath: 'assets/images/onboard-step1-MX.svg',\r\n        tooltip: 'Use Scouts to search the Market',\r\n        heading: 'What is a Scout?',\r\n        body: \"We call it the magic of an MX Scout because you can't do the best deal if you don't see all the available options. With a Scout, you get linked permanently by our technology to buyers or sellers interested in buying from you or selling to you. This link is permanent, and the moment our algorithm finds another relevant party, your Scout will be updated.\",\r\n    },\r\n    lots: {\r\n        iconPath: 'assets/images/onboard-step2-MX.svg',\r\n        tooltip: 'Use Lots to search the Market',\r\n        heading: 'What is a Lot?',\r\n        body: `\r\n        <p> With an MX Lot, you communicate to your Scout links that you want to sell or buy a specific portion of your crop (or annual need if you are a trader or processor). Every party linked in your Scout will be notified that you are in the market to sell or buy. A Lot describes the 5 P's and 2 Qs, and an interested party can now create a counter-Lot. The 5 P's are Product, Position, Period of availability, Price, Payment Terms. The 2 Q's are Quality and Quantity. Your Lot gets linked to all Lots of parties that want to do business with you. You can then choose with whom you want to negotiate (one or multiple). There is no better way to perfect the timing between buyer and seller than an MX Lot. </p>\r\n          <ul>\r\n            <li>Ex Silo-Coop Certificate - Buy Coop Certificate, only if Sales contract makes Provision for Coop certificates.</li>\r\n            <li>Ex Silo-SAFEX Certificate - Buy SAFEX Certificate.</li>\r\n            <li>Ex Silo-Title Transfer - Direct Transfer of stock from Delivery Party to Match Exchange.</li>\r\n            <li>Ex Silo-ProducerDelivery - Delivery of stock by Producer, direct on TMX folio at Silo.</li>\r\n            <li>Ex Silo-Farm - Delivery of Producer stock by TMX, direct on TMX folio at Silo.</li>\r\n            <li>Ex Farm - Delivery of Producer stock by TMX, at Milldoor.</li>\r\n            <li>Ex Mill - Delivery of stock by Producer, at Milldoor.</li>\r\n          </ul>  `,\r\n    },\r\n    negotiations: {\r\n        iconPath: 'assets/images/onboard-step4-MX.svg',\r\n        tooltip: 'How to Negotiate',\r\n        heading: 'How to Negotiate?',\r\n        body: \"Once you have identified the Lot(s) that you want to negotiate with, you can click the 'Let's Negotiate' button. Clicking on that will bring both parties into the Negotiating Room. In there, you can negotiate with one or multiple parties the 5 P's and 2 Q's until you have a consensus on all seven Lot items. Choose the best Lot for you and click on the 'Submit Match' button.\",\r\n    },\r\n    completed: {\r\n        iconPath: 'assets/images/onboard-step5-MX.svg',\r\n        tooltip: 'What are Completed Negotiations',\r\n        heading: 'Completed Negotiations',\r\n        body: 'Once you have submitted your match, the counterparty has 24h to counter-submit your match. When the counterparty submitted (accepted) the match, MX will reveal the identity of the two parties to each other via email. All the necessary contact details will be in the email so that the counterparties can contact each other to finalize the deal and sign a contract. Remember, there is no contractual risk by using MX. Until the final contract is signed, the counterparties have no obligation to each other. MX is solving the two biggest problems, and that is that buyers and sellers always know of each other and getting the timing perfect between them.',\r\n    },\r\n};\r\n\r\n// #endregion\r\n","import { saveAs } from 'file-saver';\r\nimport { Broker, BrokerRequest, Lot, Scout, User, UserVerification } from '../models/queryModels';\r\nimport { MarketLotCard, LatLng, Notification } from '../models/viewModels';\r\nimport { RCproductIdentifiers } from './constants';\r\n\r\n// #region Date Helper Functions\r\nexport function dateStringToDate<T>(objectToConvert: T): T;\r\nexport function dateStringToDate<T>(objectToConvert: T[]): T[];\r\nexport function dateStringToDate<T>(objectToConvert: T | T[]): T | T[] {\r\n    if (objectToConvert instanceof Array) {\r\n        return mapArrayOfObjects(objectToConvert);\r\n    } else {\r\n        return convertDateStringToObject(objectToConvert);\r\n    }\r\n}\r\nfunction convertDateStringToObject<T>(object: T) {\r\n    if (typeof object === 'object') {\r\n        for (const key of Object.keys(object)) {\r\n            if (key.toLowerCase().includes('date') && object[key]) {\r\n                object[key] = new Date(object[key]);\r\n            }\r\n        }\r\n    }\r\n    return object;\r\n}\r\n\r\nfunction mapArrayOfObjects<T>(objectArray: T[]) {\r\n    objectArray = objectArray.map(convertDateStringToObject);\r\n    return objectArray;\r\n}\r\n// #endregion\r\n\r\n//#region CSV Download Helper\r\nexport function downloadFile(data: any) {\r\n    const replacer = (key, value) => (value === null ? '' : value);\r\n    const header = Object.keys(data[0]);\r\n    const csv = data.map((row) => header.map((fieldName) => JSON.stringify(row[fieldName], replacer)).join(','));\r\n\r\n    csv.unshift(header.join(','));\r\n    csv.unshift('SEP=,');\r\n    const csvArray = csv.join('\\r\\n');\r\n\r\n    var blob = new Blob([csvArray], { type: 'text/csv' });\r\n    saveAs(blob, 'myFile.csv');\r\n}\r\n//#endregion\r\n\r\n// #region Prepare Scout From Market Lot Card Helper\r\n\r\nexport function prepareScoutFromMarketLotCardHelper(marketLotCard: MarketLotCard): Scout {\r\n    const { lotType, crop, town, location, radius } = marketLotCard;\r\n    const counterPartyLotType = lotType === 'Sell' ? 'Buy' : 'Sell';\r\n    return {\r\n        creatorType: 'Farmer',\r\n        scoutType: counterPartyLotType,\r\n        crop,\r\n        inSouthAfrica: false,\r\n        googlePlaceId: '',\r\n        town,\r\n        location,\r\n        radius,\r\n        isPublic: true,\r\n    };\r\n}\r\n\r\n// #endregion\r\n\r\nexport function transformSingleUsersForVerificationHelper(\r\n    verificationId: number,\r\n    user: User,\r\n    period: number | null,\r\n): UserVerification {\r\n    const verificationDate: number = Date.now();\r\n    return {\r\n        uid: user.uid,\r\n        fullName: `${user.firstname} ${user.lastname}`,\r\n        verification: {\r\n            id: verificationId,\r\n            verificationDate: verificationDate,\r\n            verificationExpires: period,\r\n        },\r\n    };\r\n}\r\n\r\nexport function matchRCIdentifierToVerificationIdHelper(identifier: string) {\r\n    for (const verificationId in RCproductIdentifiers) {\r\n        if (RCproductIdentifiers[verificationId].includes(identifier)) {\r\n            return parseInt(verificationId);\r\n        }\r\n    }\r\n}\r\n\r\n//#region Calculate distance\r\n\r\nexport function calculateBrokerDistanceHelper(coordinates: LatLng[]) {\r\n    let latUser = coordinates[0].lat;\r\n    let lngUser = coordinates[0].lng;\r\n    coordinates = coordinates.slice(1);\r\n    let distances = [];\r\n\r\n    for (let i = 0; i < coordinates.length; i++) {\r\n        let latAgent = coordinates[i].lat;\r\n        let lngAgent = coordinates[i].lng;\r\n\r\n        if (latUser == latAgent && lngUser == lngAgent) {\r\n            distances.push(0);\r\n        } else if (latAgent == 0) {\r\n            distances.push(-1);\r\n        } else {\r\n            var radLatUser = (Math.PI * latUser) / 180;\r\n            var radLatAgent = (Math.PI * latAgent) / 180;\r\n            var theta = lngUser - lngAgent;\r\n            var radTheta = (Math.PI * theta) / 180;\r\n            var dist =\r\n                Math.sin(radLatUser) * Math.sin(radLatAgent) +\r\n                Math.cos(radLatUser) * Math.cos(radLatAgent) * Math.cos(radTheta);\r\n            if (dist > 1) {\r\n                dist = 1;\r\n            }\r\n            dist = Math.acos(dist);\r\n            dist = (dist * 180) / Math.PI;\r\n            dist = dist * 60 * 1.85;\r\n            distances.push(Math.ceil(dist));\r\n        }\r\n    }\r\n\r\n    return distances;\r\n}\r\n\r\n// #endregion\r\n\r\n// #region Client Notifications\r\nexport function getClientNotificationsCountHelper(uid: string, notifications: Notification[]): number {\r\n    let notificationsCount = 0;\r\n\r\n    for (let i = 0; i < notifications.length; i++) {\r\n        if (notifications[i].userId === uid) {\r\n            notificationsCount++;\r\n        }\r\n    }\r\n    return notificationsCount;\r\n}\r\n// #endregion\r\n\r\n// #region Filter broker requests\r\nexport function filterBrokerHelper(brokerRequests: BrokerRequest[], brokers: Broker[], sentByBroker: boolean) {\r\n    let sentBy = brokerRequests.filter((brokerRequest) => brokerRequest.sentByBroker === sentByBroker);\r\n    let sentByUids = sentBy.map((brokerRequest) => brokerRequest.brokerUid);\r\n    let sentByBrokers = brokers.filter((broker) => sentByUids.includes(broker.uid));\r\n    return sentByBrokers.sort((a, b) => a.distance - b.distance);\r\n}\r\n// #endregion\r\n\r\n// #region Profile Complete Checker\r\n\r\nexport function isProfileCompleteHelper(user: User): boolean {\r\n    return Boolean(user.firstname && user.lastname && user.email && user.phone && user.location);\r\n}\r\n\r\n// #endregion\r\n\r\n// #region Lots Transformation\r\n\r\nexport function transformDateToUtcHelper(date: Date): Date {\r\n    let newDate = date;\r\n    newDate.setHours(newDate.getHours() + 12);\r\n    return newDate;\r\n}\r\n\r\nexport function transformLotBeforeDispatchHelper(lot: Lot): Lot {\r\n    return {\r\n        ...lot,\r\n        quantity: +lot.quantity,\r\n        price: +lot.price,\r\n        dateFrom: transformDateToUtcHelper(lot.dateFrom),\r\n        dateTo: transformDateToUtcHelper(lot.dateTo),\r\n    };\r\n}\r\n// #endregion\r\n","import { appActions } from 'src/app/core/ngrx/app-state/index';\r\nimport { cropActions } from 'src/app/core/ngrx/crop/index';\r\nimport { authActions } from 'src/app/core/ngrx/authState/index';\r\nimport { scoutActions } from 'src/app/core/ngrx/entities/scout/index';\r\nimport { deliveryPointActions } from 'src/app/core/ngrx/entities/delivery-points/index';\r\nimport { lotActions } from 'src/app/core/ngrx/entities/lot/index';\r\nimport { matchActions } from 'src/app/core/ngrx/entities/match/index';\r\nimport { negotiationActions } from 'src/app/core/ngrx/entities/negotiations/index';\r\nimport { notificationActions } from 'src/app/core/ngrx/entities/notifications';\r\nimport { paygateActions } from 'src/app/core/ngrx/paygate/index';\r\nimport { brokersActions } from 'src/app/core/ngrx/brokers/index';\r\n\r\nexport {\r\n    appActions,\r\n    authActions,\r\n    deliveryPointActions,\r\n    scoutActions,\r\n    lotActions,\r\n    cropActions,\r\n    matchActions,\r\n    negotiationActions,\r\n    notificationActions,\r\n    paygateActions,\r\n    brokersActions,\r\n};\r\n","import { MatSnackBarConfig } from '@angular/material/snack-bar';\r\n\r\nexport const errorConfig: MatSnackBarConfig = {\r\n    duration: 5000,\r\n    horizontalPosition: 'right',\r\n    verticalPosition: 'top',\r\n    panelClass: 'g-snack-error',\r\n};\r\n\r\nexport const successConfig: MatSnackBarConfig = {\r\n    duration: 5000,\r\n    horizontalPosition: 'right',\r\n    verticalPosition: 'top',\r\n    panelClass: 'g-snack-success',\r\n};\r\n\r\nexport const notificationConfig: MatSnackBarConfig = {\r\n    duration: 5000,\r\n    horizontalPosition: 'center',\r\n    verticalPosition: 'top',\r\n    panelClass: 'g-snack-notification',\r\n};\r\n","export interface IdName {\r\n    id: number;\r\n    name: string;\r\n}\r\nexport interface Crop {\r\n    id: number;\r\n    name: string;\r\n    cropCategoryId: number;\r\n}\r\n\r\nexport interface GPSCoordinates {\r\n    lat: number;\r\n    lng: number;\r\n}\r\n\r\n// #region Entity\r\n\r\nexport interface User {\r\n    uid: string;\r\n    email: string;\r\n    phone: string;\r\n    SQL_id?: number;\r\n    archived: number;\r\n    lastname: string;\r\n    firstname: string;\r\n    createdAt: number;\r\n    updatedAt: number;\r\n    enterprise?: string;\r\n    token?: string;\r\n    location: string;\r\n    matchUser?: boolean;\r\n    hasBrowsedMarket?: boolean;\r\n    entities?: Entity[];\r\n    verification?: Verification;\r\n    successfulMatches?: number;\r\n    ratings?: Rating[];\r\n    deviceTokens?: string[];\r\n    isBroker?: boolean;\r\n    grainSA?: GrainSA;\r\n}\r\n\r\nexport interface Broker extends User {\r\n    distance?: number;\r\n    activeClients?: string[];\r\n}\r\n\r\nexport interface Client extends User {\r\n    distance: number;\r\n}\r\n\r\nexport interface BrokerRequest {\r\n    brokerUid: string;\r\n    clientUid: string;\r\n    sentByBroker: boolean;\r\n    acceptedRequest: boolean;\r\n    expiryDate: number;\r\n    brokerAdminRole: boolean;\r\n}\r\nexport interface BrokerNegotiation {\r\n    lotMatchId: number;\r\n    sellerEmail: string;\r\n    buyerEmail: string;\r\n    sellerPaid: boolean;\r\n    buyerPaid: boolean;\r\n    emailSent: boolean;\r\n}\r\nexport interface Verification {\r\n    id: number;\r\n    verificationDate: number;\r\n    verificationExpires?: number;\r\n}\r\n\r\nexport interface GrainSA {\r\n    grainSAId: string;\r\n    isVerified: boolean;\r\n}\r\n\r\nexport interface Rating {\r\n    ratingScore: number;\r\n    userId: string;\r\n}\r\n\r\nexport interface UserVerification {\r\n    uid: string;\r\n    fullName: string;\r\n    verification: Verification;\r\n}\r\n\r\nexport interface SQL_User {\r\n    id: number;\r\n    skuduId: string;\r\n    entities: Entity[];\r\n    hasB_BBEE: boolean;\r\n}\r\n\r\nexport interface Entity {\r\n    id: number;\r\n    name: string;\r\n    email: string;\r\n    userEntity: boolean;\r\n    registrationNumber: string;\r\n    phoneNumber: string;\r\n    maxUsers: number;\r\n    tradingEntities: TradingEntity[];\r\n    B_BBEE_Rating: number;\r\n}\r\n\r\nexport interface EntityUser {\r\n    id: number;\r\n    entityId: number;\r\n    roleId: number;\r\n    userEntity: boolean;\r\n}\r\nexport interface EntityDelivery {\r\n    id: number;\r\n    deliveryPointId: number;\r\n    contactPerson: string;\r\n    phoneNumber: string;\r\n    email: string;\r\n}\r\n\r\nexport interface TradingEntity {\r\n    id: number;\r\n    name: string;\r\n    equityScore: number;\r\n    entityType: IdName;\r\n    entityDeliveries?: EntityDelivery[];\r\n}\r\n// #endregion\r\n\r\n// #region Scout\r\n\r\nexport type ScoutCreator = 'Farmer' | 'Offtaker (Processor)' | 'Trader';\r\nexport type ScoutType = 'Buy' | 'Sell';\r\n\r\nexport interface Scout {\r\n    id?: number;\r\n    creatorType: ScoutCreator;\r\n    scoutType: ScoutType;\r\n    crop: Crop;\r\n    inSouthAfrica: boolean;\r\n    googlePlaceId: string;\r\n    town: string;\r\n    location: GPSCoordinates;\r\n    radius: number;\r\n    isPublic: boolean;\r\n    tradingEntityId?: number;\r\n}\r\n\r\nexport interface ScoutAndFineTune {\r\n    scout: Scout;\r\n    fineTune: FineTune;\r\n}\r\n\r\nexport interface ScoutSave extends Scout {\r\n    tradingEntityId: number;\r\n}\r\n\r\nexport class ScoutClass implements Scout {\r\n    creatorType: ScoutCreator = 'Farmer';\r\n    scoutType: ScoutType = 'Sell';\r\n    crop = {\r\n        id: null,\r\n        name: '',\r\n        cropCategoryId: null,\r\n    };\r\n    inSouthAfrica = false;\r\n    googlePlaceId = '';\r\n    town = '';\r\n    location = {\r\n        lat: -30.5595,\r\n        lng: 22.9375,\r\n    };\r\n    radius = 50;\r\n    isPublic = true;\r\n}\r\n\r\n// #endregion\r\n\r\n// #region Delivery Point\r\n\r\nexport interface DeliveryPoint {\r\n    id: number;\r\n    name: string;\r\n    streetNumber: string;\r\n    street: string;\r\n    suburb: string;\r\n    town: string;\r\n    postalCode: string;\r\n    region: string;\r\n    province: string;\r\n    country: string;\r\n    googlePlaceId: string;\r\n    isPublic: boolean;\r\n    location: GPSCoordinates;\r\n    locationType?: IdName;\r\n}\r\n\r\nexport class DeliveryPointClass implements DeliveryPoint {\r\n    id: number = 112358132134558914;\r\n    name: string = null;\r\n    streetNumber: string = null;\r\n    street: string = null;\r\n    suburb: string = null;\r\n    town: string = null;\r\n    postalCode: string = null;\r\n    region: string = null;\r\n    province: string = null;\r\n    country: string = null;\r\n    googlePlaceId: string = null;\r\n    isPublic: boolean = false;\r\n    location = {\r\n        lat: -30.5595,\r\n        lng: 22.9375,\r\n    };\r\n    locationType?: IdName = {\r\n        id: 8,\r\n        name: 'User Generated',\r\n    };\r\n}\r\n\r\nexport interface Silo {\r\n    id: number;\r\n    name: string;\r\n    deliveryPoint: DeliveryPoint;\r\n}\r\n\r\n// #endregion\r\n\r\n// #region Additional Details Modal\r\n\r\nexport interface AdditionalEntityDetail {\r\n    entityId?: number;\r\n    legalEntityName: string;\r\n    exFarm: boolean;\r\n    bbbeeRating: number;\r\n    email: string;\r\n}\r\n\r\nexport class AdditionalEntityDetailsClass implements AdditionalEntityDetail {\r\n    legalEntityName = '';\r\n    exFarm = false;\r\n    bbbeeRating = 0;\r\n    email = '';\r\n}\r\n\r\nexport interface UserWithEntities extends User {\r\n    entities: Entity[];\r\n    hasB_BBEE: boolean;\r\n}\r\n\r\n// #endregion\r\n\r\n// #region Lot\r\n\r\nexport type SafexMonth =\r\n    | 'January'\r\n    | 'February'\r\n    | 'March'\r\n    | 'April'\r\n    | 'May'\r\n    | 'June'\r\n    | 'July'\r\n    | 'August'\r\n    | 'September'\r\n    | 'October'\r\n    | 'November'\r\n    | 'December';\r\nexport type SafexOption = 'PLUS' | 'MINUS';\r\nexport type PriceType = { name: 'Fixed Price'; id: 2 } | { name: 'Basis'; id: 1 };\r\n\r\nexport class Lot {\r\n    id?: number;\r\n    lotName: string = '';\r\n    lotType: ScoutType = 'Sell';\r\n    crop: Crop = null;\r\n    priceType: PriceType = { name: 'Fixed Price', id: 2 };\r\n    month: IdName = null;\r\n    dateFrom: Date = null;\r\n    dateTo: Date = null;\r\n    incoTerm: IdName = null;\r\n    deliveryPoint: DeliveryPoint = new DeliveryPointClass();\r\n    quality: IdName = null;\r\n    quantity: number = null;\r\n    price: number = null;\r\n    paymentTerm: IdName = null;\r\n    isPublic: boolean = true;\r\n    scoutId: number = null;\r\n    exchange: IdName = { id: 1, name: 'SAFEX' };\r\n    quantityMeasure: IdName = null;\r\n    safexOption: SafexOption = 'PLUS';\r\n    tradingEntityId = null;\r\n    packaging: IdName = null;\r\n    radius: number | null = null;\r\n}\r\n\r\nexport type MatchItems = 'Product' | 'Position' | 'Period' | 'ContractPrice' | 'Payment' | 'Quantity' | 'Quality';\r\n\r\nexport class LotMatchDetails {\r\n    id: number;\r\n    crop: IdName;\r\n    packaging: IdName;\r\n    deliveryPoint: DeliveryPoint;\r\n    dateFrom: Date;\r\n    dateTo: Date;\r\n    currency: IdName;\r\n    price: number;\r\n    priceType: PriceType;\r\n    exchange: IdName;\r\n    incoTerm: IdName;\r\n    month: IdName;\r\n    exchangeValue: 'PLUS' | 'MINUS';\r\n    payment: IdName;\r\n    quantity: number;\r\n    unitOfMeasure: IdName;\r\n    grade: IdName;\r\n    userVerificationId: number;\r\n    lotId?: number;\r\n}\r\n\r\n// #endregion\r\n\r\n// #region Search Info\r\n\r\nexport interface searchInfo {\r\n    searchData: string;\r\n    isPublic: boolean;\r\n}\r\n\r\n// #endregion\r\n\r\n// #region Fine Tune\r\n\r\nexport class FineTune {\r\n    id?: number;\r\n    scoutId?: number;\r\n    exFarm: boolean;\r\n    hasLots: boolean;\r\n    rating: number;\r\n}\r\n\r\nexport interface FineTunedScout extends Scout {\r\n    exFarm: boolean;\r\n    hasLots: boolean;\r\n    rating: number;\r\n}\r\n\r\n// #endregion\r\n\r\n//#region Analytics\r\n\r\nexport interface Analytics {\r\n    numberOfBuyingScouts: number;\r\n    numberOfSellingScouts: number;\r\n    numberOfBuyingLots: number;\r\n    numberOfSellingLots: number;\r\n    totalSkuduMatches: number;\r\n    volumeNegotiatedInTons: number;\r\n}\r\n\r\nexport class DateRange {\r\n    lowerBound: Date;\r\n    upperBound: Date;\r\n}\r\n\r\n//#endregion\r\n\r\n//#region Browse the Market\r\n\r\nexport class MarketFilters {\r\n    cardType: ScoutType;\r\n    gpsCoordinates: GPSCoordinates;\r\n\r\n    crop: IdName | null;\r\n    cropCategory: IdName | null;\r\n    town: string | null;\r\n    dateFrom: Date | null;\r\n    dateTo: Date | null;\r\n    radius: number | null;\r\n}\r\n\r\nexport class MarketFilterClass extends MarketFilters {\r\n    cardType: ScoutType = 'Buy';\r\n    gpsCoordinates: GPSCoordinates = {\r\n        lat: -30.5595,\r\n        lng: 22.9375,\r\n    };\r\n\r\n    crop: IdName | null = null;\r\n    cropCategory: IdName | null = null;\r\n    town: string | null = null;\r\n    dateFrom: Date | null = null;\r\n    dateTo: Date | null = null;\r\n    radius: number | null = null;\r\n}\r\n\r\n//#endregion\r\n\r\n//#region Paygate\r\n\r\nexport interface Transaction {\r\n    VERSION: number;\r\n    PAYGATE_ID: string;\r\n    REFERENCE: string;\r\n    AMOUNT: string;\r\n    CURRENCY: string;\r\n    RETURN_URL: string;\r\n    TRANSACTION_DATE: string;\r\n    EMAIL: string;\r\n    SUBS_START_DATE: string;\r\n    SUBS_END_DATE: string;\r\n    SUBS_FREQUENCY: string;\r\n    PROCESS_NOW: string;\r\n    PROCESS_NOW_AMOUNT: string;\r\n    CHECKSUM: string;\r\n}\r\n\r\nexport interface TransactionReturn {\r\n    PAYGATE_ID: number;\r\n    REFERENCE: string;\r\n    TRANSACTION_STATUS: string;\r\n    RESULT_CODE: number;\r\n    AUTH_CODE: number;\r\n    AMOUNT: string;\r\n    RESULT_DESC: string;\r\n    TRANSACTION_ID: string;\r\n    SUBSCRIPTION_ID: string;\r\n    RISK_INDICATOR: string;\r\n    CHECKSUM: string;\r\n}\r\n\r\n//#endregion\r\n","import { Lot, User } from 'src/app/core/models/queryModels';\r\nimport { Analytics, DateRange } from './../../models/queryModels';\r\nimport { Action, createAction, props } from '@ngrx/store';\r\n\r\n//#region Create\r\n\r\n//#endregion\r\n\r\n//#region Read\r\n\r\n// #region Link the user state to firebase\r\nexport const ReqCheckAuthorization = createAction(\r\n    '[App Start Up] ReqCheckAuthorization',\r\n    props<{ executedTime: number }>(),\r\n);\r\nexport const CheckAuthorizationFail = createAction(\r\n    '[ReqCheckAuthorization] CheckAuthorizationFail',\r\n    props<{ executedTime: number }>(),\r\n);\r\nexport const CheckAuthorizationSuccess = createAction(\r\n    '[ReqCheckAuthorization] [SCU] CheckAuthorizationSuccess',\r\n    props<{ executedTime: number }>(),\r\n);\r\n\r\n//#endregion\r\n\r\n//#endregion\r\n\r\n//#region Update\r\nexport const ReqToggleIsLoading = createAction('[App] ReqToggleIsLoading', props<{ flag: boolean }>());\r\n\r\n//#endregion\r\n\r\n//#region Delete\r\n\r\n//#endregion\r\n\r\n// #region App Level Actions\r\n// #region ReqGetAnalytics\r\nexport const ReqGetAnalytics = createAction('[Profile] ReqGetAnalytics');\r\nexport const GetAnalyticsFail = createAction('[ReqGetAnalytics] GetAnalyticsFail');\r\nexport const GetAnalyticsSuccess = createAction(\r\n    '[ReqGetAnalytics] GetAnalyticsSuccess',\r\n    props<{ analytics: Analytics }>(),\r\n);\r\n// #endregion\r\n// #region ReqGetLotsInDateRange\r\nexport const ReqGetLotsInDateRange = createAction('[Profile] ReqGetLotsInDateRange', props<{ dateRange: DateRange }>());\r\nexport const GetLotsInDateRangeFail = createAction('[ReqGetLotsInDateRange] GetLotsInDateRangeFail');\r\nexport const GetLotsInDateRangeSuccess = createAction('[ReqGetLotsInDateRange] GetLotsInDateRangeSuccess');\r\n// #endregion\r\n// #endregion\r\n\r\n//#region ReqGetUsersForVerification\r\nexport const ReqGetUsersForVerification = createAction('[Admin] ReqGetUsersForVerification');\r\nexport const ReqGetUsersForVerificationFail = createAction(\r\n    '[ReqGetUsersForVerification] ReqGetUsersForVerificationFail',\r\n);\r\nexport const ReqGetUsersForVerificationSuccess = createAction(\r\n    '[ReqGetUsersForVerification] ReqGetUsersForVerificationSuccess',\r\n    props<{ users: User[] }>(),\r\n);\r\n//#endregion\r\n\r\n//#region ReqEmailVerificationForm\r\nexport const ReqEmailVerificationForm = createAction('[Verification] ReqEmailVerificationForm');\r\nexport const ReqEmailVerificationFormFail = createAction('[ReqEmailVerificationForm] ReqEmailVerificationFormFail');\r\nexport const ReqEmailVerificationFormSuccess = createAction(\r\n    '[ReqEmailVerificationForm] ReqEmailVerificationFormSuccess',\r\n);\r\n//#endregion\r\n","import { cloneDeep } from 'lodash';\r\nimport { Lot } from 'src/app/core/models/queryModels';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ApiService } from 'src/app/core/services/api/api.service';\r\nimport { AuthService } from '../../services/auth/auth.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { Actions, ofType, createEffect } from '@ngrx/effects';\r\n\r\nimport { mergeMap, catchError, switchMap, repeat } from 'rxjs/operators';\r\nimport * as actions from 'src/app/core/helpers/index.actions';\r\nimport * as fromRoot from 'src/app/core/ngrx/reducers/index';\r\nimport { Store } from '@ngrx/store';\r\n\r\nimport * as snackbarConfigs from '../../helpers/snackbar';\r\nimport { downloadFile } from '../../helpers/helperFunctions';\r\n\r\nimport * as snackBarConfigs from '../../helpers/snackbar';\r\n@Injectable()\r\nexport class AppStateEffects {\r\n    //#region Create\r\n\r\n    //#endregion\r\n\r\n    //#region Read\r\n\r\n    // #region ReqLinkUser\r\n    ReqCheckAuthorization$ = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(actions.appActions.ReqCheckAuthorization),\r\n            mergeMap((payload) => {\r\n                return this.authService.getAuthorization().pipe(\r\n                    mergeMap((firebaseUser) => {\r\n                        if (firebaseUser) {\r\n                            this.store.dispatch(\r\n                                actions.authActions.ReqGetUserFromAuthorization({ uid: firebaseUser.uid }),\r\n                            );\r\n                            return this.actions$.pipe(\r\n                                ofType(\r\n                                    actions.authActions.GetUserFromAuthorizationSuccess,\r\n                                    actions.authActions.GetUserFromAuthorizationFail,\r\n                                ),\r\n                                switchMap((storeAction) => {\r\n                                    if (storeAction.type === actions.authActions.GetUserFromAuthorizationSuccess.type) {\r\n                                        return [\r\n                                            actions.appActions.CheckAuthorizationSuccess({\r\n                                                executedTime: payload.executedTime,\r\n                                            }),\r\n                                            actions.appActions.ReqToggleIsLoading({ flag: false }),\r\n                                        ];\r\n                                    } else {\r\n                                        throw new Error('failed to retrieve user information');\r\n                                    }\r\n                                }),\r\n                            );\r\n                        } else {\r\n                            return [\r\n                                actions.appActions.CheckAuthorizationFail({ executedTime: payload.executedTime }),\r\n                                actions.appActions.ReqToggleIsLoading({ flag: false }),\r\n                            ];\r\n                        }\r\n                    }),\r\n                    catchError((error) => {\r\n                        console.log('ReqLinkUser: ', error.message);\r\n                        this.authService.logout();\r\n                        return [\r\n                            actions.appActions.CheckAuthorizationFail({ executedTime: payload.executedTime }),\r\n                            actions.appActions.ReqToggleIsLoading({ flag: false }),\r\n                        ];\r\n                    }),\r\n                    repeat(),\r\n                );\r\n            }),\r\n        ),\r\n    );\r\n    // #endregion\r\n\r\n    // #endregion\r\n\r\n    //#region Update\r\n\r\n    //#endregion\r\n\r\n    //#region Delete\r\n\r\n    //#endregion\r\n\r\n    // #region App Level Effects\r\n    // #region ReqGetAnalytics\r\n    ReqGetAnalytics$ = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(actions.appActions.ReqGetAnalytics),\r\n            switchMap(() => {\r\n                return this.api.getAnalytics().pipe(\r\n                    mergeMap((apiResponse) => {\r\n                        return [actions.appActions.GetAnalyticsSuccess({ analytics: apiResponse })];\r\n                    }),\r\n                    catchError((error) => {\r\n                        console.log('ReqGetAnalytics: ', error.message);\r\n                        this.snackbar.open('Failed to get Analytics', 'CLOSE', snackbarConfigs.errorConfig);\r\n                        return [actions.appActions.GetAnalyticsFail()];\r\n                    }),\r\n                );\r\n            }),\r\n        ),\r\n    );\r\n    // #endregion\r\n    //#region ReqGetLotsInDateRange\r\n    ReqGetLotsInDateRange$ = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(actions.appActions.ReqGetLotsInDateRange),\r\n            switchMap(({ dateRange }) => {\r\n                return this.api.getLotsInDateRange(dateRange).pipe(\r\n                    mergeMap((apiResponse) => {\r\n                        return this.generateAndDownloadCSVLots(apiResponse);\r\n                    }),\r\n                    mergeMap(() => {\r\n                        return [actions.appActions.GetLotsInDateRangeSuccess()];\r\n                    }),\r\n                    catchError((error) => {\r\n                        console.log('ReqGetLotsInDateRange: ', error.message);\r\n                        this.snackbar.open('Failed to get Lots', 'CLOSE', snackbarConfigs.errorConfig);\r\n                        return [actions.appActions.GetLotsInDateRangeFail()];\r\n                    }),\r\n                );\r\n            }),\r\n        ),\r\n    );\r\n    // #endregion\r\n    // #endregion\r\n\r\n    //#region ReqGetUsersForVerification\r\n    ReqGetUsersForVerification$ = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(actions.appActions.ReqGetUsersForVerification),\r\n            switchMap(() => {\r\n                return this.authService.getUsersForVerification().pipe(\r\n                    mergeMap((users) => {\r\n                        return [actions.appActions.ReqGetUsersForVerificationSuccess({ users })];\r\n                    }),\r\n                    catchError((error) => {\r\n                        console.log('ReqUpdateUserVerificationStatus: ', error);\r\n                        this.snackbar.open(error, 'CLOSE', snackBarConfigs.errorConfig);\r\n                        return [actions.appActions.ReqGetUsersForVerificationFail()];\r\n                    }),\r\n                );\r\n            }),\r\n        ),\r\n    );\r\n    //#endregion\r\n    //#region ReqEmailVerificationForm\r\n    ReqEmailVerificationFormSuccess$ = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(actions.appActions.ReqEmailVerificationForm),\r\n            switchMap(() => {\r\n                return this.api.sendVerificationFormEmail().pipe(\r\n                    mergeMap(() => {\r\n                        this.snackbar.open(\r\n                            'Successfully Emailed Verification Form',\r\n                            'CLOSE',\r\n                            snackBarConfigs.successConfig,\r\n                        );\r\n                        return [actions.appActions.ReqEmailVerificationFormSuccess()];\r\n                    }),\r\n                    catchError((error) => {\r\n                        console.log('ReqEmailVerificationFormSuccess: ', error);\r\n                        this.snackbar.open(error, 'CLOSE', snackBarConfigs.errorConfig);\r\n                        return [actions.appActions.ReqEmailVerificationFormFail()];\r\n                    }),\r\n                );\r\n            }),\r\n        ),\r\n    );\r\n    //#endregion\r\n\r\n    //#region Helper Functions\r\n    generateAndDownloadCSVLots(apiResponse: Lot[]): string {\r\n        const lots: any = apiResponse.map((lot) => {\r\n            delete lot.id;\r\n            return {\r\n                Name: lot.lotName || '',\r\n                Type: lot.lotType || '',\r\n                Crop: lot.crop?.name || '',\r\n                PriceType: lot.priceType?.name || '',\r\n                Month: lot.month?.name || '',\r\n                FromDate: lot.dateFrom.toLocaleDateString() || '',\r\n                ToDate: lot.dateTo.toLocaleDateString() || '',\r\n                IncoTerm: lot.incoTerm?.name || '',\r\n                DeliveryPoint: lot.deliveryPoint?.name || '',\r\n                Quality: lot.quality?.name || '',\r\n                Quantity: lot.quantity || '',\r\n                Price: lot.price || '',\r\n                PaymentTerm: lot.paymentTerm?.name || '',\r\n                IsPublic: lot.isPublic || '',\r\n                ScoutId: lot.scoutId || '',\r\n                Exchange: lot.exchange?.name || '',\r\n                UnitOfMeasure: lot.quantityMeasure?.name || '',\r\n                SafexOption: lot.safexOption || '',\r\n                TradingEntityId: lot.tradingEntityId || '',\r\n                Packaging: lot.packaging?.name || '',\r\n            };\r\n        });\r\n        downloadFile(lots);\r\n        return 'Download Started';\r\n    }\r\n    //#endregion\r\n\r\n    constructor(\r\n        private actions$: Actions,\r\n        private authService: AuthService,\r\n        private store: Store<fromRoot.State>,\r\n        private api: ApiService,\r\n        private snackbar: MatSnackBar,\r\n    ) {}\r\n}\r\n","import { ReqLogoutAction } from './../authState/auth.actions';\r\nimport { LotMatchFormDataSuccess } from './../entities/match/match.actions';\r\nimport { PriceType, User } from 'src/app/core/models/queryModels';\r\nimport {\r\n    CropGradesSuccess,\r\n    CropMonthsSuccess,\r\n    CropMonthsAndGradesSuccess,\r\n    CropPackagingSuccess,\r\n} from './../crop/crop.actions';\r\nimport { LotFormDataSuccess } from './../entities/lot/lot.actions';\r\nimport { createReducer, Action, on } from '@ngrx/store';\r\nimport { Dictionary } from '@ngrx/entity';\r\nimport * as actions from './app-state.actions';\r\nimport * as authActions from '../authState/auth.actions';\r\nimport { ClearState } from '../authState/auth.actions';\r\nimport { addLoading, removeLoading } from '../helperFunctions';\r\nimport { IdName } from '../../models/queryModels';\r\nimport { ScoutFormDataSuccess } from '../entities/scout/scout.actions';\r\n\r\nexport const appStateFeatureKey = 'appState';\r\n\r\nexport interface State {\r\n    initialLogin: boolean;\r\n    isLoading: boolean;\r\n    persist?: boolean;\r\n    dictLoading: Dictionary<string>;\r\n\r\n    unitsOfMeasure: IdName[];\r\n    incoTerms: IdName[];\r\n    priceTypes: PriceType[];\r\n    paymentTerms: IdName[];\r\n    packaging: IdName[];\r\n    cropPackaging: IdName[];\r\n    cropGrades: IdName[];\r\n    months: IdName[];\r\n\r\n    users: User[];\r\n}\r\n\r\nexport const initialState: State = {\r\n    initialLogin: false,\r\n    persist: true,\r\n    isLoading: false,\r\n    dictLoading: {},\r\n\r\n    unitsOfMeasure: [],\r\n    incoTerms: [],\r\n    priceTypes: [\r\n        { id: 1, name: 'Basis' },\r\n        { id: 2, name: 'Fixed Price' },\r\n    ],\r\n    paymentTerms: [],\r\n    packaging: [],\r\n    cropGrades: [],\r\n    cropPackaging: [],\r\n    months: [],\r\n\r\n    users: [],\r\n};\r\n\r\nconst appStateReducer = createReducer(\r\n    initialState,\r\n    on(actions.ReqToggleIsLoading, (state, { ...payload }) => {\r\n        return { ...state, isLoading: payload.flag };\r\n    }),\r\n    on(authActions.ReqEmailLogin, authActions.ReqEmailRegister, authActions.ReqProviderSignIn, (state) => {\r\n        return { ...state, isLoading: true };\r\n    }),\r\n    on(\r\n        authActions.EmailLoginFail,\r\n        authActions.ProviderSignInFail,\r\n        authActions.EmailRegistrationFail,\r\n        authActions.EmailLoginSuccess,\r\n        authActions.ProviderSignInSuccess,\r\n        authActions.EmailRegisterSuccess,\r\n        (state) => {\r\n            return { ...state, isLoading: false };\r\n        },\r\n    ),\r\n    on(actions.ReqCheckAuthorization, (state, { ...payload }) => {\r\n        return addLoading({ ...state, persist: true }, payload);\r\n    }),\r\n    on(actions.CheckAuthorizationSuccess, actions.CheckAuthorizationFail, (state, { ...payload }) => {\r\n        return removeLoading({ ...state, persist: false }, payload);\r\n    }),\r\n    on(ScoutFormDataSuccess, (state, payload) => {\r\n        return { ...state, unitsOfMeasure: payload.unitsOfMeasure };\r\n    }),\r\n    on(LotFormDataSuccess, LotMatchFormDataSuccess, (state, payload) => {\r\n        return {\r\n            ...state,\r\n            unitsOfMeasure: payload.unitsOfMeasure,\r\n            incoTerms: payload.incoTerms,\r\n            paymentTerms: payload.paymentOptions,\r\n        };\r\n    }),\r\n    on(CropGradesSuccess, (state, payload) => {\r\n        return { ...state, cropGrades: payload.grades };\r\n    }),\r\n    on(CropMonthsSuccess, (state, payload) => {\r\n        return { ...state, months: payload.safexMonths };\r\n    }),\r\n    on(CropMonthsAndGradesSuccess, (state, payload) => {\r\n        return { ...state, months: payload.safexMonths, cropGrades: payload.grades };\r\n    }),\r\n    on(CropPackagingSuccess, (state, payload) => {\r\n        return { ...state, cropPackaging: payload.cropPackaging };\r\n    }),\r\n    on(actions.ReqGetUsersForVerificationSuccess, (state, payload) => {\r\n        return { ...state, users: payload.users };\r\n    }),\r\n    on(ClearState, ReqLogoutAction, () => {\r\n        return { ...initialState, persist: false };\r\n    }),\r\n);\r\n\r\nexport function reducer(state = initialState, action: Action): State {\r\n    return appStateReducer(state, action);\r\n}\r\n","import { IdName, PriceType } from './../../models/queryModels';\r\nimport { createFeatureSelector, createSelector } from '@ngrx/store';\r\nimport * as fromApp from './app-state.reducer';\r\nimport { environment } from 'src/environments/environment.prod';\r\n\r\nexport const selectAppState = createFeatureSelector<fromApp.State>(fromApp.appStateFeatureKey);\r\n\r\nexport const getCropPackaging = createSelector(selectAppState, (appState) => {\r\n    return appState.cropPackaging || [];\r\n});\r\n\r\nexport const getCropGrades = createSelector(selectAppState, (appSate) => {\r\n    return appSate.cropGrades.length\r\n        ? appSate.cropGrades\r\n        : [\r\n              {\r\n                  id: 0,\r\n                  name: 'Standard',\r\n              },\r\n          ];\r\n});\r\n\r\nexport const getFormData = createSelector(selectAppState, (appState) => {\r\n    const unitsOfMeasure: IdName[] = appState.unitsOfMeasure || [];\r\n    const incoTerms: IdName[] = appState.incoTerms || [];\r\n    const packaging: IdName[] = appState.packaging || [];\r\n    const paymentTerms: IdName[] = appState.paymentTerms || [];\r\n    const priceTypes: IdName[] = appState.priceTypes || [];\r\n    const safexMonths: IdName[] = appState.months || [];\r\n\r\n    return { unitsOfMeasure, incoTerms, packaging, paymentTerms, priceTypes, safexMonths };\r\n});\r\n\r\nexport const getIncoTermsByCropId = createSelector(\r\n    selectAppState,\r\n    (appState: fromApp.State, props: { cropId: number }) => {\r\n        const roughageBales: number[] = [...environment.ROUGHAGE_BALES_CROP_IDS];\r\n        if (props.cropId) {\r\n            return roughageBales.includes(props.cropId)\r\n                ? appState.incoTerms.filter((incoTerm) =>\r\n                      environment.ROUGHAGE_BALES_INCO_TERM_IDS.includes(incoTerm.id),\r\n                  )\r\n                : appState.incoTerms;\r\n        } else {\r\n            return appState.incoTerms || [];\r\n        }\r\n    },\r\n);\r\n\r\nexport const getUnitsOfMeasureByCropId = createSelector(\r\n    selectAppState,\r\n    (appState: fromApp.State, props: { cropId: number }) => {\r\n        const filterCropIds: number[] = [...environment.STRAW_CROP_IDS, ...environment.HAY_CROP_IDS];\r\n        if (filterCropIds.includes(props.cropId)) {\r\n            return appState.unitsOfMeasure.filter((unitOfMeasure) =>\r\n                environment.STRAW_HAY_UNIT_OF_MEASURE_IDS.includes(unitOfMeasure.id),\r\n            );\r\n        } else {\r\n            return (\r\n                appState.unitsOfMeasure.filter((unitOfMeasure) => unitOfMeasure.id === environment.DEFAULT_UOM_ID) || []\r\n            );\r\n        }\r\n    },\r\n);\r\n\r\nexport const getUsers = createSelector(selectAppState, (appState) => {\r\n    return appState.users;\r\n});\r\n","import * as appActions from './app-state.actions';\r\nimport * as appSelectors from './app-state.selectors';\r\n\r\nimport { appStateFeatureKey, State as AppState, reducer as authReducer } from './app-state.reducer';\r\n\r\nexport { appActions, appSelectors, appStateFeatureKey, AppState, authReducer };\r\n","import { UserVerification, Verification } from './../../models/queryModels';\r\nimport { AdditionalEntityDetail, UserWithEntities, User, Entity } from 'src/app/core/models/queryModels';\r\nimport { createAction, props } from '@ngrx/store';\r\nimport { SignUpData } from '../../models/viewModels';\r\n\r\n// #region Email Login\r\nexport const ReqEmailLogin = createAction(\r\n    '[Login Page] ReqEmailLogin',\r\n    props<{ email: string; password: string; executedTime: number }>(),\r\n);\r\nexport const EmailLoginSuccess = createAction(\r\n    '[ReqEmailLogin] [SCU] EmailLoginSuccess',\r\n    props<{ executedTime: number }>(),\r\n);\r\nexport const EmailLoginFail = createAction('[ReqEmailLogin] EmailLoginFail', props<{ executedTime: number }>());\r\n\r\n// #endregion\r\n\r\n// #region Email registration\r\nexport const ReqEmailRegister = createAction(\r\n    '[Register Page] ReqEmailRegister',\r\n    props<{ email: string; password: string; signUpData: SignUpData; executedTime: number }>(),\r\n);\r\nexport const EmailRegisterSuccess = createAction(\r\n    '[ReqEmailRegister] EmailRegisterSuccess',\r\n    props<{ executedTime: number }>(),\r\n);\r\nexport const EmailRegistrationFail = createAction(\r\n    '[ReqEmailRegistration] EmailRegistrationFail',\r\n    props<{ executedTime: number }>(),\r\n);\r\n\r\nexport const SaveAdditionalEntityDetails = createAction(\r\n    '[Additional Info Modal] SaveAdditionalEntityDetails',\r\n    props<{ additionalEntityDetails: AdditionalEntityDetail }>(),\r\n);\r\nexport const SaveAdditionalEntityDetailsSuccess = createAction(\r\n    '[Additional Info Modal] SaveAdditionalEntityDetailsSuccess',\r\n);\r\nexport const SaveAdditionalEntityDetailsFail = createAction('[Additional Info Modal] SaveAdditionalEntityDetailsFail');\r\n\r\n// #endregion\r\n\r\n// #region Provider Sign In\r\nexport const ReqProviderSignIn = createAction(\r\n    '[Register Page] ReqProviderSignIn',\r\n    props<{ executedTime: number; platform: string }>(),\r\n);\r\nexport const ProviderSignInFail = createAction(\r\n    '[ReqProviderSignIn] ProviderSignInFail',\r\n    props<{ executedTime: number }>(),\r\n);\r\nexport const ProviderSignInSuccess = createAction(\r\n    '[ReqProviderSignIn] ProviderSignInSuccess',\r\n    props<{ executedTime: number }>(),\r\n);\r\n\r\n// #endregion\r\n\r\n// #region ReqPasswordReset\r\nexport const ReqPasswordReset = createAction('[Login Page] [NF] ReqPasswordReset', props<{ email: string }>());\r\n// #endregion\r\n\r\n//#region UpdateUserFromInit\r\nexport const UpdateUserFromInit = createAction(\r\n    '[ReqLinkUser] [SCU] UpdateUserFromInit',\r\n    props<{ user: UserWithEntities; executedTime: number }>(),\r\n);\r\n//#endregion\r\n\r\n//#region ReqUpdateUserDetails\r\nexport const ReqUpdateUserDetails = createAction(\r\n    '[User Tab / Verification Page] ReqUpdateUserDetails',\r\n    props<{ user: User; updateSQL?: boolean }>(),\r\n);\r\nexport const ReqUpdateUserDetailsFail = createAction('[ReqUpdateUserDetails] ReqUpdateUserDetailsFail');\r\nexport const ReqUpdateUserDetailsSuccess = createAction(\r\n    '[ReqUpdateUserDetails] ReqUpdateUserDetailsSuccess',\r\n    props<{ user: User }>(),\r\n);\r\n//#endregion\r\n\r\n// #region ReqSubscriptionStatus\r\nexport const ReqSubscriptionStatus = createAction('[GetUserFromAuthorizationSuccess] [NF] ReqSubscriptionStatus');\r\n//#endregion\r\n\r\n//#region ReqUpdateUserVerificationStatus\r\nexport const ReqUpdateUserVerificationStatus = createAction(\r\n    '[Admin] ReqUpdateUserVerificationStatus',\r\n    props<{ userVerifications: UserVerification[]; showSnackBar: boolean }>(),\r\n);\r\nexport const ReqUpdateUserVerificationStatusFail = createAction(\r\n    '[ReqUpdateUserVerificationStatus] ReqUpdateUserVerificationStatusFail',\r\n);\r\nexport const ReqUpdateUserVerificationStatusSuccess = createAction(\r\n    '[ReqUpdateUserVerificationStatus] ReqUpdateUserVerificationStatusSuccess',\r\n    props<{ verification: Verification }>(),\r\n);\r\n//#endregion\r\n\r\n// #region ReqGetUserFromAuthorization\r\nexport const ReqGetUserFromAuthorization = createAction(\r\n    '[ReqCheckAuthorization] [SCU] ReqGetUserFromAuthorization',\r\n    props<{ uid: string }>(),\r\n);\r\nexport const GetUserFromAuthorizationFail = createAction('[ReqGetUserFromAuthorization] GetUserFromAuthorizationFail');\r\nexport const GetUserFromAuthorizationSuccess = createAction(\r\n    '[ReqGetUserFromAuthorization] GetUserFromAuthorizationSuccess',\r\n    props<{ user: UserWithEntities }>(),\r\n);\r\n//#endregion\r\n\r\n// #region ReqEntityDisplayInfo\r\nexport const ReqEntityDisplayInfo = createAction('[Profile Page] ReqEntityDisplayInfo');\r\nexport const EntityDisplayInfoFail = createAction('[ReqEntityDisplayInfo] EntityDisplayInfoFail');\r\nexport const EntityDisplayInfoSuccess = createAction(\r\n    '[ReqEntityDisplayInfo] EntityDisplayInfoSuccess',\r\n    props<{ additionalEntityDetails: AdditionalEntityDetail }>(),\r\n);\r\n\r\n// #endregion\r\n\r\n// #region ReqEntityDisplayInfo\r\nexport const ReqUpdateEntityInfo = createAction(\r\n    '[Profile Page] ReqUpdateEntityInfo',\r\n    props<{ additionalEntityDetails: AdditionalEntityDetail }>(),\r\n);\r\nexport const UpdateEntityInfoFail = createAction('[ReqUpdateEntityInfo] UpdateEntityInfoFail');\r\nexport const UpdateEntityInfoSuccess = createAction(\r\n    '[ReqUpdateEntityInfo] UpdateEntityInfoSuccess',\r\n    props<{ additionalEntityDetails: AdditionalEntityDetail }>(),\r\n);\r\n// #endregion\r\n\r\n// #region ReqDeleteAccountEmail\r\nexport const ReqDeleteAccountEmail = createAction('[Profile Page] ReqDeleteAccountEmail', props<{ user: User }>());\r\nexport const ReqDeleteAccountEmailFail = createAction('[ReqDeleteAccountEmail] ReqDeleteAccountEmailFail');\r\nexport const ReqDeleteAccountEmailSuccess = createAction('[ReqDeleteAccountEmail] ReqDeleteAccountEmailSuccess');\r\n// #endregion\r\n\r\n// #region Get Client Entities\r\nexport const ReqGetClientEntities = createAction(\r\n    '[ Lot Component ] ReqGetClientEntities',\r\n    props<{ clientUid: string }>(),\r\n);\r\nexport const ReqGetClientEntitiesFail = createAction('[ ReqGetClientEntities ] ReqGetClientEntitiesFail');\r\nexport const ReqGetClientEntitiesSuccess = createAction(\r\n    '[ ReqGetClientEntities ] ReqGetClientEntitiesSuccess',\r\n    props<{ user: UserWithEntities }>(),\r\n);\r\n// #endregion\r\n\r\n// #region Clear Client Entity\r\nexport const ClearClientEntities = createAction('[Broker Dashboard] [NF] ClearClientEntity');\r\n// #endregion\r\n\r\n// #region Logout\r\nexport const ReqLogoutAction = createAction('[Any] [NF] Logout');\r\n\r\nexport const ClearState = createAction('[ALL] ClearState');\r\n// #endregion\r\n","import { cloneDeep } from 'lodash';\r\nimport { ApiService } from 'src/app/core/services/api/api.service';\r\nimport { MatLegacyDialog as MatDialog } from '@angular/material/legacy-dialog';\r\nimport { AdditionalEntityDetail } from './../../models/queryModels';\r\nimport { AdditionalInfoModalComponent } from './../../../features/shared/components/additional-info-modal/additional-info-modal.component';\r\nimport { SubscriptionService } from '../../services/subscription/subscription.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { AuthService } from '../../services/auth/auth.service';\r\nimport { Actions, ofType, createEffect } from '@ngrx/effects';\r\nimport * as actions from 'src/app/core/helpers/index.actions';\r\nimport { of, combineLatest, EMPTY, from } from 'rxjs';\r\nimport { Store, select } from '@ngrx/store';\r\nimport * as fromRoot from '../reducers/index';\r\nimport { mergeMap, catchError, switchMap, takeUntil, take, tap } from 'rxjs/operators';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport * as snackBarConfigs from '../../helpers/snackbar';\r\nimport { Capacitor } from '@capacitor/core';\r\nimport { Purchases } from '@awesome-cordova-plugins/purchases/ngx';\r\nimport {\r\n    matchRCIdentifierToVerificationIdHelper,\r\n    transformSingleUsersForVerificationHelper,\r\n} from 'src/app/core/helpers/helperFunctions';\r\n\r\n@Injectable()\r\nexport class AuthEffects {\r\n    // #region ReqEmailLogin\r\n    ReqEmailLogin$ = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(actions.authActions.ReqEmailLogin),\r\n            mergeMap(({ email, password, executedTime }) => {\r\n                return from(this.authService.emailLogin(email, password)).pipe(\r\n                    take(1),\r\n                    mergeMap(() => {\r\n                        return [actions.authActions.EmailLoginSuccess({ executedTime })];\r\n                    }),\r\n                    catchError((error) => {\r\n                        this.snackbar.open(this.constructErrorMessage(error), 'CLOSE', snackBarConfigs.errorConfig);\r\n                        console.log('ReqEmailLogin: ', error);\r\n                        return [actions.authActions.EmailLoginFail({ executedTime })];\r\n                    }),\r\n                );\r\n            }),\r\n        ),\r\n    );\r\n    // #endregion\r\n    // #region ReqProviderSignIn\r\n    ReqProviderSignIn$ = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(actions.authActions.ReqProviderSignIn),\r\n            mergeMap(({ executedTime, platform }) => {\r\n                return (\r\n                    platform === 'web'\r\n                        ? from(this.authService.providerLogin())\r\n                        : from(this.authService.nativeProviderLogin())\r\n                ).pipe(\r\n                    take(1),\r\n                    mergeMap(() => {\r\n                        return [actions.authActions.ProviderSignInSuccess({ executedTime })];\r\n                    }),\r\n                    catchError((error) => {\r\n                        this.snackbar.open(this.constructErrorMessage(error), 'CLOSE', snackBarConfigs.errorConfig);\r\n                        console.log('ReqProviderSignIn: ', error);\r\n                        return [actions.authActions.ProviderSignInFail({ executedTime })];\r\n                    }),\r\n                );\r\n            }),\r\n        ),\r\n    );\r\n    // #endregion\r\n\r\n    // #region Registration\r\n    ReqEmailRegister$ = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(actions.authActions.ReqEmailRegister),\r\n            mergeMap(({ executedTime, email, password, signUpData }) => {\r\n                return from(this.authService.emailSignUp(email, password, signUpData)).pipe(\r\n                    take(1),\r\n                    mergeMap(() => {\r\n                        return [actions.authActions.EmailRegisterSuccess({ executedTime })];\r\n                    }),\r\n                    catchError((error) => {\r\n                        console.log('ReqEmailRegister: ', error);\r\n                        this.snackbar.open(this.constructErrorMessage(error), 'CLOSE', snackBarConfigs.errorConfig);\r\n                        return [actions.authActions.EmailRegistrationFail({ executedTime })];\r\n                    }),\r\n                );\r\n            }),\r\n        ),\r\n    );\r\n    // #endregion\r\n\r\n    // #region ReqPasswordReset\r\n    ReqPasswordReset = createEffect(\r\n        () =>\r\n            this.actions$.pipe(\r\n                ofType(actions.authActions.ReqPasswordReset),\r\n                mergeMap((payload) => {\r\n                    return combineLatest([this.authService.resetPassword(payload.email), of(payload)]);\r\n                }),\r\n                switchMap(([, _payload]) => {\r\n                    this.snackbar.open(\r\n                        `Successfully sent password reset email to ${_payload.email}.`,\r\n                        'CLOSE',\r\n                        snackBarConfigs.successConfig,\r\n                    );\r\n                    return EMPTY;\r\n                }),\r\n                catchError((error) => {\r\n                    console.log('ReqPasswordReset: ', error.message);\r\n                    return EMPTY;\r\n                }),\r\n            ),\r\n        { dispatch: false },\r\n    );\r\n    // #endregion\r\n\r\n    // #region ReqLogoutAction\r\n    ReqLogoutAction$ = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(actions.authActions.ReqLogoutAction),\r\n            mergeMap((payload) => {\r\n                return of(payload).pipe(\r\n                    mergeMap((_payload) => {\r\n                        return this.authService.logout();\r\n                    }),\r\n                    mergeMap(() => {\r\n                        this.subService.unsubscribeComponent$.next();\r\n                        localStorage.clear();\r\n                        return of('disposable').pipe(\r\n                            switchMap(() => {\r\n                                return [actions.authActions.ClearState()];\r\n                            }),\r\n                        );\r\n                    }),\r\n                    catchError((error) => {\r\n                        console.log('ReqLogoutAction: ', error.message);\r\n                        return [];\r\n                    }),\r\n                );\r\n            }),\r\n        ),\r\n    );\r\n    // #endregion\r\n\r\n    // #region ReqGetUserFromAuthorization\r\n    ReqGetUserFromAuthorization$ = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(actions.authActions.ReqGetUserFromAuthorization),\r\n            mergeMap((payload) => {\r\n                return this.authService.getUser(payload.uid).pipe(\r\n                    mergeMap((user) => {\r\n                        return [actions.authActions.GetUserFromAuthorizationSuccess({ user })];\r\n                    }),\r\n                    catchError((error) => {\r\n                        console.log('ReqGetUserFromAuthorization: ', error.message);\r\n                        return [actions.authActions.GetUserFromAuthorizationFail()];\r\n                    }),\r\n                );\r\n            }),\r\n        ),\r\n    );\r\n    // #endregion\r\n\r\n    // #region ReqGetUserFromAuthorization\r\n    ReqGetClientEntities$ = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(actions.authActions.ReqGetClientEntities),\r\n            mergeMap((payload) => {\r\n                return this.authService.getUser(payload.clientUid, true).pipe(\r\n                    mergeMap((user) => {\r\n                        return [actions.authActions.ReqGetClientEntitiesSuccess({ user })];\r\n                    }),\r\n                    catchError((error) => {\r\n                        console.log('ReqGetClientEntitiesFail: ', error.message);\r\n                        return [actions.authActions.ReqGetClientEntitiesFail()];\r\n                    }),\r\n                );\r\n            }),\r\n        ),\r\n    );\r\n    // #endregion\r\n\r\n    // #region saveAdditionalEntityDetails\r\n    saveAdditionalEntityDetails$ = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(actions.authActions.GetUserFromAuthorizationSuccess),\r\n            mergeMap((user) => {\r\n                return this.store.pipe(\r\n                    select(fromRoot.authSelectors.getUserEntities),\r\n                    take(1),\r\n                    switchMap((entities) => {\r\n                        return this.api.getEntityById(entities[0].id);\r\n                    }),\r\n                    switchMap((entity) => {\r\n                        return combineLatest([of(user), of(entity.id)]);\r\n                    }),\r\n                );\r\n            }),\r\n            mergeMap(([{ user }, entityId]) => {\r\n                if (!user.hasB_BBEE) {\r\n                    const dialogRef = this.dialog.open<AdditionalInfoModalComponent, null, AdditionalEntityDetail>(\r\n                        AdditionalInfoModalComponent,\r\n                        { disableClose: true, panelClass: 'g-modal-container' },\r\n                    );\r\n                    return combineLatest([dialogRef.afterClosed(), of(entityId)]);\r\n                } else {\r\n                    return combineLatest([of(null as AdditionalEntityDetail), of(null as number)]);\r\n                }\r\n            }),\r\n            mergeMap(([additionalDetails, entityId]) => {\r\n                if (additionalDetails && entityId) {\r\n                    const additionalEntityDetails = this.generateAdditionalDetailsWithTradingEntity(\r\n                        additionalDetails,\r\n                        entityId,\r\n                    );\r\n                    return this.api.saveAdditionalEntityDetails(additionalEntityDetails);\r\n                }\r\n                return of(null);\r\n            }),\r\n            mergeMap((authResult) => {\r\n                if (authResult) {\r\n                    this.snackbar.open('Successfully Saved Equity Information', 'CLOSE', snackBarConfigs.successConfig);\r\n                    return [actions.authActions.SaveAdditionalEntityDetailsSuccess()];\r\n                }\r\n                return [actions.authActions.SaveAdditionalEntityDetailsSuccess()];\r\n            }),\r\n            catchError((error) => {\r\n                console.log('saveAdditionalEntityDetails: ', error.message);\r\n                this.snackbar.open(\r\n                    'An Error Occurred When Attempting To Save Equity Information',\r\n                    'CLOSE',\r\n                    snackBarConfigs.errorConfig,\r\n                );\r\n                return [actions.authActions.SaveAdditionalEntityDetailsFail()];\r\n            }),\r\n        ),\r\n    );\r\n    // #endregion\r\n\r\n    // #region ReqSubscriptionStatus\r\n    ReqSubscriptionStatus$ = createEffect(\r\n        () =>\r\n            this.actions$.pipe(\r\n                ofType(actions.authActions.GetUserFromAuthorizationSuccess),\r\n                mergeMap((user) => {\r\n                    if (Capacitor.getPlatform() !== 'web') {\r\n                        if (user.user.verification?.verificationExpires) {\r\n                            this.purchases.logIn(user.user.uid).then(\r\n                                ({ customerInfo, created }) => {\r\n                                    if (!created) {\r\n                                        let latestExpiryDate = customerInfo.latestExpirationDate;\r\n                                        if (new Date(latestExpiryDate) > new Date()) {\r\n                                            const verificationId = matchRCIdentifierToVerificationIdHelper(\r\n                                                customerInfo?.activeSubscriptions[0],\r\n                                            );\r\n                                            this.store.dispatch(\r\n                                                actions.authActions.ReqUpdateUserVerificationStatus({\r\n                                                    userVerifications: [\r\n                                                        transformSingleUsersForVerificationHelper(\r\n                                                            verificationId,\r\n                                                            user.user,\r\n                                                            new Date(latestExpiryDate).getTime(),\r\n                                                        ),\r\n                                                    ],\r\n                                                    showSnackBar: false,\r\n                                                }),\r\n                                            );\r\n                                        } else {\r\n                                            this.store.dispatch(\r\n                                                actions.authActions.ReqUpdateUserVerificationStatus({\r\n                                                    userVerifications: [\r\n                                                        transformSingleUsersForVerificationHelper(6, user.user, null),\r\n                                                    ],\r\n                                                    showSnackBar: false,\r\n                                                }),\r\n                                            );\r\n                                        }\r\n                                    }\r\n                                },\r\n                                (error) => {\r\n                                    this.snackbar.open(\r\n                                        'An Error occurred updating your verification status.',\r\n                                        'CLOSE',\r\n                                        snackBarConfigs.errorConfig,\r\n                                    );\r\n                                    console.log('RevenueCat Subscription Check Error: ', error);\r\n                                },\r\n                            );\r\n                        }\r\n                    }\r\n                    return EMPTY;\r\n                }),\r\n                catchError((error) => {\r\n                    console.log('ReqSubscriptionStatus: ', error.message);\r\n                    this.snackbar.open(\r\n                        'An Error Occurred When Attempting To check verification status',\r\n                        'CLOSE',\r\n                        snackBarConfigs.errorConfig,\r\n                    );\r\n                    return EMPTY;\r\n                }),\r\n            ),\r\n        { dispatch: false },\r\n    );\r\n    // #endregion\r\n\r\n    // #region ReqEntityDisplayInfo\r\n    ReqEntityDisplayInfo$ = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(actions.authActions.ReqEntityDisplayInfo),\r\n            switchMap(() => {\r\n                return this.store.pipe(\r\n                    select(fromRoot.authSelectors.getUserEntities),\r\n                    take(1),\r\n                    switchMap((entities) => {\r\n                        return this.api.getAdditionalEntityDetails(entities[0].id);\r\n                    }),\r\n                    switchMap((additionalEntityDetails) => {\r\n                        return [actions.authActions.EntityDisplayInfoSuccess({ additionalEntityDetails })];\r\n                    }),\r\n                    catchError((error) => {\r\n                        console.log({ ReqEntityDisplayInfo: error });\r\n                        return [actions.authActions.EntityDisplayInfoFail()];\r\n                    }),\r\n                );\r\n            }),\r\n        ),\r\n    );\r\n    // #endregion\r\n\r\n    // #region ReqUpdateEntityInfo\r\n    ReqUpdateEntityInfo$ = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(actions.authActions.ReqUpdateEntityInfo),\r\n            switchMap((payload) => {\r\n                return this.api.saveAdditionalEntityDetails(payload.additionalEntityDetails).pipe(\r\n                    switchMap((additionalEntityDetail) => {\r\n                        this.snackbar.open(\r\n                            'Successfully Updated Entity Information',\r\n                            'CLOSE',\r\n                            snackBarConfigs.successConfig,\r\n                        );\r\n                        return [\r\n                            actions.authActions.UpdateEntityInfoSuccess({\r\n                                additionalEntityDetails: additionalEntityDetail,\r\n                            }),\r\n                        ];\r\n                    }),\r\n                    catchError((error) => {\r\n                        console.log('ReqUpdateEntityInfo: ', error.message);\r\n                        this.snackbar.open(\r\n                            'An Error Occurred When Attempting To Update Equity Information',\r\n                            'CLOSE',\r\n                            snackBarConfigs.errorConfig,\r\n                        );\r\n                        return [actions.authActions.UpdateEntityInfoFail()];\r\n                    }),\r\n                );\r\n            }),\r\n        ),\r\n    );\r\n    // #endregion\r\n\r\n    //#region ReqUpdateUserVerificationStatus\r\n    ReqUpdateUserVerificationStatus$ = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(actions.authActions.ReqUpdateUserVerificationStatus),\r\n            switchMap(({ userVerifications, showSnackBar }) => {\r\n                return [\r\n                    {\r\n                        verifyResponse: this.authService.verifyUsers(userVerifications),\r\n                        userVerification: userVerifications,\r\n                        showSnackBar: showSnackBar,\r\n                    },\r\n                ];\r\n            }),\r\n            switchMap((verificationResponse) => {\r\n                verificationResponse.verifyResponse.then((response) => {\r\n                    if (verificationResponse.showSnackBar) {\r\n                        const failed: boolean = response.includes('Failed');\r\n                        this.snackbar.open(\r\n                            response,\r\n                            'CLOSE',\r\n                            failed ? snackBarConfigs.errorConfig : snackBarConfigs.successConfig,\r\n                        );\r\n                    }\r\n                });\r\n\r\n                return [\r\n                    actions.authActions.ReqUpdateUserVerificationStatusSuccess({\r\n                        verification: verificationResponse.userVerification[0].verification,\r\n                    }),\r\n                ];\r\n            }),\r\n            catchError((error) => {\r\n                console.log('ReqUpdateUserVerificationStatus: ', error);\r\n                this.snackbar.open(error, 'CLOSE', snackBarConfigs.errorConfig);\r\n                return [actions.authActions.ReqUpdateUserVerificationStatusFail()];\r\n            }),\r\n        ),\r\n    );\r\n    //#endregion\r\n\r\n    //#region ReqUpdateUserDetails\r\n    ReqUpdateUserDetails$ = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(actions.authActions.ReqUpdateUserDetails),\r\n            switchMap(({ user, updateSQL }) => {\r\n                return of(this.authService.updateUserData(user)).pipe(\r\n                    switchMap((res) => {\r\n                        if (!updateSQL) return res;\r\n                        return this.api.updateUser({ uid: user.uid, phoneNumber: user.phone, email: user.email });\r\n                    }),\r\n                    switchMap(() => {\r\n                        if (updateSQL)\r\n                            this.snackbar.open(\r\n                                'Successfully Updated User Details',\r\n                                'CLOSE',\r\n                                snackBarConfigs.successConfig,\r\n                            );\r\n                        return [actions.authActions.ReqUpdateUserDetailsSuccess({ user })];\r\n                    }),\r\n                    catchError((error) => {\r\n                        console.log('ReqUpdateUserDetails: ', error);\r\n                        if (updateSQL)\r\n                            this.snackbar.open('Failed To Update User Details', 'CLOSE', snackBarConfigs.errorConfig);\r\n                        return [actions.authActions.ReqUpdateUserDetailsFail()];\r\n                    }),\r\n                );\r\n            }),\r\n        ),\r\n    );\r\n    //#endregion\r\n\r\n    //#region ReqDeleteAccountEmail\r\n    ReqDeleteAccountEmail$ = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(actions.authActions.ReqDeleteAccountEmail),\r\n            switchMap(({ user }) => {\r\n                return this.api.deleteAccountRequest(user).pipe(\r\n                    mergeMap(() => {\r\n                        this.snackbar.open('Account Deletion Email sent.', 'CLOSE', snackBarConfigs.successConfig);\r\n                        return [actions.authActions.ReqDeleteAccountEmailSuccess()];\r\n                    }),\r\n                    catchError((error) => {\r\n                        console.log('ReqDeleteAccountEmail: ', error.message);\r\n                        this.snackbar.open(\r\n                            'Failed To send deletion email, please try again.',\r\n                            'CLOSE',\r\n                            snackBarConfigs.errorConfig,\r\n                        );\r\n                        return [actions.authActions.ReqDeleteAccountEmailFail()];\r\n                    }),\r\n                );\r\n            }),\r\n        ),\r\n    );\r\n    //#endregion\r\n\r\n    // #region Helper Functions\r\n\r\n    generateAdditionalDetailsWithTradingEntity(additionalDetails: AdditionalEntityDetail, entityId: number) {\r\n        const additionalDetailsWithTradingEntity: AdditionalEntityDetail = {\r\n            legalEntityName: additionalDetails.legalEntityName,\r\n            exFarm: additionalDetails.exFarm,\r\n            bbbeeRating: +additionalDetails.bbbeeRating,\r\n            entityId: entityId,\r\n            email: additionalDetails.email,\r\n        };\r\n        return additionalDetailsWithTradingEntity;\r\n    }\r\n\r\n    constructErrorMessage(code: string) {\r\n        let message = '';\r\n\r\n        switch (code) {\r\n            case 'auth/email-already-exists':\r\n            case 'auth/email-already-in-use':\r\n                message = 'The provided email is already in use. Please sign in or reset your password.';\r\n\r\n                break;\r\n            case 'auth/wrong-password':\r\n                message = 'The email or password is incorrect. Please try again.';\r\n\r\n                break;\r\n            case 'auth/popup-closed-by-user':\r\n                message = 'Login has been cancelled by the user.';\r\n                break;\r\n            case 'auth/popup-blocked':\r\n                message = 'The login popup has been blocked. Please allow popups to continue.';\r\n                break;\r\n            case 'auth/cancelled-popup-request':\r\n                message = 'The login request has been cancelled.';\r\n                break;\r\n            case 'auth/timeout':\r\n                message = 'The action took too long. Please check your network connection and try again.';\r\n                break;\r\n            case 'auth/account-exists-with-different-credential':\r\n                message = 'This account already exists in our system.';\r\n                break;\r\n            case 'auth/too-many-requests':\r\n                message = 'Too many incorrect attempts have been made. Please try again in 1 minute.';\r\n                break;\r\n            case 'auth/invalid-email':\r\n                message = 'Please provide a full valid email address.';\r\n                break;\r\n            case 'auth/user-not-found':\r\n                message = 'There is no user with the provided credentials.';\r\n                break;\r\n            case 'auth/user-disabled':\r\n                message = 'This user account has been disabled by the developers.';\r\n                break;\r\n            case 'auth/signed-in':\r\n                message = 'Please log out to register a new account.';\r\n                break;\r\n            case 'auth/operation-not-allowed':\r\n                message = 'This feature has not been enabled yet. Please use one of the other methods to login.';\r\n                break;\r\n            default:\r\n                console.log({ code });\r\n                if (code.length < 15) {\r\n                    message = 'We ran into an authentication error.\\nPlease try again.';\r\n                } else {\r\n                    message = 'An unexpected error has occurred and your action was cancelled. Please try again. ';\r\n                }\r\n                break;\r\n        }\r\n\r\n        return message;\r\n    }\r\n    // #endregion\r\n\r\n    constructor(\r\n        private actions$: Actions,\r\n        private snackbar: MatSnackBar,\r\n        private authService: AuthService,\r\n        private store: Store<fromRoot.State>,\r\n        private subService: SubscriptionService,\r\n        private api: ApiService,\r\n        private dialog: MatDialog,\r\n        private purchases: Purchases,\r\n    ) {}\r\n}\r\n","import { AdditionalEntityDetail, User, Entity } from './../../models/queryModels';\r\nimport { cloneDeep } from 'lodash';\r\nimport { Dictionary } from '@ngrx/entity';\r\nimport * as actions from './auth.actions';\r\nimport { Action, createReducer, on } from '@ngrx/store';\r\nimport { getStateData, addLoading, removeLoading, saveStateData } from '../helperFunctions';\r\n\r\nexport const authFeatureKey = 'auth';\r\n\r\nexport interface State {\r\n    user?: User;\r\n    entities?: Entity[];\r\n    additionalEntityDetails: AdditionalEntityDetail;\r\n    dictLoading: Dictionary<string>;\r\n}\r\n\r\nconst initialState: State = getInitialState();\r\n\r\nfunction getInitialState() {\r\n    const initState = getStateData<State>(authFeatureKey);\r\n\r\n    return initState;\r\n}\r\n\r\nconst authReducer = createReducer(\r\n    initialState,\r\n    on(actions.ReqEmailLogin, actions.ReqEmailRegister, actions.ReqProviderSignIn, (state, { ...payload }) => {\r\n        return addLoading<State>(state, payload);\r\n    }),\r\n    on(actions.UpdateUserFromInit, actions.GetUserFromAuthorizationSuccess, (state, { ...payload }) => {\r\n        const { entities, ...user } = payload.user;\r\n        let newState = { ...state, user, entities };\r\n        return cloneDeep(newState);\r\n    }),\r\n    on(actions.ReqUpdateUserDetailsSuccess, (state, { ...payload }) => {\r\n        const user = payload.user;\r\n        return { ...state, user };\r\n    }),\r\n    on(actions.ReqUpdateUserVerificationStatusSuccess, (state, { ...payload }) => {\r\n        let userCopy = cloneDeep(state.user);\r\n        const user = { ...userCopy, verification: payload.verification };\r\n        return { ...state, user };\r\n    }),\r\n    on(\r\n        actions.EmailLoginSuccess,\r\n        actions.EmailRegisterSuccess,\r\n        actions.ProviderSignInSuccess,\r\n        (state, { ...payload }) => {\r\n            let newState = removeLoading(state, payload);\r\n            return newState;\r\n        },\r\n    ),\r\n    on(actions.EntityDisplayInfoSuccess, actions.UpdateEntityInfoSuccess, (state, { ...payload }) => {\r\n        return { ...state, additionalEntityDetails: payload.additionalEntityDetails };\r\n    }),\r\n    on(actions.EmailRegistrationFail, actions.ProviderSignInFail, actions.EmailLoginFail, (state, { ...payload }) => {\r\n        return removeLoading(state, payload);\r\n    }),\r\n    on(actions.ReqLogoutAction, () => {\r\n        return initialState;\r\n    }),\r\n    on(actions.ReqGetClientEntitiesSuccess, (state, { ...payload }) => {\r\n        return { ...state, entities: payload.user.entities };\r\n    }),\r\n    on(actions.ClearClientEntities, (state) => {\r\n        return { ...state, entities: [] };\r\n    }),\r\n);\r\n\r\nexport function reducer(state = initialState, action: Action): State {\r\n    return authReducer(state, action);\r\n}\r\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\r\nimport { User } from '../../models/queryModels';\r\nimport * as fromAuth from './auth.reducer';\r\n\r\nexport const getAuthState = createFeatureSelector<fromAuth.State>(fromAuth.authFeatureKey);\r\n\r\n// #region getUser\r\n\r\nexport const getUser = createSelector(getAuthState, (authState) => {\r\n    return authState?.user;\r\n});\r\n\r\n// #endregion\r\n\r\n// #region getUserEntities\r\n\r\nexport const getUserEntities = createSelector(getAuthState, (authState) => {\r\n    return authState?.entities || [];\r\n});\r\n\r\n// #endregion\r\n\r\n// #region getAdditionalEntityDetails\r\n\r\nexport const getAdditionalEntityDetails = createSelector(getAuthState, (authState) => {\r\n    return authState?.additionalEntityDetails || null;\r\n});\r\n\r\n// #endregion\r\n","import * as authActions from './auth.actions';\r\nimport * as authSelectors from './auth.selectors';\r\n\r\nimport { authFeatureKey, State as AppState, reducer as authReducer } from './auth.reducer';\r\n\r\nexport {authActions, authSelectors, authFeatureKey, AppState, authReducer};\r\n","import { Injectable } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\nimport { Actions, ofType, createEffect } from '@ngrx/effects';\r\nimport { mergeMap, catchError, take, switchMap } from 'rxjs/operators';\r\nimport { from, of } from 'rxjs';\r\n\r\nimport { BrokersService } from '../../services/brokers/brokers.service';\r\nimport { brokersActions } from './index';\r\n\r\nimport * as actions from '../../helpers/index.actions';\r\nimport * as snackBarConfigs from '../../helpers/snackbar';\r\nimport { calculateBrokerDistanceHelper } from '../../helpers/helperFunctions';\r\n\r\nimport { BrokerNegotiation, BrokerRequest, Client } from '../../models/queryModels';\r\nimport { ApiService } from '../../services/api/api.service';\r\nimport { NotificationsService } from '../../services/notifications/notifications.service';\r\nimport { ReqSendIntroductionEmail } from './brokers.actions';\r\nimport { checkIfClientHasBroker } from '../../helpers/brokerHelperFunctions';\r\n\r\n@Injectable()\r\nexport class BrokersEffects {\r\n    //#region Shared Broker/Client\r\n\r\n    // #region ReqBrokersAndDistance_Shared\r\n    ReqBrokersAndDistance_Shared$ = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(brokersActions.ReqBrokersAndDistance_Shared),\r\n            mergeMap((user) => {\r\n                return from(this.brokersService.getBrokers()).pipe(\r\n                    take(1),\r\n                    mergeMap((brokers) => {\r\n                        let locationsToGeocode = [user.user.location];\r\n                        brokers.forEach((broker) => {\r\n                            locationsToGeocode.push(broker.location);\r\n                        });\r\n                        return from(this.brokersService.getGeocodedAddresses(locationsToGeocode)).pipe(\r\n                            take(1),\r\n                            mergeMap((coordinates) => {\r\n                                let distances = calculateBrokerDistanceHelper(coordinates);\r\n                                brokers.forEach((broker, index) => {\r\n                                    broker.distance = distances[index];\r\n                                });\r\n\r\n                                return [brokersActions.ReqBrokersAndDistance_SharedSuccess({ brokers: brokers })];\r\n                            }),\r\n                        );\r\n                    }),\r\n                    catchError((error) => {\r\n                        console.log('ReqBrokersAndDistance_Shared: ', error);\r\n                        return [brokersActions.ReqBrokersAndDistance_SharedFail()];\r\n                    }),\r\n                );\r\n            }),\r\n        ),\r\n    );\r\n    //#endregion\r\n\r\n    // #region ReqCreateRequest_Shared\r\n    ReqCreateRequest_Shared$ = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(actions.brokersActions.ReqCreateRequest_Shared),\r\n            switchMap(({ brokerUid, clientUid, sentByBroker }) => {\r\n                return of(this.brokersService.createRequest(brokerUid, clientUid, sentByBroker)).pipe(\r\n                    switchMap((response) => {\r\n                        return [\r\n                            actions.brokersActions.ReqCreateRequest_SharedSuccess({\r\n                                response,\r\n                                clientUid,\r\n                                brokerUid,\r\n                            }),\r\n                        ];\r\n                    }),\r\n                    catchError((error) => {\r\n                        console.log('ReqCreateRequest_Shared: ', error);\r\n                        return [actions.brokersActions.ReqCreateRequest_SharedFail()];\r\n                    }),\r\n                );\r\n            }),\r\n        ),\r\n    );\r\n    // #endregion\r\n\r\n    // #region ReqAcceptRequest_Shared\r\n    ReqAcceptRequest_Shared$ = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(actions.brokersActions.ReqAcceptRequest_Shared),\r\n            switchMap(({ brokerUid, clientUid }) => {\r\n                return of(this.brokersService.acceptRequest(brokerUid, clientUid)).pipe(\r\n                    switchMap((response) => {\r\n                        return [actions.brokersActions.ReqAcceptRequest_SharedSuccess({ response: response })];\r\n                    }),\r\n                    catchError((error) => {\r\n                        console.log('ReqAcceptRequest_Shared: ', error);\r\n                        return [actions.brokersActions.ReqAcceptRequest_SharedFail()];\r\n                    }),\r\n                );\r\n            }),\r\n        ),\r\n    );\r\n    // #endregion\r\n\r\n    // #region ReqDeleteRequest_Shared\r\n    ReqDeleteRequest_Shared$ = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(actions.brokersActions.ReqDeleteRequest_Shared),\r\n            switchMap(({ brokerUid, clientUid }) => {\r\n                return of(this.brokersService.deleteRequest(brokerUid, clientUid)).pipe(\r\n                    switchMap(() => {\r\n                        return [actions.brokersActions.ReqDeleteRequest_SharedSuccess({ clientUid })];\r\n                    }),\r\n                    catchError((error) => {\r\n                        console.log('ReqDeleteRequest_Shared: ', error);\r\n                        return [actions.brokersActions.ReqDeleteRequest_SharedFail()];\r\n                    }),\r\n                );\r\n            }),\r\n        ),\r\n    );\r\n    // #endregion\r\n\r\n    // #region ReqSendPairingNotification_Shared\r\n    ReqSendPairingNotification_Shared$ = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(actions.brokersActions.ReqSendPairingNotification_Shared),\r\n            mergeMap(({ fromBroker, newRequest, brokerUid, clientUid }) => {\r\n                return this.api.sendPairingNotification(fromBroker, newRequest, brokerUid, clientUid).pipe(\r\n                    take(1),\r\n                    switchMap(() => {\r\n                        return [actions.brokersActions.ReqSendPairingNotification_SharedSuccess()];\r\n                    }),\r\n                    catchError((error) => {\r\n                        console.log('ReqSendPairingNotification_SharedFail: ', error.message);\r\n                        return [actions.brokersActions.ReqSendPairingNotification_SharedFail()];\r\n                    }),\r\n                );\r\n            }),\r\n        ),\r\n    );\r\n    // #endregion\r\n\r\n    // #region ReqCheckIfClientExists_Broker\r\n    ReqCheckIfClientExists_Broker$ = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(actions.brokersActions.ReqCheckIfClientExists_Broker),\r\n            switchMap(({ email }) => {\r\n                return this.brokersService.getClientByEmail(email).pipe(\r\n                    mergeMap((client) => {\r\n                        if (client.length && !client[0].isBroker) {\r\n                            return [\r\n                                actions.brokersActions.ReqCheckIfClientExists_BrokerSuccess({\r\n                                    client: client[0] as Client,\r\n                                }),\r\n                            ];\r\n                        }\r\n                    }),\r\n                    catchError((error) => {\r\n                        console.log('ReqCheckIfClientExists_Broker: ', error);\r\n                        this.snackbar.open(error, 'CLOSE', snackBarConfigs.errorConfig);\r\n                        return [actions.brokersActions.ReqCheckIfClientExists_BrokerFail()];\r\n                    }),\r\n                );\r\n            }),\r\n        ),\r\n    );\r\n    // #endregion\r\n\r\n    // #region ReqCheckIfClientHasBroker\r\n\r\n    ReqCheckIfClientHasBroker$ = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(actions.brokersActions.ReqCheckIfClientHasBroker),\r\n            switchMap(({ clientId }) => {\r\n                return this.brokersService.getClientBrokerRequests(clientId).pipe(\r\n                    mergeMap((brokerRequests: BrokerRequest[]) => {\r\n                        const result = checkIfClientHasBroker(clientId, brokerRequests);\r\n                        return [actions.brokersActions.ReqCheckIfClientHasBrokerSuccess({ result })];\r\n                    }),\r\n                    catchError((error) => {\r\n                        console.log('ReqCheckIfClientHasBroker: ', error);\r\n                        this.snackbar.open(error, 'CLOSE', snackBarConfigs.errorConfig);\r\n                        return [actions.brokersActions.ReqCheckIfClientHasBrokerFail()];\r\n                    }),\r\n                );\r\n            }),\r\n        ),\r\n    );\r\n\r\n    // #endregion\r\n\r\n    // #region ReqGetBrokerRequest\r\n    ReqGetBrokerRequest$ = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(actions.brokersActions.ReqGetBrokerRequest),\r\n            switchMap(({ brokerUid, clientUid }) => {\r\n                return this.brokersService.getBrokerRequest(brokerUid, clientUid).pipe(\r\n                    mergeMap((brokerRequest: BrokerRequest[]) => {\r\n                        return [actions.brokersActions.GetBrokerRequestSuccess({ brokerRequest: brokerRequest.pop() })];\r\n                    }),\r\n                    catchError((error) => {\r\n                        console.log('GetBrokerRequestFail: ', error);\r\n                        this.snackbar.open(error, 'CLOSE', snackBarConfigs.errorConfig);\r\n                        return [actions.brokersActions.GetBrokerRequestFail()];\r\n                    }),\r\n                );\r\n            }),\r\n        ),\r\n    );\r\n    // #endregion\r\n\r\n    // #region ReqToggleBrokerAdminRole\r\n    ReqToggleBrokerAdminRole$ = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(actions.brokersActions.ReqToggleBrokerAdminRole),\r\n            switchMap(({ brokerUid, clientUid, adminRole }) => {\r\n                return of(this.brokersService.toggleBrokerAdminRole(brokerUid, clientUid, adminRole)).pipe(\r\n                    mergeMap(() => {\r\n                        return [actions.brokersActions.ToggleBrokerAdminRoleSuccess()];\r\n                    }),\r\n                    catchError((error) => {\r\n                        console.log('ToggleBrokerAdminRoleFail: ', error);\r\n                        this.snackbar.open(error, 'CLOSE', snackBarConfigs.errorConfig);\r\n                        return [actions.brokersActions.ToggleBrokerAdminRoleFail()];\r\n                    }),\r\n                );\r\n            }),\r\n        ),\r\n    );\r\n    // #endregion\r\n\r\n    // #region ReqToggleBrokerAdminRole\r\n    ReqGetActiveClients_Broker$ = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(actions.brokersActions.ReqGetActiveClients_Broker),\r\n            mergeMap(({ clientIds }) => {\r\n                return this.brokersService.getClients(clientIds).pipe(\r\n                    mergeMap((clients) => {\r\n                        if (clients) {\r\n                            return [actions.brokersActions.ReqGetActiveClients_BrokerSuccess({ clients })];\r\n                        }\r\n                    }),\r\n                    catchError((error) => {\r\n                        console.log('ReqGetActiveClients_Broker: ', error);\r\n                        this.snackbar.open(error, 'CLOSE', snackBarConfigs.errorConfig);\r\n                        return [actions.brokersActions.ReqGetActiveClients_BrokerFail()];\r\n                    }),\r\n                );\r\n            }),\r\n        ),\r\n    );\r\n    // #endregion\r\n\r\n    // #region ReqGetPendingClients_Broker\r\n    ReqGetPendingClients_Broker$ = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(actions.brokersActions.ReqGetPendingClients_Broker),\r\n            mergeMap(({ clientIds }) => {\r\n                return this.brokersService.getClients(clientIds).pipe(\r\n                    mergeMap((clients) => {\r\n                        if (clients) {\r\n                            return [actions.brokersActions.ReqGetPendingClients_BrokerSuccess({ clients })];\r\n                        }\r\n                    }),\r\n                    catchError((error) => {\r\n                        console.log('ReqGetPendingClients_Broker: ', error);\r\n                        this.snackbar.open(error, 'CLOSE', snackBarConfigs.errorConfig);\r\n                        return [actions.brokersActions.ReqGetPendingClients_BrokerFail()];\r\n                    }),\r\n                );\r\n            }),\r\n        ),\r\n    );\r\n    // #endregion\r\n\r\n    // #region ReqPendingBrokerRequests_Broker\r\n    ReqPendingBrokerRequests_Broker$ = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(actions.brokersActions.ReqPendingBrokerRequests_Broker),\r\n            mergeMap(({ brokerUid }) => {\r\n                return this.brokersService.getPendingBrokerRequests(brokerUid).pipe(\r\n                    mergeMap((requests: BrokerRequest[]) => {\r\n                        if (requests) {\r\n                            return [\r\n                                actions.brokersActions.ReqPendingBrokerRequests_BrokerSuccess({\r\n                                    brokerRequests: requests,\r\n                                }),\r\n                            ];\r\n                        }\r\n                    }),\r\n                    catchError((error) => {\r\n                        console.log('ReqPendingBrokerRequests_Broker: ', error);\r\n                        this.snackbar.open(error, 'CLOSE', snackBarConfigs.errorConfig);\r\n                        return [actions.brokersActions.ReqPendingBrokerRequests_BrokerFail()];\r\n                    }),\r\n                );\r\n            }),\r\n        ),\r\n    );\r\n    // #endregion\r\n\r\n    // #region ReqAcceptedBrokerRequests_Broker\r\n    ReqAcceptedBrokerRequests_Broker$ = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(actions.brokersActions.ReqAcceptedBrokerRequests_Broker),\r\n            switchMap(({ brokerUid }) => {\r\n                return this.brokersService.getAcceptedBrokerRequests(brokerUid).pipe(\r\n                    mergeMap((requests) => {\r\n                        if (requests) {\r\n                            return [\r\n                                actions.brokersActions.ReqAcceptedBrokerRequests_BrokerSuccess({\r\n                                    acceptedRequests: requests,\r\n                                }),\r\n                            ];\r\n                        }\r\n                    }),\r\n                    catchError((error) => {\r\n                        console.log('ReqAcceptedBrokerRequests_Broker: ', error);\r\n                        this.snackbar.open(error, 'CLOSE', snackBarConfigs.errorConfig);\r\n                        return [actions.brokersActions.ReqAcceptedBrokerRequests_BrokerFail()];\r\n                    }),\r\n                );\r\n            }),\r\n        ),\r\n    );\r\n    // #endregion\r\n\r\n    // #endregion\r\n\r\n    // #region Client Effects\r\n\r\n    // #region ReqClientBrokerRequests_Client\r\n    ReqClientBrokerRequests_Client$ = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(brokersActions.ReqClientBrokerRequests_Client),\r\n            mergeMap((payload) => {\r\n                return from(this.brokersService.getClientBrokerRequests(payload.uid)).pipe(\r\n                    mergeMap((brokerRequests) => {\r\n                        return [\r\n                            brokersActions.ReqClientBrokerRequests_ClientSuccess({ brokerRequests: brokerRequests }),\r\n                        ];\r\n                    }),\r\n                    catchError((error) => {\r\n                        console.log('ReqClientBrokerRequests_Client: ', error);\r\n                        return [brokersActions.ReqClientBrokerRequests_ClientFail()];\r\n                    }),\r\n                );\r\n            }),\r\n        ),\r\n    );\r\n    //#endregion\r\n\r\n    // #region ReqClientsNotifications\r\n    ReqClientsNotifications$ = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(brokersActions.ReqClientsNotifications),\r\n            mergeMap((payload) => {\r\n                return this.notifications.getClientsNotifications(payload.clientsUids).pipe(\r\n                    take(1),\r\n                    mergeMap((notifications) => {\r\n                        return [brokersActions.ReqClientsNotificationsSuccess({ notifications: notifications })];\r\n                    }),\r\n                    catchError((error) => {\r\n                        console.log('ReqClientsNotifications: ', error);\r\n                        return [brokersActions.ReqClientsNotificationsFail()];\r\n                    }),\r\n                );\r\n            }),\r\n        ),\r\n    );\r\n    // #endregion\r\n\r\n    // #region ReqCoordinates_Client\r\n    ReqCoordinates_Client$ = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(brokersActions.ReqCoordinates_Client),\r\n            mergeMap((payload) => {\r\n                return from(this.brokersService.getGeocodedAddresses(payload.location)).pipe(\r\n                    take(1),\r\n                    mergeMap((coordinates) => {\r\n                        return [brokersActions.ReqCoordinates_ClientSuccess({ coordinates })];\r\n                    }),\r\n                    catchError((error) => {\r\n                        console.log('ReqCoordinates_Client: ', error);\r\n                        return [brokersActions.ReqCoordinates_ClientFail()];\r\n                    }),\r\n                );\r\n            }),\r\n        ),\r\n    );\r\n    // #endregion\r\n\r\n    // #region ReqCreateNegotiationDocument\r\n    ReqCreateNegotiationDocument$ = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(actions.brokersActions.ReqCreateNegotiationDocument),\r\n            switchMap(({ lotMatchId, buyerEmail, sellerEmail, buyerPaid, sellerPaid }) => {\r\n                return from(\r\n                    this.brokersService.createNegotiationDocument(\r\n                        lotMatchId,\r\n                        sellerEmail,\r\n                        buyerEmail,\r\n                        sellerPaid,\r\n                        buyerPaid,\r\n                    ),\r\n                ).pipe(\r\n                    switchMap((response) => {\r\n                        return [actions.brokersActions.CreateNegotiationDocumentSuccess({ response })];\r\n                    }),\r\n                    catchError((error) => {\r\n                        console.log('ReqCreateNegotiation_Client: ', error);\r\n                        return [actions.brokersActions.CreateNegotiationDocumentFail()];\r\n                    }),\r\n                );\r\n            }),\r\n        ),\r\n    );\r\n    // #endregion\r\n\r\n    // #region ReqUpdateNegotiationDocument\r\n    ReqUpdateNegotiationDocument$ = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(actions.brokersActions.ReqUpdateNegotiationDocument),\r\n            switchMap(({ brokerNegotiation }) => {\r\n                return from(this.brokersService.updateBrokerNegotiationDocument(brokerNegotiation)).pipe(\r\n                    switchMap((response) => {\r\n                        return [actions.brokersActions.UpdateNegotiationDocumentSuccess({ response })];\r\n                    }),\r\n                    catchError((error) => {\r\n                        console.log('ReqCreateNegotiation_Client: ', error);\r\n                        return [actions.brokersActions.UpdateNegotiationDocumentFail()];\r\n                    }),\r\n                );\r\n            }),\r\n        ),\r\n    );\r\n    // #endregion\r\n\r\n    // #region ReqGetBrokerNegotiationDocument\r\n    ReqGetBrokerNegotiationDocument$ = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(actions.brokersActions.ReqGetBrokerNegotiationDocuments),\r\n            mergeMap(({ lotMatchIds }) => {\r\n                return this.brokersService.getBrokerNegotiations(lotMatchIds).pipe(\r\n                    mergeMap((brokerNegotiationDocs: BrokerNegotiation[]) => {\r\n                        return [\r\n                            actions.brokersActions.GetBrokerNegotiationDocumentsSuccess({\r\n                                brokerNegotiationDocs,\r\n                            }),\r\n                        ];\r\n                    }),\r\n                    catchError((error) => {\r\n                        console.log('GetBrokerNegotiationDocumentFail: ', error);\r\n                        return [actions.brokersActions.GetBrokerNegotiationDocumentsFail];\r\n                    }),\r\n                );\r\n            }),\r\n        ),\r\n    );\r\n    // #endregion\r\n\r\n    // #region ReqSendIntroductionEmail\r\n    ReqSendIntroductionEmail$ = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(actions.brokersActions.ReqSendIntroductionEmail),\r\n            mergeMap(({ lotMatchId }) => {\r\n                return this.api.sendIntroductionEmail(lotMatchId).pipe(\r\n                    mergeMap((response) => {\r\n                        return from(this.brokersService.updateBrokerNegotiationEmailStatus(response.lotMatchId)).pipe(\r\n                            mergeMap(() => {\r\n                                return [actions.brokersActions.SendIntroductionEmailSuccess];\r\n                            }),\r\n                        );\r\n                    }),\r\n                    catchError((error) => {\r\n                        console.log('SendIntroductionEmailFail: ', error);\r\n                        return [brokersActions.SendIntroductionEmailFail()];\r\n                    }),\r\n                );\r\n            }),\r\n        ),\r\n    );\r\n    // #endregion\r\n\r\n    // #endregion\r\n\r\n    constructor(\r\n        private actions$: Actions,\r\n        private brokersService: BrokersService,\r\n        private snackbar: MatSnackBar,\r\n        private api: ApiService,\r\n        private notifications: NotificationsService,\r\n    ) {}\r\n}\r\n","import { createAction, props } from '@ngrx/store';\r\nimport { Broker, BrokerNegotiation, BrokerRequest, Client, User } from '../../models/queryModels';\r\nimport { LatLng, Notification } from '../../models/viewModels';\r\n\r\n// #region Shared Broker/Client Actions\r\n\r\n// #region ReqBrokersAndDistance_Shared\r\nexport const ReqBrokersAndDistance_Shared = createAction(\r\n    '[Brokers & Brokers Dashboard] ReqBrokersAndDistance_Shared',\r\n    props<{ user: User }>(),\r\n);\r\nexport const ReqBrokersAndDistance_SharedSuccess = createAction(\r\n    '[ReqBrokersAndDistance_Shared] ReqBrokersAndDistance_SharedSuccess',\r\n    props<{ brokers: Broker[] }>(),\r\n);\r\nexport const ReqBrokersAndDistance_SharedFail = createAction(\r\n    '[ReqBrokersAndDistance_Shared] ReqBrokersAndDistance_SharedFail',\r\n);\r\n// #endregion\r\n\r\n// #region ReqCreateRequest_Shared\r\nexport const ReqCreateRequest_Shared = createAction(\r\n    '[Request Broker Modal & Broker Dashboard] ReqCreateRequest_Shared',\r\n    props<{ brokerUid: string; clientUid: string; sentByBroker: boolean }>(),\r\n);\r\nexport const ReqCreateRequest_SharedSuccess = createAction(\r\n    '[ReqCreateRequest_Shared] ReqCreateRequest_SharedSuccess',\r\n    props<{ response: string; clientUid: string; brokerUid: string }>(),\r\n);\r\nexport const ReqCreateRequest_SharedFail = createAction('[ReqCreateRequest_Shared] ReqCreateRequest_SharedFail');\r\n// #endregion\r\n\r\n// #region ReqAcceptRequest_Shared\r\nexport const ReqAcceptRequest_Shared = createAction(\r\n    '[Pending Request Modal & Broker Dashboard] ReqAcceptRequest_Shared',\r\n    props<{ brokerUid: string; clientUid: string }>(),\r\n);\r\nexport const ReqAcceptRequest_SharedSuccess = createAction(\r\n    '[ReqAcceptRequest_Shared] ReqAcceptRequest_SharedSuccess',\r\n    props<{ response: string }>(),\r\n);\r\nexport const ReqAcceptRequest_SharedFail = createAction('[ReqAcceptRequest_Shared] ReqAcceptRequest_SharedFail');\r\n// #endregion\r\n\r\n// #region ReqDeleteRequest_Shared\r\nexport const ReqDeleteRequest_Shared = createAction(\r\n    '[Broker Dashboard & Pending Request Modal] ReqDeleteRequest_Shared',\r\n    props<{ brokerUid: string; clientUid: string }>(),\r\n);\r\nexport const ReqDeleteRequest_SharedFail = createAction('[ReqDeleteRequest_Shared] ReqDeleteRequest_SharedFail');\r\nexport const ReqDeleteRequest_SharedSuccess = createAction(\r\n    '[ReqDeleteRequest_Shared] ReqDeleteRequest_SharedSuccess',\r\n    props<{ clientUid: string }>(),\r\n);\r\n\r\n// #endregion\r\n\r\n// #region ReqSendPairingNotification\r\nexport const ReqSendPairingNotification_Shared = createAction(\r\n    '[Request Broker Modal & Add New Client Modal] ReqSendPairingNotification_Shared',\r\n    props<{ fromBroker: boolean; newRequest: boolean; brokerUid: string; clientUid: string }>(),\r\n);\r\nexport const ReqSendPairingNotification_SharedSuccess = createAction(\r\n    '[ReqSendPairingNotification_Shared] ReqSendPairingNotification_SharedSuccess',\r\n);\r\nexport const ReqSendPairingNotification_SharedFail = createAction(\r\n    '[ReqSendPairingNotification_Shared] ReqSendPairingNotification_SharedFail',\r\n);\r\n\r\n// #region Populate/Hydrate Client Object\r\nexport const PopulateClientObject = createAction(\r\n    '[Broker Dashboard] [NF] [SCU] PopulateClientObject',\r\n    props<{ client: Client }>(),\r\n);\r\n\r\n// #region Broker Actions\r\n\r\n// #region ClearClientObject_Broker\r\nexport const ClearClientObject_Broker = createAction('[Broker Dashboard] [NF] [SCU] ClearClientObject_Broker');\r\n// #endregion\r\n\r\n// #region ReqCheckIfClientExists_Broker\r\nexport const ReqCheckIfClientExists_Broker = createAction(\r\n    '[Broker Dashboard] ReqCheckIfClientExists_Broker',\r\n    props<{ email: string }>(),\r\n);\r\nexport const ReqCheckIfClientExists_BrokerFail = createAction('[Broker Dashboard] ReqCheckIfClientExists_BrokerFail');\r\nexport const ReqCheckIfClientExists_BrokerSuccess = createAction(\r\n    '[Broker Dashboard] ReqCheckIfClientExists_BrokerSuccess',\r\n    props<{ client: Client }>(),\r\n);\r\n// #endregion\r\n\r\n// #region ReqCheckIfClientHasBroker\r\n\r\nexport const ReqCheckIfClientHasBroker = createAction(\r\n    '[Add New Client Modal] ReqCheckIfClientHasBroker',\r\n    props<{ clientId: string }>(),\r\n);\r\nexport const ReqCheckIfClientHasBrokerFail = createAction('[Add New Client Modal] ReqCheckIfClientHasBrokerFail');\r\nexport const ReqCheckIfClientHasBrokerSuccess = createAction(\r\n    '[Add New Client Modal] ReqCheckIfClientHasBrokerSuccess',\r\n    props<{ result: boolean }>(),\r\n);\r\n\r\n// #endregion\r\n\r\n// #region ReqGetActiveClients_Broker\r\nexport const ReqGetActiveClients_Broker = createAction(\r\n    '[Broker Dashboard] ReqGetActiveClients_Broker',\r\n    props<{ clientIds: string[] }>(),\r\n);\r\nexport const ReqGetActiveClients_BrokerFail = createAction('[Broker Dashboard] ReqGetActiveClients_BrokerFail');\r\nexport const ReqGetActiveClients_BrokerSuccess = createAction(\r\n    '[Broker Dashboard] ReqGetActiveClients_BrokerSuccess',\r\n    props<{ clients: Client[] }>(),\r\n);\r\nexport const ResetActiveClientsState = createAction('[Broker Dashboard] [NF] [SCU] ResetActiveClientsState');\r\n// #endregion\r\n\r\n// #region ReqGetPendingClients_Broker\r\nexport const ReqGetPendingClients_Broker = createAction(\r\n    '[Broker Dashboard] ReqGetPendingClients_Broker',\r\n    props<{ clientIds: string[] }>(),\r\n);\r\nexport const ReqGetPendingClients_BrokerFail = createAction('[Broker Dashboard] ReqGetPendingClients_BrokerFail');\r\nexport const ReqGetPendingClients_BrokerSuccess = createAction(\r\n    '[Broker Dashboard] ReqGetPendingClients_BrokerSuccess',\r\n    props<{ clients: Client[] }>(),\r\n);\r\nexport const ResetPendingClientsState = createAction('[Broker Dashboard] [NF] [SCU] ResetPendingClientsState');\r\n// #endregion\r\n\r\n// #region ReqPendingBrokerRequests_Broker\r\nexport const ReqPendingBrokerRequests_Broker = createAction(\r\n    '[Broker Dashboard] ReqPendingBrokerRequests_Broker',\r\n    props<{ brokerUid: string }>(),\r\n);\r\nexport const ReqPendingBrokerRequests_BrokerFail = createAction(\r\n    '[Broker Dashboard] ReqPendingBrokerRequests_BrokerFail',\r\n);\r\nexport const ReqPendingBrokerRequests_BrokerSuccess = createAction(\r\n    '[Broker Dashboard] ReqPendingBrokerRequests_BrokerSuccess',\r\n    props<{ brokerRequests: BrokerRequest[] }>(),\r\n);\r\n// #endregion\r\n\r\n// #region ReqAcceptedBrokerRequests_Broker\r\nexport const ReqAcceptedBrokerRequests_Broker = createAction(\r\n    '[Broker Dashboard] ReqAcceptedBrokerRequests_Broker',\r\n    props<{ brokerUid: string }>(),\r\n);\r\nexport const ReqAcceptedBrokerRequests_BrokerFail = createAction(\r\n    '[Broker Dashboard] ReqAcceptedBrokerRequests_BrokerFail',\r\n);\r\nexport const ReqAcceptedBrokerRequests_BrokerSuccess = createAction(\r\n    '[Broker Dashboard] ReqAcceptedBrokerRequests_BrokerSuccess',\r\n    props<{ acceptedRequests: BrokerRequest[] }>(),\r\n);\r\n// #endregion\r\n\r\n// #endregion\r\n\r\n// #region Client Actions\r\n\r\n// #region ReqBrokerTermsCheck_Client\r\nexport const ReqBrokerTermsCheck_Client = createAction('[Brokers] [NF] [SCU] ReqBrokerTermsCheck_Client');\r\n// #endregion\r\n\r\n// #region ReqClientBrokerRequests_Client\r\nexport const ReqClientBrokerRequests_Client = createAction(\r\n    '[Brokers] ReqClientBrokerRequests_Client',\r\n    props<{ uid: string }>(),\r\n);\r\nexport const ReqClientBrokerRequests_ClientSuccess = createAction(\r\n    '[ReqClientBrokerRequests_Client] ReqClientBrokerRequests_ClientSuccess',\r\n    props<{ brokerRequests: BrokerRequest[] }>(),\r\n);\r\nexport const ReqClientBrokerRequests_ClientFail = createAction(\r\n    '[ReqClientBrokerRequests_Client] ReqClientBrokerRequests_ClientFail',\r\n);\r\n// #endregion\r\n\r\n// #region ReqCoordinates_Client\r\nexport const ReqCoordinates_Client = createAction('[Brokers] ReqCoordinates_Client', props<{ location: string[] }>());\r\nexport const ReqCoordinates_ClientSuccess = createAction(\r\n    '[ReqCoordinates_Client] ReqCoordinates_ClientSuccess',\r\n    props<{ coordinates: LatLng[] }>(),\r\n);\r\nexport const ReqCoordinates_ClientFail = createAction('[ReqCoordinates_Client] ReqCoordinates_ClientFail');\r\n// #endregion\r\n\r\n// #region ReqCreateNegotiationDocument\r\nexport const ReqCreateNegotiationDocument = createAction(\r\n    '[Request Broker Modal & Broker Dashboard] ReqCreateNegotiation',\r\n    props<{\r\n        lotMatchId: number;\r\n        sellerEmail: string;\r\n        buyerEmail: string;\r\n        sellerPaid: boolean;\r\n        buyerPaid: boolean;\r\n    }>(),\r\n);\r\nexport const CreateNegotiationDocumentSuccess = createAction(\r\n    '[ReqCreateNegotiation_Client] CreateNegotiationDocumentSuccess',\r\n    props<{ response: string }>(),\r\n);\r\nexport const CreateNegotiationDocumentFail = createAction(\r\n    '[ReqCreateNegotiation_Client] CreateNegotiationDocumentFail',\r\n);\r\n// #endregion\r\n\r\n// #region ReqUpdateNegotiationDocument\r\nexport const ReqUpdateNegotiationDocument = createAction(\r\n    '[Request Broker Modal & Broker Dashboard] ReqUpdateNegotiationDocument',\r\n    props<{\r\n        brokerNegotiation: BrokerNegotiation;\r\n    }>(),\r\n);\r\nexport const UpdateNegotiationDocumentSuccess = createAction(\r\n    '[ReqUpdateNegotiationDocument] UpdateNegotiationDocumentSuccess',\r\n    props<{ response: string }>(),\r\n);\r\nexport const UpdateNegotiationDocumentFail = createAction(\r\n    '[ReqUpdateNegotiationDocument] UpdateNegotiationDocumentFail',\r\n);\r\n// #endregion\r\n\r\n// #region Get Broker-Client Negotiation Document\r\n\r\nexport const ReqGetBrokerNegotiationDocuments = createAction(\r\n    '[Negotiation page] ReqGetBrokerNegotiationDocument',\r\n    props<{ lotMatchIds: number[] }>(),\r\n);\r\n\r\nexport const GetBrokerNegotiationDocumentsSuccess = createAction(\r\n    '[ReqGetBrokerNegotiationDocument] GetBrokerNegotiationDocumentSuccess',\r\n    props<{ brokerNegotiationDocs: BrokerNegotiation[] }>(),\r\n);\r\n\r\nexport const GetBrokerNegotiationDocumentsFail = createAction(\r\n    '[ReqGetBrokerNegotiationDocument] GetBrokerNegotiationDocumentFail',\r\n);\r\n\r\n// #endregion\r\n\r\nexport const ReqSendIntroductionEmail = createAction(\r\n    '[Negotiation Card] ReqSendIntroductionEmail',\r\n    props<{ lotMatchId: number }>(),\r\n);\r\n\r\nexport const SendIntroductionEmailSuccess = createAction('[ReqSendIntroductionEmail] SendIntroductionEmailSuccess');\r\nexport const SendIntroductionEmailFail = createAction('[ReqSendIntroductionEmail] SendIntroductionEmailFail');\r\n// #endregion\r\n\r\n// #region ReqClientsNotifications\r\nexport const ReqClientsNotifications = createAction(\r\n    '[Broker Dashboard] ReqClientsNotifications',\r\n    props<{ clientsUids: string[] }>(),\r\n);\r\nexport const ReqClientsNotificationsSuccess = createAction(\r\n    '[ReqClientsNotifications] ReqClientsNotificationsSuccess',\r\n    props<{ notifications: Notification[] }>(),\r\n);\r\nexport const ReqClientsNotificationsFail = createAction('[ReqClientsNotifications] ReqClientsNotificationsFail');\r\n\r\n// #endregion\r\n\r\n// #region ReqGetBrokerRequest\r\nexport const ReqGetBrokerRequest = createAction(\r\n    '[ Negotiation ] ReqGetBrokerRequest',\r\n    props<{ brokerUid: string; clientUid: string }>(),\r\n);\r\nexport const GetBrokerRequestSuccess = createAction(\r\n    '[ Negotiation ] GetBrokerRequestSuccess',\r\n    props<{ brokerRequest: BrokerRequest }>(),\r\n);\r\nexport const GetBrokerRequestFail = createAction('[ Negotiation ] GetBrokerRequestFail');\r\nexport const ClearBrokerRequest = createAction('[ Negotiation ] ClearBrokerRequest');\r\n\r\n// #endregion\r\n\r\n// #region ReqToggleBrokerAdminRole\r\nexport const ReqToggleBrokerAdminRole = createAction(\r\n    '[ Brokers Component ] ReqToggleBrokerAdminRole',\r\n    props<{ brokerUid: string; clientUid: string; adminRole: boolean }>(),\r\n);\r\nexport const ToggleBrokerAdminRoleSuccess = createAction('[ Brokers Component ] ToggleBrokerAdminRoleSuccess');\r\nexport const ToggleBrokerAdminRoleFail = createAction('[ Brokers Component ] ToggleBrokerAdminRoleFail');\r\n\r\n// #endregion\r\n","import { createReducer, on } from '@ngrx/store';\r\nimport { Broker, BrokerNegotiation, BrokerRequest, Client } from '../../models/queryModels';\r\nimport * as brokersActions from './brokers.actions';\r\nimport { Dictionary } from '@ngrx/entity';\r\nimport { getClientNotificationsCountHelper } from '../../helpers/helperFunctions';\r\nimport { getBrokers } from './brokers.selectors';\r\nimport { newClientsListWithoutDuplicates } from '../../helpers/brokerHelperFunctions';\r\nimport { act } from '@ngrx/effects';\r\n\r\nexport const brokersFeatureKey = 'brokers';\r\nexport interface State {\r\n    brokers: Broker[];\r\n    broker: Broker;\r\n    activeClients: Client[];\r\n    acceptedRequests: BrokerRequest[];\r\n    pendingClients: Client[];\r\n    pendingRequests: BrokerRequest[];\r\n    client: Client;\r\n    brokerRequest: BrokerRequest;\r\n    seenTsAndCs: boolean;\r\n    clientBrokerRequests: BrokerRequest[];\r\n    clientsNotifications: Dictionary<number>;\r\n    brokerNegotiations: BrokerNegotiation[];\r\n}\r\n\r\nexport const initialState: State = {\r\n    brokers: getBrokersFromLocalStorage(),\r\n    broker: undefined,\r\n    activeClients: [],\r\n    acceptedRequests: [],\r\n    pendingClients: [],\r\n    pendingRequests: [],\r\n\r\n    client: getClientFromLocalStorage(),\r\n    brokerRequest: getBrokerRequestFromLocalStorage(),\r\n    seenTsAndCs: false,\r\n    clientBrokerRequests: getClientBrokerRequestsFromLocalStorage(),\r\n    clientsNotifications: {},\r\n    brokerNegotiations: [],\r\n};\r\n\r\nfunction getClientFromLocalStorage(): Client {\r\n    const localStorageValue = localStorage.getItem('client');\r\n    return localStorageValue !== 'undefined' ? (JSON.parse(localStorageValue) as Client) : null;\r\n}\r\n\r\nfunction getBrokerRequestFromLocalStorage(): BrokerRequest {\r\n    const localStorageValue = localStorage.getItem('brokerRequest');\r\n    return localStorageValue !== 'undefined' ? (JSON.parse(localStorageValue) as BrokerRequest) : null;\r\n}\r\n\r\nfunction getClientBrokerRequestsFromLocalStorage(): BrokerRequest[] {\r\n    const localStorageValue = localStorage.getItem('ClientBrokerRequests');\r\n    return localStorageValue !== 'undefined' ? (JSON.parse(localStorageValue) as BrokerRequest[]) : null;\r\n}\r\n\r\nfunction getBrokersFromLocalStorage(): Broker[] {\r\n    const localStorageValue = localStorage.getItem('Brokers');\r\n    return localStorageValue !== 'undefined' ? (JSON.parse(localStorageValue) as Broker[]) : null;\r\n}\r\n\r\nexport const reducer = createReducer(\r\n    initialState,\r\n    on(brokersActions.ReqBrokerTermsCheck_Client, (state, action) => {\r\n        return { ...state, seenTsAndCs: true };\r\n    }),\r\n    on(brokersActions.ReqBrokersAndDistance_SharedSuccess, (state, action) => {\r\n        localStorage.setItem('Brokers', JSON.stringify(action.brokers));\r\n        return { ...state, brokers: action.brokers };\r\n    }),\r\n    on(brokersActions.ReqClientBrokerRequests_ClientSuccess, (state, action) => {\r\n        localStorage.setItem('ClientBrokerRequests', JSON.stringify(action.brokerRequests));\r\n        return { ...state, clientBrokerRequests: action.brokerRequests };\r\n    }),\r\n    on(brokersActions.ReqCheckIfClientExists_BrokerSuccess, brokersActions.PopulateClientObject, (state, action) => {\r\n        localStorage.setItem('client', JSON.stringify(action.client));\r\n        return { ...state, client: action.client };\r\n    }),\r\n    on(brokersActions.ClearClientObject_Broker, (state, action) => {\r\n        localStorage.removeItem('client');\r\n        return { ...state, client: undefined };\r\n    }),\r\n    on(brokersActions.GetBrokerRequestSuccess, (state, action) => {\r\n        localStorage.setItem('brokerRequest', JSON.stringify(action.brokerRequest));\r\n        return { ...state, brokerRequest: action.brokerRequest };\r\n    }),\r\n    on(brokersActions.ClearBrokerRequest, (state, action) => {\r\n        localStorage.removeItem('brokerRequest');\r\n        return { ...state, brokerRequest: undefined };\r\n    }),\r\n    on(brokersActions.ReqGetActiveClients_BrokerSuccess, (state, action) => {\r\n        let clients: Client[] = [];\r\n        if (state.activeClients.length) {\r\n            clients = newClientsListWithoutDuplicates(state.activeClients, action.clients);\r\n        } else {\r\n            clients = action.clients;\r\n        }\r\n\r\n        return { ...state, activeClients: clients };\r\n    }),\r\n    on(brokersActions.ResetActiveClientsState, (state, action) => {\r\n        return { ...state, activeClients: [] };\r\n    }),\r\n    on(brokersActions.ResetPendingClientsState, (state, action) => {\r\n        return { ...state, pendingClients: [] };\r\n    }),\r\n    on(brokersActions.ReqGetPendingClients_BrokerSuccess, (state, action) => {\r\n        let clients: Client[];\r\n        if (state.pendingClients.length) {\r\n            clients = newClientsListWithoutDuplicates(state.pendingClients, action.clients);\r\n        } else {\r\n            clients = action.clients;\r\n        }\r\n\r\n        return { ...state, pendingClients: clients };\r\n    }),\r\n    on(brokersActions.ReqPendingBrokerRequests_BrokerSuccess, (state, action) => {\r\n        return { ...state, pendingRequests: action.brokerRequests };\r\n    }),\r\n    on(brokersActions.ReqAcceptedBrokerRequests_BrokerSuccess, (state, action) => {\r\n        return { ...state, acceptedRequests: action.acceptedRequests };\r\n    }),\r\n    on(brokersActions.ReqDeleteRequest_SharedSuccess, (state, action) => {\r\n        return {\r\n            ...state,\r\n            pendingRequests: state.pendingRequests.filter(\r\n                (pendingRequest) => pendingRequest.clientUid !== action.clientUid,\r\n            ),\r\n            pendingClients: state.pendingClients.filter((pendingClient) => pendingClient.uid !== action.clientUid),\r\n            acceptedRequests: state.acceptedRequests.filter(\r\n                (pendingRequest) => pendingRequest.clientUid !== action.clientUid,\r\n            ),\r\n            activeClients: state.activeClients.filter((pendingClient) => pendingClient.uid !== action.clientUid),\r\n        };\r\n    }),\r\n    on(brokersActions.ReqClientsNotificationsSuccess, (state, action) => {\r\n        const notificationDict: Dictionary<number> = {};\r\n        state.acceptedRequests.map(\r\n            (request) =>\r\n                (notificationDict[request.clientUid] = getClientNotificationsCountHelper(\r\n                    request.clientUid,\r\n                    action.notifications,\r\n                )),\r\n        );\r\n\r\n        return {\r\n            ...state,\r\n            clientsNotifications: notificationDict,\r\n        };\r\n    }),\r\n    on(brokersActions.GetBrokerNegotiationDocumentsSuccess, (state, action) => {\r\n        let newBrokerNegotiations: BrokerNegotiation[] = [];\r\n\r\n        if (state.brokerNegotiations.length) {\r\n            newBrokerNegotiations = state.brokerNegotiations;\r\n            newBrokerNegotiations.concat(action.brokerNegotiationDocs);\r\n        } else {\r\n            newBrokerNegotiations = action.brokerNegotiationDocs;\r\n        }\r\n        return { ...state, brokerNegotiations: newBrokerNegotiations };\r\n    }),\r\n);\r\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\r\nimport { filterBrokerHelper } from '../../helpers/helperFunctions';\r\nimport { Broker, BrokerRequest } from '../../models/queryModels';\r\nimport * as fromBrokers from './brokers.reducer';\r\n\r\nexport const selectBrokersState = createFeatureSelector<fromBrokers.State>(fromBrokers.brokersFeatureKey);\r\n\r\nexport const getBrokers = createSelector(selectBrokersState, (brokersState) => {\r\n    return brokersState.brokers;\r\n});\r\n\r\nexport const getClientsBrokerRequests = createSelector(selectBrokersState, (brokersState) => {\r\n    return brokersState.clientBrokerRequests;\r\n});\r\n\r\nexport const getBrokerRequest = createSelector(selectBrokersState, (brokersState) => {\r\n    return brokersState.brokerRequest;\r\n});\r\n\r\nexport const getBrokerTermsCheck = createSelector(selectBrokersState, (brokersState) => {\r\n    return brokersState.seenTsAndCs;\r\n});\r\n\r\nexport const getCurrentClient = createSelector(selectBrokersState, (brokersState) => {\r\n    return brokersState.client;\r\n});\r\n\r\nexport const getActiveClients = createSelector(selectBrokersState, (brokersState) => {\r\n    return brokersState.activeClients;\r\n});\r\n\r\nexport const getPendingClients = createSelector(selectBrokersState, (brokersState) => {\r\n    return brokersState.pendingClients;\r\n});\r\n\r\nexport const getPendingRequests = createSelector(selectBrokersState, (brokersState) => {\r\n    return brokersState.pendingRequests;\r\n});\r\n\r\nexport const getAcceptedRequests = createSelector(selectBrokersState, (brokersState) => {\r\n    return brokersState.acceptedRequests;\r\n});\r\n\r\nexport const getClientNotificationsCount = createSelector(selectBrokersState, (brokersState) => {\r\n    return brokersState.clientsNotifications;\r\n});\r\n\r\nexport const getNegotiationDocuments = createSelector(selectBrokersState, (brokersState) => {\r\n    return brokersState.brokerNegotiations;\r\n});\r\n\r\nexport const getFilteredBrokers = createSelector(getBrokers, getClientsBrokerRequests, (broker, brokerRequests) => {\r\n    var activeBroker: Broker;\r\n    var brokerList: Broker[];\r\n\r\n    if (brokerRequests.length) {\r\n        let activeBrokerRequest = brokerRequests.filter(\r\n            ({ acceptedRequest, expiryDate }) => acceptedRequest && expiryDate >= Date.now(),\r\n        );\r\n        activeBroker = broker.filter(({ uid }) => uid === activeBrokerRequest[0]?.brokerUid)[0];\r\n        if (activeBroker) {\r\n            return { activeBroker: activeBroker };\r\n        }\r\n    }\r\n    if (broker.length && !activeBroker) {\r\n        let sortedBrokers = [...broker];\r\n        sortedBrokers.sort((a, b) => a.distance - b.distance);\r\n        brokerList = sortedBrokers;\r\n        if (brokerRequests.length) {\r\n            let brokerRequestUids = brokerRequests.map((brokerRequest) => brokerRequest.brokerUid);\r\n            let filteredBrokers = sortedBrokers.filter((broker: Broker) => !brokerRequestUids.includes(broker.uid));\r\n            brokerList = filteredBrokers;\r\n        }\r\n        return { brokerList: brokerList };\r\n    } else {\r\n        return { brokerList: [] };\r\n    }\r\n});\r\n\r\nexport const getFilteredRequests = createSelector(\r\n    getBrokers,\r\n    getClientsBrokerRequests,\r\n    (brokers: Broker[], brokerRequests: BrokerRequest[]) => {\r\n        if (brokers.length && brokerRequests.length) {\r\n            let fromClientRequests = filterBrokerHelper(brokerRequests, brokers, false);\r\n            let fromBrokerRequests = filterBrokerHelper(brokerRequests, brokers, true);\r\n            return { fromClientRequests: fromClientRequests, fromBrokerRequests: fromBrokerRequests };\r\n        }\r\n    },\r\n);\r\n","import * as brokersActions from './brokers.actions';\r\nimport * as brokersSelectors from './brokers.selectors';\r\n\r\nimport { brokersFeatureKey, State as brokersState, reducer as brokersReducer } from './brokers.reducer';\r\n\r\nexport { brokersActions, brokersSelectors, brokersFeatureKey, brokersState, brokersReducer };\r\n","import { Crop } from './../../models/queryModels';\r\nimport { createAction, props } from '@ngrx/store';\r\nimport { IdName } from '../../models/queryModels';\r\n\r\n//#region Read\r\n\r\n// #region ReqAllCrops\r\nexport const ReqAllCrops = createAction('[Market Page] ReqAllCrops');\r\nexport const AllCropsFail = createAction('[ReqAllCrops] AllCropsFail');\r\nexport const AllCropsSuccess = createAction('[ReqAllCrops] AllCropsSuccess', props<{ crops: Crop[] }>());\r\n// #endregion\r\n\r\n// #region ReqCropCategories\r\nexport const ReqCropCategories = createAction('[Form Page] ReqCropCategories');\r\nexport const ReqCropCategoriesFail = createAction('[ReqCropCategories] ReqCropCategoriesFail');\r\nexport const ReqCropCategoriesSuccess = createAction(\r\n    '[ReqCropCategories] ReqCropCategoriesSuccess',\r\n    props<{ cropCategories: IdName[] }>(),\r\n);\r\n// #endregion\r\n\r\n// #region ReqCropGrades\r\nexport const ReqCropGrades = createAction('[Create Lot Page] ReqCropGrades', props<{ cropId: number }>());\r\nexport const CropGradesFail = createAction('[ReqCropGrades] CropGradesFail');\r\nexport const CropGradesSuccess = createAction('[ReqCropGrades] CropGradesSuccess', props<{ grades: IdName[] }>());\r\n// #endregion\r\n\r\n// #region ReqCropMonths\r\nexport const ReqCropMonths = createAction(\r\n    '[Create Lot Page] ReqCropMonths',\r\n    props<{ cropId: number; exchangeId: number }>(),\r\n);\r\nexport const CropMonthsFail = createAction('[ReqCropMonths] CropMonthsFail');\r\nexport const CropMonthsSuccess = createAction('[ReqCropMonths] CropMonthsSuccess', props<{ safexMonths: IdName[] }>());\r\n// #endregion\r\n\r\n// #region ReqCropMonthsAndGrades\r\nexport const ReqCropMonthsAndGrades = createAction(\r\n    '[Create Lot Page] ReqCropMonthsAndGrades',\r\n    props<{ cropId: number; exchangeId: number }>(),\r\n);\r\nexport const CropMonthsAndGradesFail = createAction('[ReqCropMonthsAndGrades] CropMonthsAndGradesFail');\r\nexport const CropMonthsAndGradesSuccess = createAction(\r\n    '[ReqCropMonthsAndGrades] CropMonthsAndGradesSuccess',\r\n    props<{ safexMonths: IdName[]; grades: IdName[] }>(),\r\n);\r\n// #endregion\r\n\r\n// #region ReqCropPackaging\r\nexport const ReqCropPackaging = createAction('[Create Lot Page] ReqCropPackaging', props<{ cropId: number }>());\r\nexport const CropPackagingFail = createAction('[ReqCropPackaging] CropPackagingFail');\r\nexport const CropPackagingSuccess = createAction(\r\n    '[ReqCropPackaging] CropPackagingSuccess',\r\n    props<{ cropPackaging: IdName[] }>(),\r\n);\r\n// #endregion\r\n\r\n// #endregion\r\n","import { CropService } from './../../services/crop/crop.service';\r\nimport { ApiService } from 'src/app/core/services/api/api.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\r\n\r\nimport { catchError, concatMap, mergeMap, switchMap } from 'rxjs/operators';\r\nimport { EMPTY } from 'rxjs';\r\n\r\nimport * as actions from 'src/app/core/helpers/index.actions';\r\n\r\n@Injectable()\r\nexport class CropEffects {\r\n    // #region ReqAllCrops\r\n    ReqAllCrops$ = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(actions.cropActions.ReqAllCrops),\r\n            switchMap(() => {\r\n                return this.api.getAllCrops().pipe(\r\n                    mergeMap((crops) => {\r\n                        return [actions.cropActions.AllCropsSuccess({ crops })];\r\n                    }),\r\n                    catchError((error) => {\r\n                        console.log('ReqAllCrops: ', error.message);\r\n                        return [actions.cropActions.AllCropsFail()];\r\n                    }),\r\n                );\r\n            }),\r\n        ),\r\n    );\r\n\r\n    // endregion\r\n    // #region ReqAllCrops\r\n    ReqCropCategories$ = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(actions.cropActions.ReqCropCategories),\r\n            switchMap(() => {\r\n                return this.api.getCropCategories().pipe(\r\n                    mergeMap((cropCategories) => {\r\n                        return [actions.cropActions.ReqCropCategoriesSuccess({ cropCategories })];\r\n                    }),\r\n                    catchError((error) => {\r\n                        console.log('ReqCropCategories: ', error.message);\r\n                        return [actions.cropActions.ReqCropCategoriesFail()];\r\n                    }),\r\n                );\r\n            }),\r\n        ),\r\n    );\r\n\r\n    // endregion\r\n\r\n    // #region ReqCropGrades\r\n    ReqCropGrades$ = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(actions.cropActions.ReqCropGrades),\r\n            switchMap((payload) => {\r\n                return this.api.getCropGrades(payload.cropId).pipe(\r\n                    mergeMap((grades) => {\r\n                        return [actions.cropActions.CropGradesSuccess({ grades })];\r\n                    }),\r\n                    catchError((error) => {\r\n                        console.log('ReqCropGrades: ', error.message);\r\n                        return [actions.cropActions.CropGradesFail()];\r\n                    }),\r\n                );\r\n            }),\r\n        ),\r\n    );\r\n    // #endregion\r\n\r\n    // #region ReqCropMonths\r\n    ReqCropMonths$ = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(actions.cropActions.ReqCropMonths),\r\n            switchMap((payload) => {\r\n                return this.api.getCropMonths(payload.cropId, payload.exchangeId).pipe(\r\n                    mergeMap((safexMonths) => {\r\n                        return [actions.cropActions.CropMonthsSuccess({ safexMonths })];\r\n                    }),\r\n                    catchError((error) => {\r\n                        console.log('ReqCropMonths: ', error.message);\r\n                        return [actions.cropActions.CropMonthsFail()];\r\n                    }),\r\n                );\r\n            }),\r\n        ),\r\n    );\r\n    // #endregion\r\n\r\n    // #region ReqCropMonthsAndGrades\r\n    ReqCropMonthsAndGrades$ = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(actions.cropActions.ReqCropMonthsAndGrades),\r\n            switchMap((payload) => {\r\n                return this.cropService.getCropMonthsAndGrades(payload.cropId, payload.exchangeId).pipe(\r\n                    mergeMap(([safexMonths, grades]) => {\r\n                        return [actions.cropActions.CropMonthsAndGradesSuccess({ safexMonths, grades })];\r\n                    }),\r\n                    catchError((error) => {\r\n                        console.log('ReqCropMonthsAndGrades: ', error.message);\r\n                        return [actions.cropActions.CropMonthsAndGradesFail()];\r\n                    }),\r\n                );\r\n            }),\r\n        ),\r\n    );\r\n    // #endregion\r\n\r\n    // #region ReqCropPackaging\r\n    ReqCropPackaging$ = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(actions.cropActions.ReqCropPackaging),\r\n            switchMap((payload) => {\r\n                return this.api.getCropPackaging(payload.cropId).pipe(\r\n                    mergeMap((cropPackaging) => {\r\n                        return [actions.cropActions.CropPackagingSuccess({ cropPackaging })];\r\n                    }),\r\n                    catchError((error) => {\r\n                        console.log('ReqCropPackaging: ', error.message);\r\n                        return [actions.cropActions.CropPackagingFail()];\r\n                    }),\r\n                );\r\n            }),\r\n        ),\r\n    );\r\n    // #endregion\r\n\r\n    constructor(private actions$: Actions, private api: ApiService, private cropService: CropService) {}\r\n}\r\n","import { Crop } from './../../models/queryModels';\r\nimport { ReqLogoutAction } from './../authState/auth.actions';\r\nimport { LotMatchFormDataSuccess } from './../entities/match/match.actions';\r\nimport { LotFormDataSuccess } from './../entities/lot/lot.actions';\r\nimport { IdName } from 'src/app/core/models/queryModels';\r\nimport { Action, createReducer, on } from '@ngrx/store';\r\nimport * as actions from './crop.actions';\r\nimport { ScoutFormDataSuccess } from '../entities/scout/scout.actions';\r\nimport { Dictionary } from '@ngrx/entity';\r\n\r\nexport const cropFeatureKey = 'crop';\r\n\r\nexport interface State {\r\n    crops: Crop[];\r\n    cropCategories: IdName[];\r\n    exchanges: IdName[];\r\n}\r\n\r\nexport const initialState: State = {\r\n    crops: [],\r\n    cropCategories: [],\r\n    exchanges: [],\r\n};\r\n\r\nexport const reducer = createReducer(\r\n    initialState,\r\n    on(\r\n        LotFormDataSuccess,\r\n        ScoutFormDataSuccess,\r\n        actions.AllCropsSuccess,\r\n        LotMatchFormDataSuccess,\r\n        (state, { ...payload }) => {\r\n            return { ...state, crops: payload.crops };\r\n        },\r\n    ),\r\n    on(actions.ReqCropCategoriesSuccess, (state, { ...payload }) => {\r\n        return { ...state, cropCategories: payload.cropCategories };\r\n    }),\r\n    on(ReqLogoutAction, () => {\r\n        return initialState;\r\n    }),\r\n);\r\n","import { environment } from 'src/environments/environment';\r\nimport { createFeatureSelector, createSelector } from '@ngrx/store';\r\nimport * as fromCrop from './crop.reducer';\r\n\r\nexport const selectCropState = createFeatureSelector<fromCrop.State>(fromCrop.cropFeatureKey);\r\nexport const selectCropByCategoryId = createSelector(selectCropState, (cropState, categoryId: number) => {\r\n    return cropState.crops.filter((crop) => crop.cropCategoryId == categoryId);\r\n});\r\nexport const selectCropByCategories = createSelector(selectCropState, (cropState) => {\r\n    return cropState.cropCategories;\r\n});\r\n","import * as cropActions from './crop.actions';\r\nimport * as cropSelectors from './crop.selectors';\r\n\r\nimport { cropFeatureKey, State as CropState, reducer as cropReducer } from './crop.reducer';\r\n\r\nexport { cropActions, cropSelectors, cropFeatureKey, CropState, cropReducer };\r\n","import { createAction, props } from '@ngrx/store';\r\nimport { DeliveryPoint, IdName } from 'src/app/core/models/queryModels';\r\n\r\n//#region Create\r\nexport const ReqCreateDeliveryPoint = createAction(\r\n    '[DeliveryPointSetup] ReqCreateDeliveryPoint',\r\n    props<{ deliveryPoint: DeliveryPoint; clientUid: string; executedTime: number }>(),\r\n);\r\nexport const CreateDeliveryPointFail = createAction(\r\n    '[ReqCreateDeliveryPoint] CreateDeliveryPointFail',\r\n    props<{ executedTime: number }>(),\r\n);\r\nexport const CreateDeliveryPointSuccess = createAction(\r\n    '[ReqCreateDeliveryPoint] CreateDeliveryPointSuccess',\r\n    props<{ deliveryPoint: DeliveryPoint; executedTime: number }>(),\r\n);\r\n//#endregion\r\n\r\n//#region Read\r\nexport const ReqPublicDeliveryPoints = createAction(\r\n    '[DeliveryPointSetup] ReqPublicDeliveryPoints',\r\n    props<{ executedTime: number }>(),\r\n);\r\nexport const PublicDeliveryPointsSuccess = createAction(\r\n    '[ReqPublicDeliveryPoints] PublicDeliveryPointsSuccess',\r\n    props<{ deliveryPoints: DeliveryPoint[]; executedTime: number }>(),\r\n);\r\nexport const PublicDeliveryPointsFail = createAction(\r\n    '[ReqPublicDeliveryPoints] PublicDeliveryPointsFail',\r\n    props<{ executedTime: number }>(),\r\n);\r\n\r\nexport const ReqEntityDeliveryPoints = createAction(\r\n    '[DeliveryPointSetup] ReqEntityDeliveryPoints',\r\n    props<{ executedTime: number }>(),\r\n);\r\nexport const EntityDeliveryPointsSuccess = createAction(\r\n    '[ReqEntityDeliveryPoints] EntityDeliveryPointsSuccess',\r\n    props<{ deliveryPoints: DeliveryPoint[]; executedTime: number }>(),\r\n);\r\nexport const EntityDeliveryPointsFail = createAction(\r\n    '[ReqEntityDeliveryPoints] EntityDeliveryPointsFail',\r\n    props<{ executedTime: number }>(),\r\n);\r\n\r\nexport const ReqManagementData = createAction(\r\n    '[DeliveryPointManagement] ReqManagementData',\r\n    props<{ executedTime: number }>(),\r\n);\r\nexport const ManagementDataFail = createAction(\r\n    '[ReqManagementData] ManagementDataFail',\r\n    props<{ executedTime: number }>(),\r\n);\r\nexport const ManagementDataSuccess = createAction(\r\n    '[ReqManagementData] ManagementDataSuccess',\r\n    props<{ deliveryPoints: DeliveryPoint[]; regions: string[]; locationTypes: IdName[]; executedTime: number }>(),\r\n);\r\n//#endregion\r\n//#region Update\r\nexport const ReqUpdateDeliveryPoint = createAction(\r\n    '[DeliveryPointSetup] ReqUpdateDeliveryPoint',\r\n    props<{ deliveryPoint: DeliveryPoint; executedTime: number }>(),\r\n);\r\nexport const UpdateDeliveryPointFail = createAction(\r\n    '[ReqUpdateDeliveryPoint] UpdateDeliveryPointFail',\r\n    props<{ executedTime: number }>(),\r\n);\r\nexport const UpdateDeliveryPointSuccess = createAction(\r\n    '[ReqUpdateDeliveryPoint] UpdateDeliveryPointSuccess',\r\n    props<{ deliveryPoint: DeliveryPoint; executedTime: number }>(),\r\n);\r\n//#endregion\r\n//#region Delete\r\nexport const ReqDeleteDeliveryPoint = createAction(\r\n    '[DeliveryPointManagement] ReqDeleteDeliveryPoint',\r\n    props<{ id: number; executedTime: number }>(),\r\n);\r\nexport const DeleteDeliveryPointFail = createAction(\r\n    '[ReqDeleteDeliveryPoint] DeleteDeliveryPointFail',\r\n    props<{ executedTime: number }>(),\r\n);\r\nexport const DeleteDeliveryPointSuccess = createAction(\r\n    '[ReqDeleteDeliveryPoint] DeleteDeliveryPointSuccess',\r\n    props<{ id: number; executedTime: number }>(),\r\n);\r\n//#endregion\r\n","import { cloneDeep } from 'lodash';\r\nimport { Router } from '@angular/router';\r\nimport { Injectable } from '@angular/core';\r\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\r\nimport { catchError, concatMap, take, switchMap } from 'rxjs/operators';\r\nimport { combineLatest } from 'rxjs';\r\n\r\nimport * as actions from 'src/app/core/helpers/index.actions';\r\nimport * as fromRoot from 'src/app/core/ngrx/reducers/index';\r\nimport * as snackBarConfigs from 'src/app/core/helpers/snackbar';\r\n\r\nimport { DeliveryPointsService } from 'src/app/core/services/delivery-points/delivery-points.service';\r\nimport { DeliveryPoint } from 'src/app/core/models/queryModels';\r\nimport { ApiService } from 'src/app/core/services/api/api.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { select, Store } from '@ngrx/store';\r\nimport { PROFILE_ROUTE } from './../../../../core/helpers/constants';\r\n\r\n@Injectable()\r\nexport class DeliveryPointsEffects {\r\n    //#region Create\r\n    // #region ReqCreateDeliveryPoint\r\n    ReqCreateDeliveryPoint$ = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(actions.deliveryPointActions.ReqCreateDeliveryPoint),\r\n            switchMap((payload) => {\r\n                return this.api.createDeliveryPoint(cloneDeep(payload.deliveryPoint), payload.clientUid).pipe(\r\n                    concatMap((deliveryPoint) => {\r\n                        return [\r\n                            actions.deliveryPointActions.CreateDeliveryPointSuccess({\r\n                                deliveryPoint,\r\n                                executedTime: payload.executedTime,\r\n                            }),\r\n                        ];\r\n                    }),\r\n                    catchError((error) => {\r\n                        console.log('ReqCreateDeliveryPoint: ', error.message);\r\n                        this.snackbar.open(\r\n                            'We were unable to create the desired delivery point. Please ensure all information is accurate and try again.',\r\n                            'CLOSE',\r\n                            snackBarConfigs.errorConfig,\r\n                        );\r\n                        return [\r\n                            actions.deliveryPointActions.CreateDeliveryPointFail({\r\n                                executedTime: payload.executedTime,\r\n                            }),\r\n                        ];\r\n                    }),\r\n                );\r\n            }),\r\n        ),\r\n    );\r\n    // #endregion\r\n    //#endregion\r\n\r\n    //#region Read\r\n    // #region ReqPublicDeliveryPoints\r\n    ReqPublicDeliveryPoints$ = createEffect(() => {\r\n        return this.actions$.pipe(\r\n            ofType(actions.deliveryPointActions.ReqPublicDeliveryPoints),\r\n            switchMap((payload) => {\r\n                return this.api.getPublicDeliveryPoints().pipe(\r\n                    concatMap((deliveryPoints: DeliveryPoint[]) => [\r\n                        actions.deliveryPointActions.PublicDeliveryPointsSuccess({\r\n                            deliveryPoints,\r\n                            executedTime: payload.executedTime,\r\n                        }),\r\n                    ]),\r\n                    catchError((error) => {\r\n                        console.log('ReqPublicDeliveryPoints', error.message);\r\n                        this.snackbar.open(error.message, 'CLOSE', snackBarConfigs.errorConfig);\r\n                        return [\r\n                            actions.deliveryPointActions.PublicDeliveryPointsFail({\r\n                                executedTime: payload.executedTime,\r\n                            }),\r\n                        ];\r\n                    }),\r\n                );\r\n            }),\r\n        );\r\n    });\r\n    //#endregion\r\n    // #region ReqEntityDeliveryPoints\r\n    ReqEntityDeliveryPoints$ = createEffect(() => {\r\n        return this.actions$.pipe(\r\n            ofType(actions.deliveryPointActions.ReqEntityDeliveryPoints),\r\n            switchMap((payload) => {\r\n                return this.store.pipe(\r\n                    select(fromRoot.authSelectors.getUserEntities),\r\n                    take(1),\r\n                    concatMap((entities) => {\r\n                        return this.deliveryPointService.getEntityUsersDeliveryPoints(entities).pipe(\r\n                            concatMap((deliveryPoints: DeliveryPoint[]) => [\r\n                                actions.deliveryPointActions.EntityDeliveryPointsSuccess({\r\n                                    deliveryPoints,\r\n                                    executedTime: payload.executedTime,\r\n                                }),\r\n                            ]),\r\n                            catchError((error) => {\r\n                                console.log('ReqEntityDeliveryPoints', error.message);\r\n                                this.snackbar.open(error.message, 'CLOSE', snackBarConfigs.errorConfig);\r\n                                return [\r\n                                    actions.deliveryPointActions.EntityDeliveryPointsFail({\r\n                                        executedTime: payload.executedTime,\r\n                                    }),\r\n                                ];\r\n                            }),\r\n                        );\r\n                    }),\r\n                );\r\n            }),\r\n        );\r\n    });\r\n\r\n    //#endregion\r\n    // #region ReqManagementData\r\n    ReqManagementData$ = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(actions.deliveryPointActions.ReqManagementData),\r\n            switchMap((payload) => {\r\n                return this.store.pipe(\r\n                    select(fromRoot.authSelectors.getUserEntities),\r\n                    concatMap((entities) => {\r\n                        return combineLatest([\r\n                            this.deliveryPointService.getEntityUsersDeliveryPoints(entities),\r\n                            this.api.getPublicDeliveryPoints(),\r\n                            this.api.getLocationTypes(),\r\n                        ]);\r\n                    }),\r\n                    concatMap(([deliveryPoints, publicDeliveryPoints, locationTypes]) => [\r\n                        actions.deliveryPointActions.ManagementDataSuccess({\r\n                            deliveryPoints: [...deliveryPoints, ...publicDeliveryPoints],\r\n                            locationTypes,\r\n                            regions: ['Default'],\r\n                            executedTime: payload.executedTime,\r\n                        }),\r\n                    ]),\r\n                    catchError((error) => {\r\n                        console.log('ReqEntityDeliveryPoints', error.message);\r\n                        this.snackbar.open(error.message, 'CLOSE', snackBarConfigs.errorConfig);\r\n                        return [\r\n                            actions.deliveryPointActions.ManagementDataFail({\r\n                                executedTime: payload.executedTime,\r\n                            }),\r\n                        ];\r\n                    }),\r\n                );\r\n            }),\r\n        ),\r\n    );\r\n    // #endregion\r\n    //#endregion\r\n\r\n    //#region Update\r\n    // #region ReqUpdateDeliveryPoint\r\n    ReqUpdateDeliveryPoint$ = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(actions.deliveryPointActions.ReqUpdateDeliveryPoint),\r\n            switchMap((payload) => {\r\n                return this.api.updateDeliveryPoint(payload.deliveryPoint).pipe(\r\n                    concatMap((deliveryPoint) => {\r\n                        if (deliveryPoint.isPublic) {\r\n                            throw new Error('Updating of public delivery points is not allowed.');\r\n                        }\r\n                        this.router.navigate([PROFILE_ROUTE], { queryParams: { tabIndex: 1 } });\r\n                        return [\r\n                            actions.deliveryPointActions.UpdateDeliveryPointSuccess({\r\n                                deliveryPoint,\r\n                                executedTime: payload.executedTime,\r\n                            }),\r\n                        ];\r\n                    }),\r\n                    catchError((error) => {\r\n                        console.log('ReqUpdateDeliveryPoint: ', error.message);\r\n                        this.snackbar.open(\r\n                            'We were unable to Update the desired delivery point. Please ensure all information is accurate and you are working with a private delivery point.',\r\n                            'CLOSE',\r\n                            snackBarConfigs.errorConfig,\r\n                        );\r\n                        return [\r\n                            actions.deliveryPointActions.UpdateDeliveryPointFail({\r\n                                executedTime: payload.executedTime,\r\n                            }),\r\n                        ];\r\n                    }),\r\n                );\r\n            }),\r\n        ),\r\n    );\r\n    // #endregion\r\n\r\n    //#endregion\r\n\r\n    //#region Delete\r\n    ReqDeleteDeliveryPoint$ = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(actions.deliveryPointActions.ReqDeleteDeliveryPoint),\r\n            switchMap((payload) => {\r\n                return this.api.deleteDeliveryPoint(payload.id).pipe(\r\n                    concatMap(({ id }) => {\r\n                        return [\r\n                            actions.deliveryPointActions.DeleteDeliveryPointSuccess({\r\n                                id,\r\n                                executedTime: payload.executedTime,\r\n                            }),\r\n                        ];\r\n                    }),\r\n                    catchError((error) => {\r\n                        console.log('ReqDeleteDeliveryPoint: ', error.message);\r\n                        this.snackbar.open(\r\n                            'We were unable to Delete the desired delivery point. Please ensure you are working with a private delivery point.',\r\n                            'CLOSE',\r\n                            snackBarConfigs.errorConfig,\r\n                        );\r\n                        return [\r\n                            actions.deliveryPointActions.DeleteDeliveryPointFail({\r\n                                executedTime: payload.executedTime,\r\n                            }),\r\n                        ];\r\n                    }),\r\n                );\r\n            }),\r\n        ),\r\n    );\r\n    //#endregion\r\n\r\n    constructor(\r\n        private api: ApiService,\r\n        private actions$: Actions,\r\n        private snackbar: MatSnackBar,\r\n        private router: Router,\r\n        private store: Store<fromRoot.State>,\r\n        private deliveryPointService: DeliveryPointsService,\r\n    ) {}\r\n}\r\n","import { ReqLogoutAction } from './../../authState/auth.actions';\r\nimport { LotFormDataSuccess } from './../lot/lot.actions';\r\nimport { createEntityAdapter, Dictionary, EntityAdapter, EntityState } from '@ngrx/entity';\r\nimport { Action, createReducer, on } from '@ngrx/store';\r\nimport { DeliveryPoint, IdName } from 'src/app/core/models/queryModels';\r\nimport { addLoading, removeLoading } from '../../helperFunctions';\r\nimport * as DeliveryPointsActions from './delivery-points.actions';\r\nimport { LotMatchFormDataSuccess } from '../match/match.actions';\r\n\r\nexport const deliveryPointsFeatureKey = 'deliveryPoints';\r\n\r\nexport interface State extends EntityState<DeliveryPoint> {\r\n    dictLoading: Dictionary<string>;\r\n    locationTypes: IdName[];\r\n    regions: string[];\r\n}\r\n\r\nexport const adapter: EntityAdapter<DeliveryPoint> = createEntityAdapter({\r\n    selectId: selectDeliveryPointId,\r\n});\r\n\r\nexport function selectDeliveryPointId(deliveryPoint: DeliveryPoint): number {\r\n    return deliveryPoint.id;\r\n}\r\n\r\nexport const initialState: State = adapter.getInitialState<State>({\r\n    ids: [],\r\n    entities: {},\r\n    locationTypes: [],\r\n    regions: ['Default'],\r\n    dictLoading: {},\r\n});\r\n\r\nexport const reducer = createReducer(\r\n    initialState,\r\n\r\n    on(\r\n        DeliveryPointsActions.ReqManagementData,\r\n        DeliveryPointsActions.ReqDeleteDeliveryPoint,\r\n        DeliveryPointsActions.ReqUpdateDeliveryPoint,\r\n        DeliveryPointsActions.ReqCreateDeliveryPoint,\r\n        DeliveryPointsActions.ReqPublicDeliveryPoints,\r\n        DeliveryPointsActions.ReqEntityDeliveryPoints,\r\n        (state, payload) => {\r\n            return addLoading(state, payload);\r\n        },\r\n    ),\r\n    on(\r\n        DeliveryPointsActions.ManagementDataFail,\r\n        DeliveryPointsActions.DeleteDeliveryPointFail,\r\n        DeliveryPointsActions.UpdateDeliveryPointFail,\r\n        DeliveryPointsActions.CreateDeliveryPointFail,\r\n        DeliveryPointsActions.PublicDeliveryPointsFail,\r\n        DeliveryPointsActions.EntityDeliveryPointsFail,\r\n        (state, payload) => {\r\n            return removeLoading(state, payload);\r\n        },\r\n    ),\r\n    on(\r\n        DeliveryPointsActions.PublicDeliveryPointsSuccess,\r\n        DeliveryPointsActions.EntityDeliveryPointsSuccess,\r\n        (state, payload) => {\r\n            let newState = adapter.removeAll(state);\r\n            newState = adapter.upsertMany(payload.deliveryPoints, newState);\r\n            return removeLoading(newState, payload);\r\n        },\r\n    ),\r\n    on(\r\n        DeliveryPointsActions.CreateDeliveryPointSuccess,\r\n        DeliveryPointsActions.UpdateDeliveryPointSuccess,\r\n        (state, payload) => {\r\n            const newState = adapter.upsertOne(payload.deliveryPoint, state);\r\n            return removeLoading(newState, payload);\r\n        },\r\n    ),\r\n    on(DeliveryPointsActions.DeleteDeliveryPointSuccess, (state, payload) => {\r\n        const newState = adapter.removeOne(payload.id, state);\r\n        return removeLoading(newState, payload);\r\n    }),\r\n    on(DeliveryPointsActions.ManagementDataSuccess, (state, payload) => {\r\n        const newState = {\r\n            ...adapter.upsertMany(payload.deliveryPoints, state),\r\n            locationTypes: payload.locationTypes,\r\n            regions: payload.regions,\r\n        };\r\n        return removeLoading(newState, payload);\r\n    }),\r\n    on(LotFormDataSuccess, LotMatchFormDataSuccess, (state, payload) => {\r\n        const newState = adapter.upsertMany(payload.deliveryPoints, state);\r\n        return newState;\r\n    }),\r\n    on(ReqLogoutAction, () => {\r\n        return initialState;\r\n    }),\r\n);\r\n","import { DeliveryPoint } from 'src/app/core/models/queryModels';\r\nimport { Dictionary } from '@ngrx/entity';\r\nimport { createFeatureSelector, createSelector } from '@ngrx/store';\r\nimport * as fromDeliveryPoints from './delivery-points.reducer';\r\n\r\nexport const getDeliveryPointState = createFeatureSelector<fromDeliveryPoints.State>(\r\n    fromDeliveryPoints.deliveryPointsFeatureKey,\r\n);\r\n\r\nexport const {\r\n    selectIds: getDeliveryPointIds,\r\n    selectEntities: getDeliveryPointEntities,\r\n    selectAll: getAllDeliveryPoints,\r\n    selectTotal: getTotalDeliveryPoints,\r\n} = fromDeliveryPoints.adapter.getSelectors(getDeliveryPointState);\r\n\r\n// For the delivery Point management page\r\nexport const getManageDeliveryPointDetails = createSelector(getDeliveryPointState, (deliveryPointState) => {\r\n    const allDeliveryPoints = Object.values(deliveryPointState.entities);\r\n\r\n    const userDeliveryPoints = allDeliveryPoints.filter((deliveryPoint) => !deliveryPoint.isPublic);\r\n    const publicDeliveryPoints = allDeliveryPoints.filter((deliveryPoint) => deliveryPoint.isPublic);\r\n    const locationTypes = deliveryPointState.locationTypes;\r\n    const regions = deliveryPointState.regions;\r\n\r\n    return {\r\n        userDeliveryPoints,\r\n        publicDeliveryPoints,\r\n        locationTypes,\r\n        regions,\r\n    };\r\n});\r\n\r\nexport const getSetupDeliveryPointDetails = createSelector(getDeliveryPointState, (deliveryPointState) => {\r\n    const deliveryPoints = Object.values(deliveryPointState.entities);\r\n    const locationTypes = deliveryPointState.locationTypes;\r\n    const regions = deliveryPointState.regions;\r\n\r\n    return {\r\n        deliveryPoints,\r\n        locationTypes,\r\n        regions,\r\n    };\r\n});\r\nexport const getDeliveryPointById = createSelector(\r\n    getDeliveryPointEntities,\r\n    (deliveryPointMap: Dictionary<DeliveryPoint>, props: { id: number }) => {\r\n        const deliveryPoint = deliveryPointMap[props.id] || null;\r\n        return deliveryPoint;\r\n    },\r\n);\r\n","import * as deliveryPointActions from './delivery-points.actions';\r\nimport * as deliveryPointSelectors from './delivery-points.selectors';\r\n\r\nimport {\r\n    deliveryPointsFeatureKey,\r\n    State as DeliveryPointState,\r\n    reducer as deliveryPointReducer,\r\n} from './delivery-points.reducer';\r\n\r\nexport {\r\n    deliveryPointActions,\r\n    deliveryPointSelectors,\r\n    deliveryPointsFeatureKey,\r\n    DeliveryPointState,\r\n    deliveryPointReducer,\r\n};\r\n","import * as lotActions from './lot.actions';\r\nimport * as lotSelectors from './lot.selectors';\r\n\r\nimport { lotFeatureKey, State as lotState, reducer as lotReducer } from './lot.reducer';\r\n\r\nexport { lotActions, lotSelectors, lotFeatureKey, lotState, lotReducer };\r\n","import { Crop } from './../../../models/queryModels';\r\nimport { ScoutCard } from './../../../models/viewModels';\r\nimport { LotCard } from 'src/app/core/models/viewModels';\r\nimport { IdName, Lot, DeliveryPoint } from 'src/app/core/models/queryModels';\r\nimport { createAction, props } from '@ngrx/store';\r\n\r\n//#region Create\r\nexport const ReqCreateLot = createAction('[Lot Search Page] ReqCreateLot', props<{ lot: Lot; clientUid?: string }>());\r\nexport const CreateLotFail = createAction('[ReqCreateLot] CreateLotFail');\r\nexport const CreateLotSuccess = createAction('[ReqCreateLot] CreateLotSuccess', props<{ lot: LotCard }>());\r\n//#endregion\r\n\r\n//#region Read\r\nexport const ReqLotFormData = createAction('[Create/Edit Lot] ReqLotFormData', props<{ lotId?: number }>());\r\nexport const LotFormDataFail = createAction('[ReqLotFormData] LotFormDataFail');\r\nexport const LotFormDataSuccess = createAction(\r\n    '[ReqLotFormData] LotFormDataSuccess',\r\n    props<{\r\n        lot: Lot;\r\n        deliveryPoints: DeliveryPoint[];\r\n        crops: Crop[];\r\n        incoTerms: IdName[];\r\n        paymentOptions: IdName[];\r\n        unitsOfMeasure: IdName[];\r\n    }>(),\r\n);\r\n//#endregion\r\nexport const ReqUserLots = createAction('[Lot Dashboard] ReqUserLots');\r\nexport const UserLotsFail = createAction('[ReqUserLots] UserLotsFail');\r\nexport const UserLotsSuccess = createAction('[ReqUserLots] UserLotsSuccess', props<{ lotCards: LotCard[] }>());\r\n\r\n//#region Update\r\nexport const ReqUpdateLot = createAction('[Edit Lot Page] ReqUpdateLot', props<{ lot: Lot; clientUid?: string }>());\r\nexport const UpdateLotFail = createAction('[ReqUpdateLot] UpdateLotFail');\r\nexport const UpdateLotSuccess = createAction('[ReqUpdateLot] UpdateLotSuccess', props<{ lot: LotCard }>());\r\n//#endregion\r\n\r\n// #region Privatise\r\nexport const ReqPrivatiseLots = createAction('[Lot Component] ReqPrivatiseLots', props<{ lotIds: number[] }>());\r\nexport const PrivatiseLotsFail = createAction('[ReqPrivatiseLots] PrivatiseLotsFail');\r\nexport const PrivatiseLotsSuccess = createAction('[ReqPrivatiseLots] PrivatiseLotsSuccess');\r\n//#endregion\r\n\r\n// #region Delete\r\nexport const ReqDeleteLot = createAction(\r\n    '[Edit Lot Page] ReqDeleteLot',\r\n    props<{ lotId: number; clientUid?: string }>(),\r\n);\r\nexport const DeleteLotFail = createAction('[ReqDeleteLot] DeleteLotFail');\r\nexport const DeleteLotSuccess = createAction('[ReqDeleteLot] DeleteLotSuccess', props<{ lotId: number }>());\r\n// #endregion\r\n\r\n// #region Never Fail Actions\r\nexport const ReqSaveLotFormData = createAction('[Create Lot Page] [NF] ReqSaveLotFormData', props<{ lot: Lot }>());\r\nexport const LinkCurrentScoutToLot = createAction(\r\n    '[Scout Dashboard] [NF] LinkCurrentScoutToLot',\r\n    props<{ scout: ScoutCard }>(),\r\n);\r\n// #endregion\r\n\r\n// #region Clear All Lots\r\nexport const ClearAllLots = createAction('[ Broker Dashboard ] [NF] ClearAllLots');\r\n// #endregion\r\n","import { ReqLogoutAction } from './../../authState/auth.actions';\r\nimport { ScoutCard } from './../../../models/viewModels';\r\nimport { LotCard } from 'src/app/core/models/viewModels';\r\nimport { createEntityAdapter, EntityAdapter, EntityState } from '@ngrx/entity';\r\nimport { createReducer, on } from '@ngrx/store';\r\nimport { Lot } from 'src/app/core/models/queryModels';\r\n\r\nimport * as lotActions from './lot.actions';\r\nimport { ClearAllLots } from './lot.actions';\r\n\r\nexport const lotFeatureKey = 'lot';\r\n\r\nexport interface State extends EntityState<LotCard> {\r\n    currentLot: Lot;\r\n    linkedScout: ScoutCard;\r\n}\r\n\r\nexport const adapter: EntityAdapter<LotCard> = createEntityAdapter({});\r\n\r\nexport const initialState: State = adapter.getInitialState<State>({\r\n    ids: [],\r\n    entities: {},\r\n    currentLot: null,\r\n    linkedScout: null,\r\n});\r\n\r\nexport const reducer = createReducer(\r\n    initialState,\r\n    on(lotActions.CreateLotSuccess, lotActions.UpdateLotSuccess, (state, action) => {\r\n        if (action.lot) {\r\n            const newState = adapter.upsertOne(action.lot, { ...state, currentLot: null });\r\n            return newState;\r\n        } else {\r\n            return state;\r\n        }\r\n    }),\r\n    on(lotActions.LotFormDataSuccess, (state, action) => {\r\n        return { ...state, currentLot: action.lot };\r\n    }),\r\n    on(lotActions.UserLotsSuccess, (state, action) => {\r\n        const newState = adapter.upsertMany(action.lotCards, state);\r\n\r\n        return newState;\r\n    }),\r\n    on(lotActions.ReqSaveLotFormData, (state, action) => {\r\n        return { ...state, currentLot: action.lot };\r\n    }),\r\n    on(lotActions.DeleteLotSuccess, (state, action) => {\r\n        const newState = adapter.removeOne(action.lotId, state);\r\n        return { ...newState, currentLot: null };\r\n    }),\r\n    on(lotActions.LinkCurrentScoutToLot, (state, action) => {\r\n        const newState = { ...state, linkedScout: action.scout, currentLot: null };\r\n        return newState;\r\n    }),\r\n    on(ReqLogoutAction, ClearAllLots, () => {\r\n        return initialState;\r\n    }),\r\n);\r\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\r\nimport * as fromLot from './lot.reducer';\r\n\r\nexport const selectLotState = createFeatureSelector<fromLot.State>(fromLot.lotFeatureKey);\r\n\r\nexport const {\r\n    selectIds: getLotCardIds,\r\n    selectEntities: getLotCardEntities,\r\n    selectAll: getAllLotCards,\r\n    selectTotal: getTotalLotCards,\r\n} = fromLot.adapter.getSelectors(selectLotState);\r\n\r\nexport const getCurrentLot = createSelector(selectLotState, (lotState) => {\r\n    const currentLot = lotState.currentLot;\r\n    return currentLot || null;\r\n});\r\n\r\nexport const getAllOrderedLotCards = createSelector(getAllLotCards, (lotCards) => {\r\n    const orderedLotCards = lotCards.sort(\r\n        (first, second) => second.createdDate.getTime() - first.createdDate.getTime(),\r\n    );\r\n\r\n    return orderedLotCards;\r\n});\r\n\r\nexport const getLinkedScout = createSelector(selectLotState, (lotState) => {\r\n    const linkedScout = lotState.linkedScout;\r\n    return linkedScout;\r\n});\r\n","import * as matchActions from './match.actions';\r\nimport * as matchSelectors from './match.selectors';\r\n\r\nimport { matchFeatureKey, State as MatchState, reducer as matchReducer } from './match.reducer';\r\n\r\nexport { matchActions, matchSelectors, matchFeatureKey, MatchState, matchReducer };\r\n","import { Crop } from './../../../models/queryModels';\r\nimport { DeliveryPoint, IdName } from 'src/app/core/models/queryModels';\r\nimport { LotMatch, LotMatchIteration } from './../../../models/viewModels';\r\nimport { createAction, props } from '@ngrx/store';\r\n\r\n// #region CREATE\r\nexport const ReqCreateLotMatch = createAction('[Lot Match Page] ReqCreateLotMatch', props<{ lotMatch: LotMatch }>());\r\nexport const CreateLotMatchFail = createAction('[ReqCreateLotMatch] CreateLotMatchFail');\r\nexport const CreateLotMatchSuccess = createAction('[ReqCreateLotMatch] CreateLotMatchSuccess', props<{ id: number }>());\r\n\r\n// #endregion\r\n\r\n// #region READ\r\nexport const ReqLoadLotMatches = createAction(\r\n    '[Lot Match Page] ReqLoadLotMatches',\r\n    props<{ lotId: number; radius?: number }>(),\r\n);\r\nexport const LoadLotMatchesFail = createAction('[ReqLoadLotMatches] LoadLotMatchesFail');\r\nexport const LoadLotMatchesSuccess = createAction(\r\n    '[ReqLoadLotMatches] LoadLotMatchesSuccess',\r\n    props<{ matches: LotMatch[] }>(),\r\n);\r\n\r\nexport const ReqLotMatchFormData = createAction(\r\n    '[Negotiation Page] ReqLotMatchFormData',\r\n    props<{ lotMatchId: number; clientUid?: string }>(),\r\n);\r\nexport const LotMatchFormDataFail = createAction('[ReqLotMatchFormData] LotMatchFormDataFail');\r\nexport const LotMatchFormDataSuccess = createAction(\r\n    '[ReqLotMatchFormData] LotMatchFormDataSuccess',\r\n    props<{\r\n        lotMatchIterations: LotMatchIteration[];\r\n        deliveryPoints: DeliveryPoint[];\r\n        crops: Crop[];\r\n        incoTerms: IdName[];\r\n        paymentOptions: IdName[];\r\n        unitsOfMeasure: IdName[];\r\n    }>(),\r\n);\r\n\r\nexport const ReqLotHasBrokerCheck = createAction(\r\n    '[Lot Match Table] ReqLotHasBrokerCheck',\r\n    props<{ lotIds: number[] }>(),\r\n);\r\nexport const ReqLotHasBrokerCheckFail = createAction('[ReqLotHasBrokerCheck] ReqLotHasBrokerCheckFail');\r\nexport const ReqLotHasBrokerCheckSuccess = createAction(\r\n    '[ReqLotHasBrokerCheck] ReqLotHasBrokerCheckSuccess',\r\n    props<{ [key: string]: boolean }>(),\r\n);\r\n\r\n// #endregion\r\n\r\n// #region UPDATE\r\nexport const ReqUpdateLotMatch = createAction('[Negotiation Page] ReqUpdateLotMatch', props<{ lotMatch: LotMatch }>());\r\nexport const UpdateLotMatchFail = createAction('[ReqUpdateLotMatch] UpdateLotMatchFail');\r\nexport const UpdateLotMatchSuccess = createAction(\r\n    '[ReqUpdateLotMatch] UpdateLotMatchSuccess',\r\n    props<{ lotMatchIteration: LotMatchIteration }>(),\r\n);\r\n// #endregion\r\n\r\n// #region DELETE\r\n\r\n// #endregion\r\n","import { ReqLogoutAction } from './../../authState/auth.actions';\r\nimport { LotMatchIteration } from './../../../models/viewModels';\r\nimport { LotMatch } from '../../../models/viewModels';\r\nimport { createEntityAdapter, EntityAdapter, EntityState } from '@ngrx/entity';\r\nimport { createReducer, on } from '@ngrx/store';\r\nimport * as matchActions from './match.actions';\r\n\r\nexport const matchFeatureKey = 'match';\r\n\r\nexport interface State extends EntityState<LotMatchIteration> {\r\n    currentMatches: LotMatch[];\r\n    matchId: number;\r\n}\r\n\r\nexport const adapter: EntityAdapter<LotMatchIteration> = createEntityAdapter({});\r\n\r\nexport const initialState: State = adapter.getInitialState<State>({\r\n    ids: [],\r\n    entities: {},\r\n    currentMatches: [],\r\n    matchId: null,\r\n});\r\n\r\nexport const reducer = createReducer(\r\n    initialState,\r\n    on(matchActions.LoadLotMatchesSuccess, (state, payload) => {\r\n        return { ...state, currentMatches: payload.matches };\r\n    }),\r\n    on(matchActions.LotMatchFormDataSuccess, (state, action) => {\r\n        let newState = adapter.removeAll(state);\r\n        newState = adapter.upsertMany(action.lotMatchIterations, newState);\r\n        return newState;\r\n    }),\r\n    on(matchActions.UpdateLotMatchSuccess, (state, action) => {\r\n        const newState = adapter.upsertOne(action.lotMatchIteration, state);\r\n        return newState;\r\n    }),\r\n    on(matchActions.CreateLotMatchSuccess, (state, action) => {\r\n        return { ...state, matchId: action.id };\r\n    }),\r\n    on(ReqLogoutAction, () => {\r\n        return initialState;\r\n    }),\r\n);\r\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\r\nimport { cloneDeep } from 'lodash';\r\nimport * as fromMatch from './match.reducer';\r\n\r\nexport const selectMatchState = createFeatureSelector<fromMatch.State>(fromMatch.matchFeatureKey);\r\n\r\nexport const {\r\n    selectIds: getMatchIterationsIds,\r\n    selectEntities: getMatchIterationsEntities,\r\n    selectAll: getAllMatchIterations,\r\n    selectTotal: getTotalMatchIterations,\r\n} = fromMatch.adapter.getSelectors(selectMatchState);\r\n\r\nexport const getCurrentLotMatches = createSelector(selectMatchState, (state) => {\r\n    let availableMatches = state.currentMatches || [];\r\n\r\n    if (availableMatches.length > 0) {\r\n        availableMatches = cloneDeep(availableMatches);\r\n        availableMatches = availableMatches.reverse();\r\n    }\r\n    return availableMatches;\r\n});\r\n\r\nexport const getNewMatchId = createSelector(selectMatchState, (state) => {\r\n    const matchId = state.matchId || null;\r\n    return matchId;\r\n});\r\n","import * as negotiationActions from './negotiation.actions';\r\nimport * as negotiationSelectors from './negotiation.selectors';\r\n\r\nimport { negotiationFeatureKey, State as negotiationState, reducer as negotiationReducer } from './negotiation.reducer';\r\n\r\nexport { negotiationActions, negotiationSelectors, negotiationFeatureKey, negotiationState, negotiationReducer };\r\n","import { NegotiationCard, LotMatch, LotMatchIteration } from 'src/app/core/models/viewModels';\r\nimport { createAction, props } from '@ngrx/store';\r\n\r\n//#region Create\r\n//#endregion\r\n\r\n//#region Read\r\n// #region ReqNegotiationCards\r\nexport const ReqUserNegotiationCards = createAction(\r\n    '[Negotiation Dashboard] ReqUserNegotiationCards',\r\n    props<{ clientUid?: string }>(),\r\n);\r\nexport const UserNegotiationCardsFail = createAction('[ReqUserNegotiationCards] UserNegotiationCardsFail');\r\nexport const UserNegotiationCardsSuccess = createAction(\r\n    '[ReqUserNegotiationCards] UserNegotiationsCardsSuccess',\r\n    props<{ activeNegotiationCards: NegotiationCard[]; completedNegotiationCards: NegotiationCard[] }>(),\r\n);\r\n//====================================================================================================\r\nexport const ReqGetAvailableMatchIds = createAction(\r\n    '[Negotiation Page] ReqGetAvailableMatchIds',\r\n    props<{ lotMatchId: number; clientUid?: string }>(),\r\n);\r\nexport const GetAvailableMatchIdsSuccess = createAction(\r\n    '[ReqGetAvailableMatchIds] GetAvailableMatchIdsSuccess',\r\n    props<{ lotMatchIds: number[] }>(),\r\n);\r\nexport const GetAvailableMatchIdsFail = createAction('[ReqGetAvailableMatchIds] GetAvailableMatchIdsFail');\r\n// #endregion\r\n// #region ReqLatestLotMatchIteration\r\nexport const ReqLatestLotMatchIteration = createAction(\r\n    '[Clearing Email Page] ReqLotMatchIteration',\r\n    props<{ lotMatchId: number }>(),\r\n);\r\nexport const LatestLotMatchIterationFail = createAction('[ReqLatestLotMatchIteration] LatestLotMatchIterationFail');\r\nexport const LatestLotMatchIterationSuccess = createAction(\r\n    '[ReqLatestLotMatchIteration] LatestLotMatchIterationSuccess',\r\n    props<{\r\n        latestMatch: LotMatchIteration;\r\n    }>(),\r\n);\r\n//#endregion\r\n\r\n//#region Update\r\n// #region ReqCompleteNegotiation\r\nexport const ReqCompleteNegotiation = createAction(\r\n    '[Negotiation Dashboard] ReqCompleteNegotiation',\r\n    props<{ lotMatch: LotMatch; clientHasBroker: boolean; counterPartyHasBroker: boolean }>(),\r\n);\r\nexport const CompleteNegotiationFail = createAction('[ReqCompleteNegotiation] CompleteNegotiationFail');\r\nexport const CompleteNegotiationSuccess = createAction('[ReqCompleteNegotiation] NegotiationsCardsSuccess');\r\n// #endregion\r\n// #region ReqClearNegotiation\r\nexport const ReqClearNegotiation = createAction(\r\n    '[Clearing Email Modal] ReqClearNegotiation',\r\n    props<{ lotMatch: LotMatch; requestedBy: string }>(),\r\n);\r\nexport const ClearNegotiationFail = createAction('[ReqClearNegotiation] ClearNegotiationFail');\r\nexport const ClearNegotiationSuccess = createAction('[ReqClearNegotiation] ClearNegotiationSuccess');\r\n// #endregion\r\n// #region ReqDeclineNegotiation\r\nexport const ReqDeclineNegotiation = createAction(\r\n    '[Negotiation Dashboard] ReqDeclineNegotiation',\r\n    props<{ lotMatch: LotMatch; activeNegotiationIds: number[] }>(),\r\n);\r\nexport const DeclineNegotiationFail = createAction('[ReqDeclineNegotiation] DeclineNegotiationFail');\r\nexport const DeclineNegotiationSuccess = createAction(\r\n    '[ReqDeclineNegotiation] DeclineNegotiationSuccess',\r\n    props<{ activeNegotiationIds: number[] }>(),\r\n);\r\n// #endregion\r\n//#endregion\r\n\r\n// #region Delete\r\n// #endregion\r\n\r\n// #region Never Fail Actions\r\n\r\n// #endregion\r\n","import { ReqLogoutAction } from './../../authState/auth.actions';\r\nimport { NegotiationCard } from 'src/app/core/models/viewModels';\r\nimport { createEntityAdapter, EntityAdapter, EntityState } from '@ngrx/entity';\r\nimport { createReducer, on } from '@ngrx/store';\r\n\r\nimport * as negotiationActions from '../negotiations/negotiation.actions';\r\n\r\nexport const negotiationFeatureKey = 'negotiation';\r\n\r\nexport interface State extends EntityState<NegotiationCard> {\r\n    completedNegotiations: NegotiationCard[];\r\n    lotMatchIds: number[];\r\n}\r\n\r\nfunction getLocalStorageLotMatchIds() {\r\n    const localStorageValue = localStorage.getItem('lotMatchIds');\r\n    const lotMatchIds = localStorageValue === 'undefined' ? null : JSON.parse(localStorageValue);\r\n    return lotMatchIds ? lotMatchIds : [];\r\n}\r\n\r\nexport const adapter: EntityAdapter<NegotiationCard> = createEntityAdapter({});\r\n\r\nexport const initialState: State = adapter.getInitialState<State>({\r\n    ids: [],\r\n    entities: {},\r\n    completedNegotiations: [],\r\n    lotMatchIds: getLocalStorageLotMatchIds(),\r\n});\r\n\r\nexport const reducer = createReducer(\r\n    initialState,\r\n    on(negotiationActions.UserNegotiationCardsSuccess, (state, action) => {\r\n        let newState = adapter.removeAll(state);\r\n        newState = {\r\n            ...adapter.upsertMany(action.activeNegotiationCards, newState),\r\n            completedNegotiations: action.completedNegotiationCards,\r\n        };\r\n\r\n        return newState;\r\n    }),\r\n    on(negotiationActions.GetAvailableMatchIdsSuccess, (state, action) => {\r\n        const newState = {\r\n            ...state,\r\n            lotMatchIds: action.lotMatchIds,\r\n        };\r\n        localStorage.setItem('lotMatchIds', JSON.stringify(action.lotMatchIds));\r\n        return newState;\r\n    }),\r\n    on(ReqLogoutAction, () => {\r\n        return initialState;\r\n    }),\r\n);\r\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\r\nimport * as fromNegotiation from './negotiation.reducer';\r\n\r\nexport const selectNegotiationState = createFeatureSelector<fromNegotiation.State>(\r\n    fromNegotiation.negotiationFeatureKey,\r\n);\r\n\r\nexport const {\r\n    selectIds: getNegotiationCardIds,\r\n    selectEntities: getNegotiationCardEntities,\r\n    selectAll: getAllNegotiationCards,\r\n    selectTotal: getTotalNegotiationCards,\r\n} = fromNegotiation.adapter.getSelectors(selectNegotiationState);\r\n\r\nexport const getAllOrderedNegotiationCards = createSelector(\r\n    getAllNegotiationCards,\r\n    selectNegotiationState,\r\n    (negotiationCards, state) => {\r\n        const orderedNegotiationCards = [...negotiationCards, ...state.completedNegotiations].sort(\r\n            (first, second) => second.createdDate.getTime() - first.createdDate.getTime(),\r\n        );\r\n\r\n        return orderedNegotiationCards;\r\n    },\r\n);\r\n\r\nexport const getLotMatchIds = createSelector(selectNegotiationState, (negotiationState) => {\r\n    return negotiationState.lotMatchIds;\r\n});\r\n","import * as notificationActions from './notifications.actions';\r\nimport * as notificationSelectors from './notifications.selectors';\r\n\r\nimport { State } from './notifications.reducer';\r\n\r\nexport { notificationActions, notificationSelectors, State };\r\n","import { createAction, props } from '@ngrx/store';\r\nimport { CurrentNotification, Notification } from 'src/app/core/models/viewModels';\r\n\r\n//#region ReqCloudMessagingPermissionStatus\r\nexport const ReqCloudMessagingPermissionStatus = createAction('[Lots Page] ReqCloudMessagingPermissionStatus');\r\nexport const CloudMessagingPermissionStatusFail = createAction(\r\n    '[ReqCloudMessagingPermissionStatus] CloudMessagingPermissionFail',\r\n);\r\nexport const CloudMessagingPermissionStatusSuccess = createAction(\r\n    '[ReqCloudMessagingPermissionStatus] CloudMessagingPermissionStatusSuccess',\r\n    props<{ permissionStatus: boolean }>(),\r\n);\r\n//#endregion\r\n\r\n//#region ReqActivateNotificationListener\r\nexport const ReqActivateNotificationListener = createAction('[Notification] ReqActivateNotificationListener');\r\nexport const ActivateNotificationListenerFail = createAction(\r\n    '[ReqActivateNotificationListener] ActivateNotificationListenerFail',\r\n);\r\nexport const ActivateNotificationListenerSuccess = createAction(\r\n    '[ReqActivateNotificationListener] ActivateNotificationListenerSuccess',\r\n);\r\n//#endregion\r\n\r\n// #region ReqUserNotifications\r\nexport const ReqUserNotifications = createAction('[Notification] ReqUserNotifications');\r\nexport const UserNotificationsFail = createAction('[ReqUserNotifications] UserNotificationsFail');\r\nexport const UserNotificationsSuccess = createAction(\r\n    '[ReqUserNotifications] UserNotificationsSuccess',\r\n    props<{ userNotifications: Notification[] }>(),\r\n);\r\n// #endregion\r\n\r\n// #region ReqClientNotifications\r\nexport const ReqClientNotifications = createAction(\r\n    '[Notification] ReqClientNotifications',\r\n    props<{ clientUid: string }>(),\r\n);\r\nexport const ClientNotificationsFail = createAction('[ReqClientNotifications] ClientNotificationsFail');\r\nexport const ClientNotificationsSuccess = createAction(\r\n    '[ReqClientNotifications] ClientNotificationsSuccess',\r\n    props<{ clientNotifications: Notification[] }>(),\r\n);\r\n// #endregion\r\n\r\n// #region ReqToggleNotificationStatus\r\nexport const ReqToggleNotificationStatus = createAction(\r\n    '[Negotiation Page] ReqToggleNotificationStatus',\r\n    props<{ notificationUids: string[]; toggleForAgent?: boolean }>(),\r\n);\r\nexport const ToggleNotificationStatusFail = createAction('[ReqToggleNotificationStatus] ToggleNotificationStatusFail');\r\nexport const ToggleNotificationStatusSuccess = createAction(\r\n    '[ReqToggleNotificationStatus] ToggleNotificationStatusSuccess',\r\n);\r\n// #endregion\r\n\r\n// #region Never Fail Actions\r\nexport const ReqUpdateCloudMessagingPermissionStatus = createAction(\r\n    '[Notification | Lots Page] [NF] ReqUpdateCloudMessagingPermissionStatus',\r\n    props<{ permissionStatus: boolean }>(),\r\n);\r\nexport const ReqUpdateCurrentNotification = createAction(\r\n    '[Notification] [NF] [SCU] ReqUpdateCurrentNotification',\r\n    props<{ notification: CurrentNotification }>(),\r\n);\r\n// #endregion\r\n\r\n// #region Clear Notifications\r\nexport const ClearNotifications = createAction('[ Agent dashboard ] ClearNotifications');\r\n// #endregion\r\n","import { Store } from '@ngrx/store';\r\nimport { createEffect, Actions, ofType } from '@ngrx/effects';\r\nimport { Injectable } from '@angular/core';\r\nimport { notificationActions } from 'src/app/core/helpers/index.actions';\r\nimport { catchError, switchMap, mergeMap } from 'rxjs/operators';\r\nimport * as fromRoot from 'src/app/core/ngrx/reducers/index';\r\nimport { NotificationsService } from 'src/app/core/services/notifications/notifications.service';\r\nimport { combineLatest, of } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class NotificationsEffects {\r\n    // #region ReqCloudMessagingPermissionStatus\r\n    ReqCloudMessagingPermissionStatus$ = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(notificationActions.ReqCloudMessagingPermissionStatus),\r\n            mergeMap(() => {\r\n                return this.store.select(fromRoot.authSelectors.getUser).pipe(\r\n                    mergeMap((user) => {\r\n                        return combineLatest([of(user), this.notificationService.getCloudMessagingPermissionStatus()]);\r\n                    }),\r\n                    mergeMap(([user, deviceToken]) => {\r\n                        if (deviceToken) {\r\n                            this.notificationService.addDeviceTokenToUserDocument(user, deviceToken);\r\n                        }\r\n                        return [\r\n                            notificationActions.CloudMessagingPermissionStatusSuccess({\r\n                                permissionStatus: Boolean(deviceToken),\r\n                            }),\r\n                        ];\r\n                    }),\r\n                    catchError((error) => {\r\n                        console.log('ReqCloudMessagingPermissionStatus: ', error.message);\r\n                        return [notificationActions.CloudMessagingPermissionStatusFail()];\r\n                    }),\r\n                );\r\n            }),\r\n        ),\r\n    );\r\n    // #endregion\r\n\r\n    // #region ReqActivateNotificationListener\r\n    ReqActivateNotificationListener$ = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(notificationActions.ReqActivateNotificationListener),\r\n            mergeMap(() => {\r\n                return this.notificationService.activateNotificationListener();\r\n            }),\r\n            mergeMap((fireBaseNotification) => {\r\n                if (fireBaseNotification.notification) {\r\n                    const { title, body } = fireBaseNotification.notification;\r\n                    return [\r\n                        notificationActions.ReqUpdateCurrentNotification({\r\n                            notification: { title, body },\r\n                        }),\r\n                    ];\r\n                }\r\n            }),\r\n            catchError((error) => {\r\n                console.log('ReqActivateNotificationListener: ', error.message);\r\n                return [notificationActions.ActivateNotificationListenerFail()];\r\n            }),\r\n        ),\r\n    );\r\n    // #endregion\r\n\r\n    // #region ReqUserNotifications\r\n    ReqUserNotifications$ = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(notificationActions.ReqUserNotifications),\r\n            mergeMap(() => {\r\n                return this.store.select(fromRoot.authSelectors.getUser).pipe(\r\n                    mergeMap((user) => {\r\n                        return this.notificationService.getUserNotifications(user.uid);\r\n                    }),\r\n                    switchMap((userNotifications) => {\r\n                        return [notificationActions.UserNotificationsSuccess({ userNotifications })];\r\n                    }),\r\n                    catchError((error) => {\r\n                        console.log('ReqUserNotifications: ', error.message);\r\n                        return [notificationActions.UserNotificationsFail()];\r\n                    }),\r\n                );\r\n            }),\r\n        ),\r\n    );\r\n    // #endregion\r\n\r\n    // #region ReqClientNotifications\r\n    ReqClientNotifications$ = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(notificationActions.ReqClientNotifications),\r\n            mergeMap((payload) => {\r\n                return this.notificationService.getClientsNotifications([payload.clientUid]).pipe(\r\n                    switchMap((clientNotifications) => {\r\n                        return [notificationActions.ClientNotificationsSuccess({ clientNotifications })];\r\n                    }),\r\n                    catchError((error) => {\r\n                        console.log('ReqClientNotifications: ', error.message);\r\n                        return [notificationActions.ClientNotificationsFail()];\r\n                    }),\r\n                );\r\n            }),\r\n        ),\r\n    );\r\n    // #endregion\r\n\r\n    // #region ReqToggleNotificationStatus\r\n    ReqToggleNotificationStatus$ = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(notificationActions.ReqToggleNotificationStatus),\r\n            mergeMap((payload) => {\r\n                return this.notificationService.toggleNotificationStatus(\r\n                    payload.notificationUids,\r\n                    payload.toggleForAgent,\r\n                );\r\n            }),\r\n            mergeMap(() => {\r\n                return [notificationActions.ToggleNotificationStatusSuccess()];\r\n            }),\r\n            catchError((error) => {\r\n                console.log('ReqToggleNotificationStatus: ', error.message);\r\n                return [notificationActions.ToggleNotificationStatusFail()];\r\n            }),\r\n        ),\r\n    );\r\n    // #endregion\r\n\r\n    constructor(\r\n        private actions$: Actions,\r\n        private notificationService: NotificationsService,\r\n        private store: Store<fromRoot.State>,\r\n    ) {}\r\n}\r\n","import { Action, createReducer, on } from '@ngrx/store';\r\nimport { EntityState, EntityAdapter, createEntityAdapter } from '@ngrx/entity';\r\nimport * as notificationsActions from './notifications.actions';\r\nimport { CurrentNotification, Notification } from 'src/app/core/models/viewModels';\r\nimport { retry } from 'rxjs/operators';\r\n\r\nexport const notificationsFeatureKey = 'notifications';\r\n\r\nexport interface State extends EntityState<Notification> {\r\n    permissionStatus: boolean | null;\r\n    currentNotification: CurrentNotification | null;\r\n}\r\n\r\nexport const adapter: EntityAdapter<Notification> = createEntityAdapter<Notification>({\r\n    selectId: (model: Notification) => model.uid,\r\n});\r\n\r\nexport const initialState: State = adapter.getInitialState({\r\n    ids: [],\r\n    entities: {},\r\n    permissionStatus: null,\r\n    currentNotification: null,\r\n});\r\n\r\nexport const reducer = createReducer(\r\n    initialState,\r\n    on(notificationsActions.CloudMessagingPermissionStatusSuccess, (state, action) => {\r\n        return { ...state, permissionStatus: action.permissionStatus };\r\n    }),\r\n    on(notificationsActions.ReqUpdateCloudMessagingPermissionStatus, (state, action) => {\r\n        return { ...state, permissionStatus: action.permissionStatus };\r\n    }),\r\n    on(notificationsActions.ReqUpdateCurrentNotification, (state, action) => {\r\n        return { ...state, currentNotification: action.notification };\r\n    }),\r\n    on(notificationsActions.UserNotificationsSuccess, (state, action) => {\r\n        const newState = adapter.setAll(action.userNotifications, state);\r\n\r\n        return newState;\r\n    }),\r\n    on(notificationsActions.ClientNotificationsSuccess, (state, action) => {\r\n        const newState = adapter.setAll(action.clientNotifications, state);\r\n\r\n        return newState;\r\n    }),\r\n    on(notificationsActions.ClearNotifications, () => {\r\n        return initialState;\r\n    }),\r\n);\r\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\r\nimport * as fromNotifications from './notifications.reducer';\r\nimport * as fromAuth from 'src/app/core/ngrx/authState/auth.reducer';\r\nimport { User } from 'src/app/core/models/queryModels';\r\nimport { requiredUserProfileItems } from 'src/app/core/helpers/constants';\r\n\r\n// #region Feature Selectors\r\n\r\nexport const selectNotificationsState = createFeatureSelector<fromNotifications.State>(\r\n    fromNotifications.notificationsFeatureKey,\r\n);\r\n\r\nexport const selectAuthState = createFeatureSelector<fromAuth.State>(fromAuth.authFeatureKey);\r\n\r\n// #endregion\r\n\r\n// #region GetPermissionStatus\r\n\r\nexport const getPermissionStatus = createSelector(selectNotificationsState, (state) => {\r\n    return state.permissionStatus;\r\n});\r\n\r\n// #endregion\r\n\r\n// #region getCurrentNotification\r\n\r\nexport const getCurrentNotification = createSelector(selectNotificationsState, (state) => {\r\n    return state.currentNotification;\r\n});\r\n\r\n// #endregion\r\n\r\n// #region getNotificationCounts\r\n\r\nexport const getNotificationCounts = createSelector(\r\n    selectNotificationsState,\r\n    selectAuthState,\r\n    (notificationState, authState) => {\r\n        const notifications = Object.values(notificationState.entities);\r\n        const profileNotificationCount = isProfileCompleteHelper(authState?.user) ? 0 : 1;\r\n        return {\r\n            total: notifications.length + profileNotificationCount,\r\n            profile: profileNotificationCount,\r\n            negotiations: notifications.filter(\r\n                (notification) => notification.lotStatus !== 'complete' && !notification.senderUid,\r\n            ).length,\r\n            completedNegotiations: notifications.filter((notification) => notification.lotStatus === 'complete').length,\r\n            agentRequest: notifications.filter((notification) => notification.senderUid).length,\r\n        };\r\n    },\r\n);\r\n\r\n// #endregion\r\n\r\n// #region getNotificationsForDropDown\r\n\r\nexport const getNotificationsForDropDown = createSelector(selectNotificationsState, (state) => {\r\n    const notifications = Object.values(state.entities);\r\n    return {\r\n        negotiations: notifications.filter(\r\n            (notification) =>\r\n                notification.lotStatus === 'negotiating' ||\r\n                notification.lotStatus === 'pending' ||\r\n                notification.lotStatus === 'declined',\r\n        ),\r\n        matches: notifications.filter(\r\n            (notification) => notification.lotStatus === 'new' || notification.lotStatus === 'complete',\r\n        ),\r\n        brokers: notifications.filter((notification) => notification?.senderUid),\r\n    };\r\n});\r\n\r\n// #endregion\r\n\r\n// #region getIncompleteUserProfileItems\r\n\r\nexport const getIncompleteUserProfileItems = createSelector(selectAuthState, (state) => {\r\n    const requiredKeys = requiredUserProfileItems;\r\n    return requiredKeys.filter((requiredKey) => !state.user[requiredKey]);\r\n});\r\n\r\n// #endregion\r\n\r\n// #region getNegotiationNotifications\r\n\r\nexport const getNegotiationNotifications = createSelector(selectNotificationsState, (state) => {\r\n    return [...Object.values(state.entities).filter((notification) => notification.lotStatus !== 'complete')];\r\n});\r\n\r\n// #endregion\r\n\r\n// #region getCompletedNegotiationNotifications\r\n\r\nexport const getCompletedNegotiationNotifications = createSelector(selectNotificationsState, (state) => {\r\n    return [...Object.values(state.entities).filter((notification) => notification.lotStatus === 'complete')];\r\n});\r\n\r\n// #endregion\r\n\r\n// #region Helpers\r\n\r\nfunction isProfileCompleteHelper(user: User): boolean {\r\n    return Boolean(user?.firstname && user?.lastname && user?.email && user?.phone && user?.location);\r\n}\r\n\r\n// #endregion\r\n","import * as scoutActions from './scout.actions';\r\nimport * as scoutSelectors from './scout.selectors';\r\n\r\nimport { scoutFeatureKey, State as ScoutState, reducer as scoutReducer } from './scout.reducer';\r\n\r\nexport { scoutActions, scoutSelectors, scoutFeatureKey, ScoutState, scoutReducer };\r\n","import { ScoutAndFineTune, Crop } from './../../../models/queryModels';\r\nimport { createAction, props } from '@ngrx/store';\r\nimport { Scout, FineTune, IdName } from 'src/app/core/models/queryModels';\r\nimport { ScoutSearchResult, ScoutCard } from 'src/app/core/models/viewModels';\r\n\r\n//#region Create\r\nexport const ReqCreateScout = createAction('[Scout Search Page] ReqCreateScout', props<{ isPublic: boolean }>());\r\nexport const CreateScoutFail = createAction('[ReqCreateScout] CreateScoutFail');\r\nexport const CreateScoutSuccess = createAction('[ReqCreateScout] CreateScoutSuccess', props<{ scout: ScoutCard }>());\r\n//#endregion\r\n\r\n//#region Read\r\nexport const ReqScoutSearch = createAction('[Market Search Page] ReqScoutSearch', props<{ scout: Scout }>());\r\nexport const ScoutSearchFail = createAction('[ReqScoutSearch] ScoutSearchFail');\r\nexport const ScoutSearchSuccess = createAction(\r\n    '[ReqScoutSearch] ScoutSearchSuccess',\r\n    props<{ scoutSearch: ScoutSearchResult }>(),\r\n);\r\n\r\nexport const ReqFineTunedScoutSearch = createAction(\r\n    '[Fine-Tune Page] ReqFineTunedScoutSearch',\r\n    props<{ searchInfo: FineTune }>(),\r\n);\r\nexport const FineTunedScoutSearchFail = createAction('[ReqFineTunedScoutSearch] FineTunedScoutSearchFail');\r\nexport const FineTunedScoutSearchSuccess = createAction(\r\n    '[ReqFineTunedScoutSearch] FineTunedScoutSearchSuccess',\r\n    props<{ scoutSearch: ScoutSearchResult }>(),\r\n);\r\n\r\nexport const ReqScoutFormData = createAction('[Create/Edit Market] ReqScoutFormData', props<{ scoutId?: number }>());\r\nexport const ScoutFormDataFail = createAction('[ReqScoutFormData] ScoutFormDataFail');\r\nexport const ScoutFormDataSuccess = createAction(\r\n    '[ReqScoutFormData] ScoutFormDataSuccess',\r\n    props<{ scoutAndFineTune: ScoutAndFineTune; crops: Crop[]; unitsOfMeasure: IdName[] }>(),\r\n);\r\n\r\nexport const ReqUserScoutCards = createAction('[Create/Edit Market] ReqUserScoutCards');\r\nexport const UserScoutCardsFail = createAction('[ReqUserScoutCards] UserScoutCardsFail');\r\nexport const UserScoutCardsSuccess = createAction(\r\n    '[ReqUserScoutCards] UserScoutCardsSuccess',\r\n    props<{ scoutCards: ScoutCard[] }>(),\r\n);\r\n\r\n//#endregion\r\n\r\n//#region Update\r\nexport const ReqUpdateScout = createAction(\r\n    '[Edit Market Page] ReqUpdateScout',\r\n    props<{ scoutAndFineTune: ScoutAndFineTune }>(),\r\n);\r\nexport const UpdateScoutFail = createAction('[ReqUpdateScout] UpdateScoutFail');\r\nexport const UpdateScoutSuccess = createAction('[ReqUpdateScout] UpdateScoutSuccess', props<{ scout: ScoutCard }>());\r\n//#endregion\r\n\r\n//#region Delete\r\nexport const ReqDeleteScout = createAction(\r\n    '[Edit Market Page] ReqDeleteScout',\r\n    props<{ scoutId: number; clientUid?: string }>(),\r\n);\r\nexport const DeleteScoutFail = createAction('[ReqDeleteScout] DeleteScoutSuccess');\r\nexport const DeleteScoutSuccess = createAction('[ReqDeleteScout] DeleteScoutSuccess', props<{ scoutId: number }>());\r\n//#endregion\r\n\r\n// #region Never Fail\r\nexport const ReqUpdateSearchValues = createAction(\r\n    '[Browse The Market Page] ReqUpdateSearchValues',\r\n    props<{ scout: Scout }>(),\r\n);\r\n// #endregion\r\n\r\n// #region Clear All Scouts\r\n\r\nexport const ClearAllScouts = createAction('[ Broker Dashboard ] [NF] ClearAllScouts');\r\n\r\n// #endregion\r\n","import { ScoutCard } from 'src/app/core/models/viewModels';\r\nimport { FineTunedScout, ScoutAndFineTune } from './../../../models/queryModels';\r\nimport { Scout, FineTune } from 'src/app/core/models/queryModels';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ApiService } from 'src/app/core/services/api/api.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\r\n\r\nimport { switchMap, mergeMap, catchError, take } from 'rxjs/operators';\r\nimport { of, combineLatest } from 'rxjs';\r\n\r\nimport * as actions from 'src/app/core/helpers/index.actions';\r\nimport * as fromRoot from 'src/app/core/ngrx/reducers/index';\r\nimport * as snackBarConfigs from 'src/app/core/helpers/snackbar';\r\n\r\nimport { ScoutService } from 'src/app/core/services/scout/scout.service';\r\nimport { Store, select } from '@ngrx/store';\r\nimport { scoutSelectors } from '.';\r\n\r\n@Injectable()\r\nexport class MarketEffects {\r\n    //#region Create\r\n    // #region ReqCreateScout\r\n    ReqCreateScout$ = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(actions.scoutActions.ReqCreateScout),\r\n            switchMap((payload) => {\r\n                return combineLatest([\r\n                    this.store.pipe(\r\n                        select(fromRoot.authSelectors.getUserEntities),\r\n                        take(1),\r\n                        switchMap((entities) => {\r\n                            return this.api.getEntityById(entities[0].id);\r\n                        }),\r\n                    ),\r\n                    this.store.pipe(select(scoutSelectors.getSearchCriteria), take(1)),\r\n                    this.store.pipe(select(scoutSelectors.getFineTune), take(1)),\r\n                    this.store.pipe(select(scoutSelectors.getAllScoutCards), take(1)),\r\n                ]).pipe(\r\n                    switchMap(([entity, scout, fineTune, scoutCards]) => {\r\n                        const scoutAndFineTune: ScoutAndFineTune = {\r\n                            scout: {\r\n                                ...scout,\r\n                                isPublic: payload.isPublic,\r\n                                tradingEntityId: entity.tradingEntities[0].id,\r\n                            },\r\n                            fineTune: fineTune,\r\n                        };\r\n                        this.checkForDuplicateScouts(scout, scoutCards);\r\n                        return this.api.createScout(scoutAndFineTune);\r\n                    }),\r\n                    mergeMap((scout) => {\r\n                        return [actions.scoutActions.CreateScoutSuccess({ scout })];\r\n                    }),\r\n                    catchError((error) => {\r\n                        console.log('ReqCreateMarket: ', error.message);\r\n                        if (error.message === 'Duplicate Scout Card Found In Database.') {\r\n                            this.snackbar.open(\r\n                                'A Duplicate Scout Was Found In Database.',\r\n                                'CLOSE',\r\n                                snackBarConfigs.errorConfig,\r\n                            );\r\n                        } else {\r\n                            this.snackbar.open(\r\n                                'We were unable to create a Scout from your search criteria. Please try again.',\r\n                                'CLOSE',\r\n                                snackBarConfigs.errorConfig,\r\n                            );\r\n                        }\r\n\r\n                        return [actions.scoutActions.CreateScoutFail()];\r\n                    }),\r\n                );\r\n            }),\r\n        ),\r\n    );\r\n\r\n    // #endregion\r\n    //#endregion\r\n\r\n    //#region Read\r\n\r\n    // #region ReqSearchMarket\r\n    ReqSearchScout$ = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(actions.scoutActions.ReqScoutSearch),\r\n            switchMap((payload) => {\r\n                return this.store.pipe(\r\n                    select(fromRoot.authSelectors.getUserEntities),\r\n                    take(1),\r\n                    switchMap((entities) => {\r\n                        if (entities[0]) {\r\n                            return this.api.getEntityById(entities[0].id);\r\n                        }\r\n                        return [null];\r\n                    }),\r\n                    switchMap((entity) => {\r\n                        return this.api.getScoutSearchResults({\r\n                            ...payload.scout,\r\n                            tradingEntityId: entity?.tradingEntities[0].id || 0,\r\n                        });\r\n                    }),\r\n                    mergeMap((searchResult) => {\r\n                        return [actions.scoutActions.ScoutSearchSuccess({ scoutSearch: searchResult })];\r\n                    }),\r\n                    catchError((error) => {\r\n                        console.log('ReqSearchMarket: ', error.message);\r\n                        this.snackbar.open(\r\n                            'There was an issue retrieving results for the current search criteria.',\r\n                            'CLOSE',\r\n                            snackBarConfigs.errorConfig,\r\n                        );\r\n                        return [actions.scoutActions.ScoutSearchFail()];\r\n                    }),\r\n                );\r\n            }),\r\n        ),\r\n    );\r\n    // #endregion\r\n\r\n    // #region Fine-Tune Scout Search\r\n    ReqSearchFineTunedScout$ = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(actions.scoutActions.ReqFineTunedScoutSearch),\r\n            switchMap((payload) => {\r\n                return of(payload).pipe(\r\n                    switchMap(() => {\r\n                        return this.store.select(scoutSelectors.getSearchCriteria);\r\n                    }),\r\n                    mergeMap((searchCriteria) => {\r\n                        const fineTunedSearchCriteria: FineTunedScout = this.generateFineTunedScoutCriteria(\r\n                            { ...payload.searchInfo },\r\n                            searchCriteria,\r\n                        );\r\n                        return this.api.getFineTunedScoutSearchResults(fineTunedSearchCriteria);\r\n                    }),\r\n                    mergeMap((searchResult) => {\r\n                        return [actions.scoutActions.FineTunedScoutSearchSuccess({ scoutSearch: searchResult })];\r\n                    }),\r\n                    catchError((error) => {\r\n                        console.log('ReqSearchFineTunedScout: ', error.message);\r\n                        this.snackbar.open(\r\n                            'There was an issue retrieving results for the current search criteria.',\r\n                            'CLOSE',\r\n                            snackBarConfigs.errorConfig,\r\n                        );\r\n                        return [actions.scoutActions.FineTunedScoutSearchFail()];\r\n                    }),\r\n                );\r\n            }),\r\n        ),\r\n    );\r\n    // #endregion\r\n\r\n    // #region ReqScoutFormData\r\n    ReqScoutFormData$ = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(actions.scoutActions.ReqScoutFormData),\r\n            mergeMap((payload) => {\r\n                return this.scoutService.getScoutEditData(payload.scoutId).pipe(\r\n                    mergeMap(([scoutAndFineTune, crops, unitsOfMeasure]) => {\r\n                        return [actions.scoutActions.ScoutFormDataSuccess({ scoutAndFineTune, crops, unitsOfMeasure })];\r\n                    }),\r\n                    catchError((error) => {\r\n                        console.log('ReqMarketFormData: ', error.message);\r\n                        return [actions.scoutActions.ScoutFormDataFail()];\r\n                    }),\r\n                );\r\n            }),\r\n        ),\r\n    );\r\n    // #endregion\r\n\r\n    // #region ReqUserScoutCards\r\n    ReqUserScoutCards$ = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(actions.scoutActions.ReqUserScoutCards),\r\n            switchMap((payload) => {\r\n                return this.store.pipe(\r\n                    select(fromRoot.authSelectors.getUserEntities),\r\n                    take(1),\r\n                    switchMap((entities) => {\r\n                        return this.api.getEntityById(entities[0].id);\r\n                    }),\r\n                    switchMap((entity) => {\r\n                        const tradingEntityId = entity.tradingEntities[0].id;\r\n\r\n                        return this.api.getUserScoutCards(tradingEntityId);\r\n                    }),\r\n                    switchMap((scoutCards) => {\r\n                        return [actions.scoutActions.UserScoutCardsSuccess({ scoutCards })];\r\n                    }),\r\n                    catchError((error) => {\r\n                        console.log('ReqUserScoutCards: ', error.message);\r\n                        return [actions.scoutActions.UserScoutCardsFail()];\r\n                    }),\r\n                );\r\n            }),\r\n        ),\r\n    );\r\n    // #endregion\r\n\r\n    //#endregion\r\n\r\n    //#region Update\r\n    // #region ReqUpdateScout\r\n    ReqUpdateScout$ = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(actions.scoutActions.ReqUpdateScout),\r\n            switchMap((payload) => {\r\n                const scoutAndFineTuneChanges = {\r\n                    ...payload.scoutAndFineTune,\r\n                };\r\n                return this.api.updateScout(scoutAndFineTuneChanges).pipe(\r\n                    switchMap((scout) => {\r\n                        return [actions.scoutActions.UpdateScoutSuccess({ scout })];\r\n                    }),\r\n                    catchError((error) => {\r\n                        console.log('ReqUpdateMarket: ', error.message);\r\n                        return [actions.scoutActions.UpdateScoutFail()];\r\n                    }),\r\n                );\r\n            }),\r\n        ),\r\n    );\r\n    // #endregion\r\n    //#endregion\r\n\r\n    //#region Delete\r\n    ReqDeleteScout$ = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(actions.scoutActions.ReqDeleteScout),\r\n            mergeMap((payload) => {\r\n                return of(payload).pipe(\r\n                    mergeMap(({ scoutId, clientUid }) => {\r\n                        return this.api.deleteScout(scoutId, clientUid);\r\n                    }),\r\n                    mergeMap(({ id }) => {\r\n                        this.snackbar.open('Successfully Deleted The Scout.', 'CLOSE', snackBarConfigs.successConfig);\r\n                        return [actions.scoutActions.DeleteScoutSuccess({ scoutId: id })];\r\n                    }),\r\n                    catchError((error) => {\r\n                        console.log('ReqDeleteScout: ', error.message);\r\n                        this.snackbar.open(\r\n                            'An error occurred when deleting the Scout.',\r\n                            'CLOSE',\r\n                            snackBarConfigs.errorConfig,\r\n                        );\r\n                        return [actions.scoutActions.DeleteScoutFail()];\r\n                    }),\r\n                );\r\n            }),\r\n        ),\r\n    );\r\n    //#endregion\r\n\r\n    //#region Helpers\r\n    generateFineTunedScoutCriteria(searchInfo: FineTune, searchCriteria: Scout) {\r\n        const fineTunedSearchCriteria: FineTunedScout = {\r\n            id: searchCriteria.id,\r\n            creatorType: searchCriteria.creatorType,\r\n            scoutType: searchCriteria.scoutType,\r\n            crop: searchCriteria.crop,\r\n            inSouthAfrica: searchCriteria.inSouthAfrica,\r\n            googlePlaceId: searchCriteria.googlePlaceId,\r\n            town: searchCriteria.town,\r\n            location: searchCriteria.location,\r\n            radius: searchCriteria.radius,\r\n            isPublic: searchCriteria.isPublic,\r\n            exFarm: searchInfo.exFarm,\r\n            hasLots: searchInfo.hasLots,\r\n            rating: searchInfo.rating,\r\n        };\r\n        return fineTunedSearchCriteria;\r\n    }\r\n\r\n    checkForDuplicateScouts(scout: Scout, scoutCards: ScoutCard[]) {\r\n        const duplicateExists: boolean = scoutCards.some((scoutCard) => {\r\n            return (\r\n                scoutCard.scoutType === scout.scoutType &&\r\n                scoutCard.town === scout.town &&\r\n                scoutCard.crop.id === scout.crop.id\r\n            );\r\n        });\r\n        if (duplicateExists) throw new Error('Duplicate Scout Card Found In Database.');\r\n    }\r\n    //#endregion\r\n\r\n    constructor(\r\n        private actions$: Actions,\r\n        private api: ApiService,\r\n        private store: Store<fromRoot.State>,\r\n        private scoutService: ScoutService,\r\n        private snackbar: MatSnackBar,\r\n    ) {}\r\n}\r\n","import { ReqLogoutAction } from './../../authState/auth.actions';\r\nimport { ScoutCard, ScoutSearchResult } from './../../../models/viewModels';\r\nimport { createEntityAdapter, EntityAdapter, EntityState } from '@ngrx/entity';\r\nimport { Action, createReducer, on } from '@ngrx/store';\r\n\r\nimport * as ScoutActions from './scout.actions';\r\nimport { Scout, FineTune } from 'src/app/core/models/queryModels';\r\n\r\nexport const scoutFeatureKey = 'scout';\r\n\r\nexport interface State extends EntityState<ScoutCard> {\r\n    searchResult: ScoutSearchResult;\r\n    searchValues: Scout;\r\n    currentScout: Scout;\r\n    fineTune: FineTune;\r\n}\r\n\r\nexport const adapter: EntityAdapter<ScoutCard> = createEntityAdapter({\r\n    selectId: selectScoutId,\r\n});\r\n\r\nexport function selectScoutId(scout: ScoutCard): number {\r\n    return scout.id;\r\n}\r\n\r\nexport const initialState: State = adapter.getInitialState<State>({\r\n    ids: [],\r\n    entities: {},\r\n    searchResult: null,\r\n    searchValues: null,\r\n    currentScout: null,\r\n    fineTune: null,\r\n});\r\n\r\nexport const reducer = createReducer(\r\n    initialState,\r\n    on(ScoutActions.ScoutSearchSuccess, ScoutActions.FineTunedScoutSearchSuccess, (state, action) => {\r\n        return { ...state, searchResult: action.scoutSearch };\r\n    }),\r\n    on(ScoutActions.ReqScoutSearch, ScoutActions.ReqUpdateSearchValues, (state, action) => {\r\n        return { ...state, searchValues: action.scout };\r\n    }),\r\n    on(ScoutActions.CreateScoutSuccess, ScoutActions.UpdateScoutSuccess, (state, action) => {\r\n        if (action.scout) {\r\n            const newState = adapter.upsertOne(action.scout, state);\r\n            return { ...newState, searchResult: null, fineTune: null };\r\n        } else {\r\n            return state;\r\n        }\r\n    }),\r\n    on(ScoutActions.ScoutFormDataSuccess, (state, action) => {\r\n        if (action.scoutAndFineTune) {\r\n            return {\r\n                ...state,\r\n                currentScout: action.scoutAndFineTune.scout,\r\n                fineTune: action.scoutAndFineTune.fineTune,\r\n            };\r\n        } else {\r\n            return state;\r\n        }\r\n    }),\r\n    on(ScoutActions.UserScoutCardsSuccess, (state, action) => {\r\n        if (action.scoutCards) {\r\n            const newState = adapter.upsertMany(action.scoutCards, state);\r\n            return { ...newState, searchResult: null, fineTune: null };\r\n        } else {\r\n            return state;\r\n        }\r\n    }),\r\n    on(ScoutActions.DeleteScoutSuccess, (state, action) => {\r\n        const newState = adapter.removeOne(action.scoutId, state);\r\n        return { ...newState, currentScout: null, fineTune: null };\r\n    }),\r\n    on(ScoutActions.ReqFineTunedScoutSearch, (state, action) => {\r\n        return { ...state, fineTune: action.searchInfo };\r\n    }),\r\n    on(ReqLogoutAction, ScoutActions.ClearAllScouts, () => {\r\n        return initialState;\r\n    }),\r\n);\r\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\r\nimport * as fromScout from './scout.reducer';\r\n\r\nexport const selectScoutState = createFeatureSelector<fromScout.State>(fromScout.scoutFeatureKey);\r\n\r\nexport const {\r\n    selectIds: getScoutCardIds,\r\n    selectEntities: getScoutCardEntities,\r\n    selectAll: getAllScoutCards,\r\n    selectTotal: getTotalScoutCards,\r\n} = fromScout.adapter.getSelectors(selectScoutState);\r\n\r\nexport const getSearchResults = createSelector(selectScoutState, (scoutState) => {\r\n    return scoutState.searchResult || null;\r\n});\r\n\r\nexport const getSearchCriteria = createSelector(selectScoutState, (scoutState) => {\r\n    return scoutState.searchValues || null;\r\n});\r\n\r\nexport const getCurrentFullScout = createSelector(selectScoutState, (scoutState) => {\r\n    return scoutState.currentScout || null;\r\n});\r\n\r\nexport const getFineTune = createSelector(selectScoutState, (scoutState) => {\r\n    return scoutState.fineTune;\r\n});\r\n\r\nexport const getAllOrderedScoutCards = createSelector(getAllScoutCards, (scoutCards) => {\r\n    const orderedScoutCards = scoutCards.sort(\r\n        (first, second) => second.createdDate.getTime() - first.createdDate.getTime(),\r\n    );\r\n\r\n    return orderedScoutCards;\r\n});\r\n","import { pick, cloneDeep } from 'lodash';\r\n\r\n// #region NGRX helpers\r\n/**\r\n *  @summary Used in the ngrx reducers\r\n *   Removes loading for the action flow from the loading dictionary\r\n */\r\nexport function removeLoading<T>(state: T, payload: { type: string; executedTime: number }): T {\r\n    try {\r\n        const newState: T = cloneDeep(state);\r\n        delete newState['dictLoading'][payload.executedTime];\r\n        return { ...newState };\r\n    } catch {\r\n        return { ...state, dictLoading: {} };\r\n    }\r\n}\r\n/**\r\n *  @summary Removes loading for the action flow from the loading dictionary\r\n */\r\nexport function addLoading<T>(state: T, payload: { type: string; executedTime: number }): T {\r\n    try {\r\n        const newState: T = cloneDeep(state);\r\n        newState['dictLoading'][payload.executedTime] = payload.type;\r\n        return { ...newState };\r\n    } catch {\r\n        return { ...state, dictLoading: { [payload.executedTime]: payload.type } };\r\n    }\r\n}\r\n\r\n/**\r\n *\r\n * @param keyToSave  The location to save the data in the local storage\r\n * @param state The state which will be saved.\r\n * @param properties An array of of the properties to save from state. Nested properties can be retrieved through\r\n * by adding the . syntax ['nested.property']. if no properties are provided the entire state will be saved\r\n *\r\n * @summary this function will be used to save needed state values to local storage. These values will later\r\n *  be needed to hydrate state.\r\n */\r\nexport function saveStateData<T>(keyToSave: string, state: T, propertiesToSave?: string[]) {\r\n    if (propertiesToSave) {\r\n        const dataToSave = pick(state, propertiesToSave);\r\n        localStorage.setItem(keyToSave, JSON.stringify(dataToSave));\r\n    } else {\r\n        localStorage.setItem(keyToSave, JSON.stringify(state));\r\n    }\r\n}\r\nexport function getStateData<T>(keyToGet: string): T {\r\n    return JSON.parse(localStorage.getItem(keyToGet));\r\n}\r\n// #endregion\r\n","import { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { State } from './reducers/index';\r\nimport { environment } from 'src/environments/environment';\r\nimport { NgModule, APP_INITIALIZER } from '@angular/core';\r\nimport { Store, StoreModule } from '@ngrx/store';\r\nimport { reducers, metaReducers } from './reducers';\r\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\r\n\r\nimport { ReqCheckAuthorization } from './app-state/app-state.actions';\r\n\r\n//#region Effects\r\nimport { EffectsModule } from '@ngrx/effects';\r\nimport { AuthEffects } from './authState/auth.effects';\r\nimport { AppStateEffects } from './app-state/app-state.effects';\r\nimport { DeliveryPointsEffects } from './entities/delivery-points/delivery-points.effects';\r\nimport { MarketEffects } from './entities/scout/scout.effects';\r\nimport { BrokersEffects } from './brokers/brokers-effects.service';\r\nimport { CropEffects } from './crop/crop.effects';\r\nimport { NotificationsEffects } from './entities/notifications/notifications.effects';\r\n//#endregion\r\n\r\n@NgModule({\r\n    imports: [\r\n        MatSnackBarModule,\r\n        StoreModule.forRoot(reducers, {\r\n            metaReducers,\r\n            runtimeChecks: {\r\n                strictStateImmutability: true,\r\n                strictActionImmutability: true,\r\n            },\r\n        }),\r\n        StoreDevtoolsModule.instrument({ maxAge: 25, logOnly: environment.production }),\r\n        EffectsModule.forRoot([\r\n            AuthEffects,\r\n            AppStateEffects,\r\n            DeliveryPointsEffects,\r\n            MarketEffects,\r\n            CropEffects,\r\n            NotificationsEffects,\r\n            BrokersEffects,\r\n        ]),\r\n    ],\r\n    providers: [\r\n        {\r\n            provide: APP_INITIALIZER,\r\n            useFactory: (store: Store<State>) => {\r\n                return () => {\r\n                    store.dispatch(ReqCheckAuthorization({ executedTime: Date.now() }));\r\n                };\r\n            },\r\n            multi: true,\r\n            deps: [Store],\r\n        },\r\n    ],\r\n    exports: [StoreModule, StoreDevtoolsModule, EffectsModule],\r\n})\r\nexport class NGRXModule {}\r\n","import * as paygateActions from './paygate.actions';\r\n\r\nexport { paygateActions };\r\n","import { createAction, props } from '@ngrx/store';\r\nimport { Transaction } from '../../models/queryModels';\r\n\r\n// #region ReqPaySubs\r\nexport const ReqPaySubs = createAction('[Subscription modal] ReqPaySubs', props<{ transaction: Transaction }>());\r\nexport const ReqPaySubsFail = createAction('[ReqPaySubs] ReqPaySubsFail');\r\nexport const ReqPaySubsSuccess = createAction('[ReqPaySubs] ReqPaySubsSuccess');\r\n//#endregion\r\n","import { Crop } from './../../models/queryModels';\r\nimport { ScoutCard } from './../../models/viewModels';\r\nimport { DeliveryPoint, IdName } from 'src/app/core/models/queryModels';\r\nimport { Dictionary } from '@ngrx/entity';\r\nimport { ActionReducer, ActionReducerMap, createFeatureSelector, createSelector, MetaReducer } from '@ngrx/store';\r\nimport { environment } from 'src/environments/environment';\r\nimport * as fromAuth from '../authState/auth.reducer';\r\nimport * as fromAppState from '../app-state/app-state.reducer';\r\nimport * as fromScout from '../entities/scout/scout.reducer';\r\nimport * as fromDeliveryPoints from '../entities/delivery-points/delivery-points.reducer';\r\nimport * as fromCrop from '../crop/crop.reducer';\r\nimport * as fromNotifications from '../entities/notifications/notifications.reducer';\r\nimport * as fromAgents from '../brokers/brokers.reducer';\r\n\r\nimport * as _deliveryPointsSelectors from '../entities/delivery-points/delivery-points.selectors';\r\nimport * as _scoutSelectors from '../entities/scout/scout.selectors';\r\nimport * as _authSelectors from '../authState/auth.selectors';\r\nimport * as _cropSelectors from '../crop/crop.selectors';\r\n\r\nexport interface State {\r\n    [fromAuth.authFeatureKey]: fromAuth.State;\r\n    [fromAppState.appStateFeatureKey]: fromAppState.State;\r\n    [fromDeliveryPoints.deliveryPointsFeatureKey]: fromDeliveryPoints.State;\r\n    [fromScout.scoutFeatureKey]: fromScout.State;\r\n    [fromCrop.cropFeatureKey]: fromCrop.State;\r\n    [fromNotifications.notificationsFeatureKey]: fromNotifications.State;\r\n    [fromAgents.brokersFeatureKey]: fromAgents.State;\r\n}\r\n\r\nexport const reducers: ActionReducerMap<State> = {\r\n    [fromAuth.authFeatureKey]: fromAuth.reducer,\r\n    [fromAppState.appStateFeatureKey]: fromAppState.reducer,\r\n    [fromDeliveryPoints.deliveryPointsFeatureKey]: fromDeliveryPoints.reducer,\r\n    [fromScout.scoutFeatureKey]: fromScout.reducer,\r\n    [fromCrop.cropFeatureKey]: fromCrop.reducer,\r\n    [fromNotifications.notificationsFeatureKey]: fromNotifications.reducer,\r\n    [fromAgents.brokersFeatureKey]: fromAgents.reducer,\r\n};\r\n\r\nexport const metaReducers: MetaReducer<State>[] = !environment.production ? [] : [];\r\n\r\n// #region Selectors\r\n\r\n// #region Feature Selectors\r\nexport const getAppState = createFeatureSelector<State, fromAppState.State>('appState');\r\nexport const getAuthState = createFeatureSelector<State, fromAuth.State>(fromAuth.authFeatureKey);\r\nexport const getDeliveryPointState = createFeatureSelector<State, fromDeliveryPoints.State>(\r\n    fromDeliveryPoints.deliveryPointsFeatureKey,\r\n);\r\n// #endregion\r\n\r\n//#endregion\r\n\r\n// #region App State\r\n//#endregion\r\n\r\n// #region Auth State\r\n\r\n//#endregion\r\n\r\n// #region Create/Edit Market\r\n\r\nexport const getScoutFormData = createSelector(\r\n    _scoutSelectors.getScoutCardEntities,\r\n    getAppState,\r\n    _cropSelectors.selectCropState,\r\n    (\r\n        scoutDictionary: Dictionary<ScoutCard>,\r\n        appState: fromAppState.State,\r\n        cropState: fromCrop.State,\r\n        props: { scoutId: number },\r\n    ): { scout: ScoutCard; crops: Crop[]; unitsOfMeasure: IdName[] } => {\r\n        try {\r\n            const scout = props.scoutId ? scoutDictionary[props.scoutId] : null;\r\n            const crops = cropState.crops;\r\n            const unitsOfMeasure = appState.unitsOfMeasure;\r\n            return { scout: scout, crops, unitsOfMeasure };\r\n        } catch (error) {\r\n            return null;\r\n        }\r\n    },\r\n);\r\n\r\n//#endregion\r\n\r\nexport const authSelectors = _authSelectors;\r\nexport const deliveryPointsSelectors = _deliveryPointsSelectors;\r\nexport const marketSelectors = _scoutSelectors;\r\n","import { MarketFilters, User } from './../../models/queryModels';\r\nimport { DEFAULT_VERIFICATION } from './../../helpers/constants';\r\nimport {\r\n    ScoutCard,\r\n    ScoutSearchResult,\r\n    LotMatch,\r\n    LotCard,\r\n    NegotiationCard,\r\n    LotMatchIteration,\r\n    MarketLotCard,\r\n} from 'src/app/core/models/viewModels';\r\nimport {\r\n    Scout,\r\n    SQL_User,\r\n    Lot,\r\n    Entity,\r\n    FineTunedScout,\r\n    DeliveryPoint,\r\n    IdName,\r\n    ScoutAndFineTune,\r\n    AdditionalEntityDetail,\r\n    DateRange,\r\n    Analytics,\r\n    Crop,\r\n} from 'src/app/core/models/queryModels';\r\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { AngularFireAuth } from '@angular/fire/compat/auth';\r\n\r\nimport { map, tap } from 'rxjs/operators';\r\nimport { dateStringToDate } from '../../helpers/helperFunctions';\r\n\r\nconst API = environment.API;\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class ApiService {\r\n    baseHeaders = {\r\n        firebaseToken: null,\r\n        Authorization:\r\n            'Bearer HhnIC9a99hqp7aW3Vx_Rx_43RcDLoWIxxjw8Ehs-Iqpeg2IktY6UYuMNmGGzGdq4ouao0MV0gAIF6kTRaa7zE2CX8GEAEZC9y8PaktdYCUisNWu_aMeO5D4sO5bHMxvZ-9TtIJuSyuPmlve-lsUaGUwhxE-fIGwt2n-igeyZsxuZVtjqUSRitE4u8rtVIJfdlmPhnmvgvWWEr-Gtf5HcmwxI1JU_TTnRc4bTRI6QnU2p4CRa73-ssLB9JBuIKHSEFkoNY8ZlDxUq6a8c_voqdA86Fi0_VefF5aJhVhSnwZi322L4E0YQZNUOMGJGIYhPL45s_V8bsMLU8DIDqS0HUdXB_9cooBGmVMXPqbvBxP21jbBbi37zB3OkiqnE6rOQKpcT-sQrvNrSdE8esnxHrphnyBs1uKGCfSMZHOjQdPHb4PBqcQTc7l97hO0__OSR2__GQ-OVRQ9RvcnQcYRgFu5ulQ5S0gTsDOMihapj4aoe9xA1jHm_6JkmJerXtHzsYTd_jtQps-kjoxugFsRv8BiqLUszkB7Eqd5QjzQ6m6U',\r\n    };\r\n    constructor(private http: HttpClient, private afAuth: AngularFireAuth, private afs: AngularFirestore) {\r\n        this.afAuth.idToken.subscribe((token) => {\r\n            this.baseHeaders.firebaseToken = token ? token : '';\r\n        });\r\n    }\r\n\r\n    //#region AUTH\r\n    getUser(clientUid: string = null): Observable<SQL_User> {\r\n        if (clientUid) {\r\n            return this.http.get<SQL_User>(`${API}/auth/login`, {\r\n                headers: this.baseHeaders,\r\n                params: {\r\n                    clientUid,\r\n                },\r\n            });\r\n        }\r\n        return this.http.get<SQL_User>(`${API}/auth/login`, { headers: this.baseHeaders });\r\n    }\r\n    registerUser(email: string, phoneNumber: string): Observable<SQL_User> {\r\n        return this.http\r\n            .post<SQL_User>(`${API}/auth/register`, { email, phoneNumber }, { headers: this.baseHeaders })\r\n            .pipe(\r\n                tap((sqlUser) => {\r\n                    return this.afs\r\n                        .doc(`Users/${sqlUser.skuduId}`)\r\n                        .update({ matchUser: true, verification: DEFAULT_VERIFICATION });\r\n                }),\r\n            );\r\n    }\r\n\r\n    deleteAccountRequest(user: User): Observable<{ id: number }> {\r\n        return this.http.post<{ id: number }>(`${API}/auth/delete`, { ...user }, { headers: this.baseHeaders });\r\n    }\r\n\r\n    getEntityById(id: number): Observable<Entity> {\r\n        return this.http.get<Entity>(`${API}/entity`, { headers: this.baseHeaders, params: { id: id.toString() } });\r\n    }\r\n    getEntitysDeliveryPoints(entityId: number): Observable<DeliveryPoint[]> {\r\n        return this.http.get<DeliveryPoint[]>(`${API}/delivery-points/entity`, {\r\n            headers: this.baseHeaders,\r\n            params: { id: entityId.toString() },\r\n        });\r\n    }\r\n    saveAdditionalEntityDetails(additionalDetails: AdditionalEntityDetail) {\r\n        return this.http.post<AdditionalEntityDetail>(\r\n            `${API}/entity/equity-info`,\r\n            { ...additionalDetails },\r\n            { headers: this.baseHeaders },\r\n        );\r\n    }\r\n    getAdditionalEntityDetails(id: number): Observable<AdditionalEntityDetail> {\r\n        return this.http.get<AdditionalEntityDetail>(`${API}/entity/equity-info`, {\r\n            headers: this.baseHeaders,\r\n            params: { id: id.toString() },\r\n        });\r\n    }\r\n    //#endregion\r\n\r\n    //#region DELIVERY MANAGEMENT PAGE\r\n    getPublicDeliveryPoints(): Observable<DeliveryPoint[]> {\r\n        return this.http.get<DeliveryPoint[]>(`${API}/delivery-points/is-public`, { headers: this.baseHeaders });\r\n    }\r\n    createDeliveryPoint(deliveryPoint: DeliveryPoint, clientUid: string): Observable<DeliveryPoint> {\r\n        delete deliveryPoint.id;\r\n        return this.http.post<DeliveryPoint>(\r\n            `${API}/delivery-points/create`,\r\n            { ...deliveryPoint },\r\n            { headers: this.baseHeaders, params: { clientUid: clientUid } },\r\n        );\r\n    }\r\n    updateDeliveryPoint(deliveryPoint: DeliveryPoint): Observable<DeliveryPoint> {\r\n        return this.http.post<DeliveryPoint>(\r\n            `${API}/delivery-points/update`,\r\n            { ...deliveryPoint },\r\n            { headers: this.baseHeaders },\r\n        );\r\n    }\r\n    deleteDeliveryPoint(deliveryPointId: number): Observable<{ id: number }> {\r\n        return this.http.post<{ id: number }>(\r\n            `${API}/delivery-points/delete`,\r\n            { id: deliveryPointId },\r\n            { headers: this.baseHeaders },\r\n        );\r\n    }\r\n    getLocationTypes(): Observable<IdName[]> {\r\n        return this.http.get<DeliveryPoint[]>(`${API}/location-types/all`, { headers: this.baseHeaders });\r\n    }\r\n    //#endregion\r\n\r\n    //#region APP\r\n    getAllCrops(): Observable<Crop[]> {\r\n        return this.http.get<Crop[]>(`${API}/crops/crop-categories`, { headers: this.baseHeaders });\r\n    }\r\n    getUnitOfMeasure(): Observable<IdName[]> {\r\n        return this.http.get<IdName[]>(`${API}/unitsOfMeasure/all`, { headers: this.baseHeaders });\r\n    }\r\n    updateUser(detailsToUpdate: {\r\n        uid: string;\r\n        phoneNumber: string;\r\n        email: string;\r\n    }): Observable<{ responseMessage: string }> {\r\n        return this.http.post<{ responseMessage: string }>(\r\n            `${API}/user/update`,\r\n            { ...detailsToUpdate },\r\n            { headers: this.baseHeaders },\r\n        );\r\n    }\r\n    //#endregion\r\n\r\n    //#region SCOUTS\r\n    createScout(scoutAndFineTune: ScoutAndFineTune): Observable<ScoutCard> {\r\n        return this.http\r\n            .post<ScoutCard>(\r\n                `${API}/scout`,\r\n                { scout: scoutAndFineTune.scout, fineTune: scoutAndFineTune.fineTune },\r\n                { headers: this.baseHeaders },\r\n            )\r\n            .pipe(map((scoutCard) => dateStringToDate(scoutCard)));\r\n    }\r\n    getScoutSearchResults(scoutSearch: Scout): Observable<ScoutSearchResult> {\r\n        return this.http\r\n            .post<ScoutSearchResult>(`${API}/scout/search`, { ...scoutSearch }, { headers: this.baseHeaders })\r\n            .pipe(\r\n                map((searchReturn) => {\r\n                    return { ...searchReturn };\r\n                }),\r\n            );\r\n    }\r\n    getFineTunedScoutSearchResults(scoutSearch: FineTunedScout): Observable<ScoutSearchResult> {\r\n        return this.http\r\n            .post<ScoutSearchResult>(`${API}/scout/fine-tune`, { ...scoutSearch }, { headers: this.baseHeaders })\r\n            .pipe(\r\n                map((searchReturn) => {\r\n                    return { ...searchReturn };\r\n                }),\r\n            );\r\n    }\r\n    getScoutById(scoutId: number): Observable<ScoutAndFineTune> {\r\n        return this.http.get<ScoutAndFineTune>(`${API}/scout/full`, {\r\n            headers: this.baseHeaders,\r\n            params: { id: scoutId.toString() },\r\n        });\r\n    }\r\n    getScoutCardById(scoutId: number): Observable<ScoutCard> {\r\n        return this.http\r\n            .get<ScoutCard>(`${API}/scout`, { headers: this.baseHeaders, params: { id: scoutId.toString() } })\r\n            .pipe(map((scoutCard) => dateStringToDate(scoutCard)));\r\n    }\r\n    getUserScoutCards(tradingEntityId: number): Observable<ScoutCard[]> {\r\n        return this.http\r\n            .get<ScoutCard[]>(`${API}/scout`, {\r\n                headers: this.baseHeaders,\r\n                params: { tradingEntityId: tradingEntityId.toString() },\r\n            })\r\n            .pipe(map((scoutCards) => dateStringToDate(scoutCards)));\r\n    }\r\n    updateScout(scoutAndFineTune: ScoutAndFineTune): Observable<ScoutCard> {\r\n        return this.http\r\n            .post<ScoutCard>(\r\n                `${API}/scout/update`,\r\n                { scout: scoutAndFineTune.scout, fineTune: scoutAndFineTune.fineTune },\r\n                { headers: this.baseHeaders },\r\n            )\r\n            .pipe(map((scoutCard) => dateStringToDate(scoutCard)));\r\n    }\r\n\r\n    deleteScout(scoutId: number, clientUid: string = null): Observable<{ id: number }> {\r\n        const params = clientUid ? { clientUid } : {};\r\n        return this.http.post<{ id: number }>(\r\n            `${API}/scout/delete`,\r\n            { id: scoutId },\r\n            { headers: this.baseHeaders, params: { ...params } },\r\n        );\r\n    }\r\n    //#endregion\r\n\r\n    //#region LOTS\r\n    createLot(lot: Lot, clientUid: string = null): Observable<LotCard> {\r\n        const params = clientUid ? { clientUid } : {};\r\n        return this.http\r\n            .post<LotCard>(`${API}/lot`, { ...lot }, { headers: this.baseHeaders, params: { ...params } })\r\n            .pipe(map((lotCard) => dateStringToDate(lotCard)));\r\n    }\r\n    getLotById(lotId: number): Observable<Lot> {\r\n        return this.http\r\n            .get<Lot>(`${API}/lot/full`, { headers: this.baseHeaders, params: { id: lotId.toString() } })\r\n            .pipe(map((lotCard) => dateStringToDate(lotCard)));\r\n    }\r\n    getLotCardById(lotId: number): Observable<LotCard> {\r\n        return this.http\r\n            .get<LotCard>(`${API}/lot`, { headers: this.baseHeaders, params: { id: lotId.toString() } })\r\n            .pipe(map((lotCard) => dateStringToDate(lotCard)));\r\n    }\r\n\r\n    updateLot(changes: Lot, clientUid: string = null): Observable<LotCard> {\r\n        const params = clientUid ? { clientUid } : {};\r\n        return this.http\r\n            .post<LotCard>(`${API}/lot/update`, { ...changes }, { headers: this.baseHeaders, params: { ...params } })\r\n            .pipe(map((lotCard) => dateStringToDate(lotCard)));\r\n    }\r\n\r\n    privatiseLots(lotIds: number[]): Observable<any> {\r\n        return this.http.post<any>(`${API}/lot/privatise-lots`, lotIds, { headers: this.baseHeaders });\r\n    }\r\n    getUserLotCards(tradingEntityId: number): Observable<LotCard[]> {\r\n        return this.http\r\n            .get<LotCard[]>(`${API}/lot`, {\r\n                headers: this.baseHeaders,\r\n                params: { tradingEntityId: tradingEntityId.toString() },\r\n            })\r\n            .pipe(\r\n                map((lotCards) => {\r\n                    const convertedLotCards = dateStringToDate(lotCards);\r\n                    return convertedLotCards;\r\n                }),\r\n            );\r\n    }\r\n\r\n    deleteLot(lotId: number, clientUid: string = null): Observable<{ id: number }> {\r\n        const params = clientUid ? { clientUid } : {};\r\n        return this.http.post<{ id: number }>(\r\n            `${API}/lot/delete`,\r\n            { id: lotId },\r\n            { headers: this.baseHeaders, params: { ...params } },\r\n        );\r\n    }\r\n    //#endregion\r\n\r\n    //#region LOT MATCHES\r\n    createLotMatch(lotMatch: LotMatch): Observable<{ id: number }> {\r\n        return this.http.post<{ id: number }>(`${API}/match`, { ...lotMatch }, { headers: this.baseHeaders });\r\n    }\r\n    getLotMatches(lotId: number, radius: number = 50): Observable<LotMatch[]> {\r\n        return this.http\r\n            .get<LotMatch[]>(`${API}/match`, {\r\n                headers: this.baseHeaders,\r\n                params: { lotId: lotId.toString(), radius: radius?.toString() || null },\r\n            })\r\n            .pipe(\r\n                map((lotMatches) => {\r\n                    return lotMatches.map((lotMatch) => {\r\n                        return {\r\n                            ...lotMatch,\r\n                            buyerDetails: dateStringToDate(lotMatch.buyerDetails),\r\n                            sellerDetails: dateStringToDate(lotMatch.sellerDetails),\r\n                        };\r\n                    });\r\n                }),\r\n            );\r\n    }\r\n\r\n    getLotMatchIterations(lotMatchId: number, clientUid: string = null): Observable<LotMatchIteration[]> {\r\n        const params = clientUid ? { id: lotMatchId.toString(), clientUid: clientUid } : { id: lotMatchId.toString() };\r\n\r\n        return this.http\r\n            .get<LotMatchIteration[]>(`${API}/match/iterations`, {\r\n                headers: this.baseHeaders,\r\n                params: { ...params },\r\n            })\r\n            .pipe(\r\n                map((lotMatchIterations) => {\r\n                    return lotMatchIterations.map((lotMatchIteration) => {\r\n                        return {\r\n                            ...dateStringToDate(lotMatchIteration),\r\n                            buyerDetails: dateStringToDate(lotMatchIteration.buyerDetails),\r\n                            sellerDetails: dateStringToDate(lotMatchIteration.sellerDetails),\r\n                        };\r\n                    });\r\n                }),\r\n            );\r\n    }\r\n    updateLotMatch(lotMatch: LotMatch): Observable<LotMatchIteration> {\r\n        return this.http\r\n            .post<LotMatchIteration>(`${API}/match/update`, { ...lotMatch }, { headers: this.baseHeaders })\r\n            .pipe(\r\n                map((lotMatchIteration) => {\r\n                    return {\r\n                        ...dateStringToDate(lotMatchIteration),\r\n                        buyerDetails: dateStringToDate(lotMatchIteration.buyerDetails),\r\n                        sellerDetails: dateStringToDate(lotMatchIteration.sellerDetails),\r\n                    };\r\n                }),\r\n            );\r\n    }\r\n    getHasBroker(lotIds: number[]): Observable<{ [key: string]: boolean }> {\r\n        return this.http.get<{ [key: string]: boolean }>(`${API}/match/hasBroker`, {\r\n            headers: this.baseHeaders,\r\n            params: { lotIds: lotIds.toString() },\r\n        });\r\n    }\r\n\r\n    sendIntroductionEmail(lotMatchId: number): Observable<{ lotMatchId: number }> {\r\n        return this.http.post<{ lotMatchId: number }>(\r\n            `${API}/match/introduction-email`,\r\n            { lotMatchId },\r\n            { headers: this.baseHeaders },\r\n        );\r\n    }\r\n    //#endregion\r\n\r\n    // #region NEGOTIATIONS\r\n    getUserNegotiationCards(tradingEntityId: number, clientUid: string = null): Observable<NegotiationCard[]> {\r\n        const params = clientUid\r\n            ? { tradingEntityId: tradingEntityId.toString(), clientUid }\r\n            : { tradingEntityId: tradingEntityId.toString() };\r\n\r\n        return this.http\r\n            .get<NegotiationCard[]>(`${API}/negotiation`, {\r\n                headers: this.baseHeaders,\r\n                params: { ...params },\r\n            })\r\n            .pipe(\r\n                map((negotiationCards) => {\r\n                    const convertedNegotiationCards = dateStringToDate(negotiationCards);\r\n                    return convertedNegotiationCards;\r\n                }),\r\n            );\r\n    }\r\n    completeNegotiation(\r\n        lotMatch: LotMatch,\r\n        clientHasBroker: boolean,\r\n        counterPartyHasBroker: boolean,\r\n    ): Observable<{ id: number }> {\r\n        return this.http.post<{ id: number }>(\r\n            `${API}/match/complete`,\r\n            { ...lotMatch },\r\n            {\r\n                headers: this.baseHeaders,\r\n                params: {\r\n                    clientHasBroker: clientHasBroker.toString(),\r\n                    counterPartyHasBroker: counterPartyHasBroker.toString(),\r\n                },\r\n            },\r\n        );\r\n    }\r\n\r\n    declineNegotiation(lotMatch: LotMatch): Observable<{ id: number }> {\r\n        return this.http.post<{ id: number }>(`${API}/match/decline`, { ...lotMatch }, { headers: this.baseHeaders });\r\n    }\r\n    clearNegotiation(lotMatch: LotMatch, requestedBy: string): Observable<{ id: number }> {\r\n        return this.http.post<{ id: number }>(\r\n            `${API}/match/clear`,\r\n            { ...lotMatch },\r\n            {\r\n                headers: this.baseHeaders,\r\n                params: { requestedBy: requestedBy },\r\n            },\r\n        );\r\n    }\r\n\r\n    getAvailableMatchedIds(lotMatchId: number, clientUid: string = null): Observable<number[]> {\r\n        const params = clientUid\r\n            ? { lotMatchId: lotMatchId.toString(), clientUid: clientUid }\r\n            : { lotMatchId: lotMatchId.toString() };\r\n\r\n        return this.http.get<number[]>(`${API}/match/lot-match-ids`, {\r\n            headers: this.baseHeaders,\r\n            params: { ...params },\r\n        });\r\n    }\r\n    // #endregion\r\n\r\n    // #region FORM DATA\r\n    getCropCategories(): Observable<IdName[]> {\r\n        return this.http.get<IdName[]>(`${API}/form-options/crop-categories`, { headers: this.baseHeaders });\r\n    }\r\n    getCropGrades(cropId: number): Observable<IdName[]> {\r\n        return this.http.get<IdName[]>(`${API}/form-options/grades`, {\r\n            headers: this.baseHeaders,\r\n            params: { cropId: cropId.toString() },\r\n        });\r\n    }\r\n    getCropPackaging(cropId: number): Observable<IdName[]> {\r\n        return this.http.get<IdName[]>(`${API}/form-options/packaging`, {\r\n            headers: this.baseHeaders,\r\n            params: { cropId: cropId.toString() },\r\n        });\r\n    }\r\n    getIncoTerms(): Observable<IdName[]> {\r\n        return this.http.get<IdName[]>(`${API}/form-options/inco-terms`, { headers: this.baseHeaders });\r\n    }\r\n    getPaymentOptions(): Observable<IdName[]> {\r\n        return this.http.get<IdName[]>(`${API}/form-options/payment-terms`, { headers: this.baseHeaders });\r\n    }\r\n    getCropMonths(cropId: number, exchangeId: number): Observable<IdName[]> {\r\n        return this.http.get<IdName[]>(`${API}/form-options/months`, {\r\n            headers: this.baseHeaders,\r\n            params: {\r\n                cropId: cropId.toString(),\r\n                exchangeId: exchangeId.toString(),\r\n            },\r\n        });\r\n    }\r\n    // #endregion\r\n\r\n    // #region ANALYTICS\r\n    getAnalytics(): Observable<Analytics> {\r\n        return this.http.get<Analytics>(`${API}/analytics/all`, { headers: this.baseHeaders });\r\n    }\r\n    getLotsInDateRange(dateRange: DateRange): Observable<Lot[]> {\r\n        return this.http\r\n            .post<Lot[]>(`${API}/analytics/lots`, { ...dateRange }, { headers: this.baseHeaders })\r\n            .pipe(map((lots) => dateStringToDate(lots)));\r\n    }\r\n    // #endregion\r\n\r\n    //#region VERIFICATION\r\n    sendVerificationFormEmail(): Observable<{ responseMessage: string }> {\r\n        return this.http.get<{ responseMessage: string }>(`${API}/verification/email`, { headers: this.baseHeaders });\r\n    }\r\n    //#endregion\r\n\r\n    //#region BROWSE THE MARKET\r\n    getMarketLotCards(marketFilters: MarketFilters): Observable<MarketLotCard[]> {\r\n        return this.http.post<MarketLotCard[]>(\r\n            `${API}/market/filteredLots`,\r\n            { ...marketFilters },\r\n            { headers: this.baseHeaders },\r\n        );\r\n    }\r\n    getMarketScoutCards(marketFilters: MarketFilters): Observable<ScoutCard[]> {\r\n        return this.http.post<ScoutCard[]>(\r\n            `${API}/market/filteredScouts`,\r\n            { ...marketFilters },\r\n            { headers: this.baseHeaders },\r\n        );\r\n    }\r\n    //#endregion\r\n\r\n    // #region BROKERS\r\n    sendPairingNotification(fromBroker: boolean, newRequest: boolean, brokerUid: string, clientUid: string) {\r\n        return this.http.post(\r\n            `${API}/broker/pairingNotification`,\r\n            { fromBroker: fromBroker, newRequest, clientUid, brokerUid: brokerUid },\r\n            { headers: this.baseHeaders },\r\n        );\r\n    }\r\n    //#endregion\r\n}\r\n","import { UserWithEntities, UserVerification } from './../../models/queryModels';\r\nimport { ApiService } from './../api/api.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { AngularFirestore, AngularFirestoreDocument } from '@angular/fire/compat/firestore';\r\nimport { AngularFireAuth } from '@angular/fire/compat/auth';\r\n\r\nimport { take, map, switchMap, tap, retry } from 'rxjs/operators';\r\nimport { Router } from '@angular/router';\r\nimport { User } from '../../models/queryModels';\r\nimport { SignUpData } from '../../models/viewModels';\r\nimport { combineLatest, Observable, of } from 'rxjs';\r\nimport { SQL_User } from '../../models/queryModels';\r\nimport { DEFAULT_VERIFICATION, SIGNIN_ROUTE } from '../../../core/helpers/constants';\r\nimport { Plugins } from '@capacitor/core';\r\nimport firebase from 'firebase/compat/app';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class AuthService {\r\n    constructor(\r\n        private router: Router,\r\n        private afs: AngularFirestore,\r\n        private afAuth: AngularFireAuth,\r\n        private api: ApiService,\r\n    ) {}\r\n\r\n    getUser(uid: string, actionByAgent: boolean = false): Observable<UserWithEntities> {\r\n        const documentSnapshot = of(this.afs.doc(`Users/${uid}`).ref);\r\n        return documentSnapshot.pipe(\r\n            switchMap((ref) => {\r\n                return ref.get();\r\n            }),\r\n            switchMap((doc) => {\r\n                if (doc.exists) {\r\n                    const user = doc.data() as User;\r\n                    if (user.matchUser) {\r\n                        return combineLatest([of(user), actionByAgent ? this.api.getUser(uid) : this.api.getUser()]);\r\n                    } else {\r\n                        return combineLatest([of(user), this.api.registerUser(user.email, user.phone)]);\r\n                    }\r\n                } else {\r\n                    throw new Error('Null User');\r\n                }\r\n            }),\r\n            map(([user, sqlUser]: [User, SQL_User]) => {\r\n                if (user) {\r\n                    return {\r\n                        ...user,\r\n                        verification: user.verification ?? DEFAULT_VERIFICATION,\r\n                        hasBrowsedMarket: user.hasBrowsedMarket ? user.hasBrowsedMarket : false,\r\n                        SQL_id: sqlUser.id,\r\n                        entities: sqlUser.entities,\r\n                        hasB_BBEE: sqlUser.hasB_BBEE,\r\n                    } as UserWithEntities;\r\n                } else {\r\n                    return null;\r\n                }\r\n            }),\r\n            retry(5),\r\n        );\r\n    }\r\n\r\n    getAuthorization() {\r\n        return this.afAuth.authState.pipe();\r\n    }\r\n\r\n    async emailLogin(email: string, password: string) {\r\n        try {\r\n            const userCredentials = await this.afAuth.signInWithEmailAndPassword(email, password);\r\n            return userCredentials;\r\n        } catch (error) {\r\n            console.log('emailLogin: ', error);\r\n            throw error.code;\r\n        }\r\n    }\r\n\r\n    async providerLogin() {\r\n        try {\r\n            const provider = new firebase.auth.GoogleAuthProvider();\r\n            const firebaseUser = await this.afAuth.signInWithPopup(provider);\r\n            const user = this.userDataHelper(firebaseUser);\r\n            if (firebaseUser.additionalUserInfo.isNewUser) {\r\n                await this.updateUserData(user);\r\n            }\r\n        } catch (error) {\r\n            console.log('providerLogin', { error });\r\n            throw error.code ? error.code : error.message;\r\n        }\r\n    }\r\n\r\n    async nativeProviderLogin() {\r\n        try {\r\n            const googleUser = await Plugins.GoogleAuth.signIn();\r\n            const credential = firebase.auth.GoogleAuthProvider.credential(googleUser.authentication.idToken);\r\n            const firebaseUser = await this.afAuth.signInWithCredential(credential);\r\n            const user = this.userDataHelper(firebaseUser);\r\n            await this.nativeCreateUser(user);\r\n        } catch (error) {\r\n            console.log('nativeProviderLogin', { error });\r\n            throw error.code ? error.code : error.message;\r\n        }\r\n    }\r\n\r\n    async emailSignUp(email: string, password: string, signUpData: SignUpData) {\r\n        try {\r\n            const userCred = await this.afAuth.createUserWithEmailAndPassword(email, password);\r\n            let data: Partial<User> = {\r\n                uid: userCred.user.uid,\r\n                email: email,\r\n                firstname: signUpData.name,\r\n                lastname: signUpData.surname,\r\n                phone: signUpData.phone,\r\n                location: signUpData.location,\r\n                token: null,\r\n            };\r\n\r\n            if (signUpData.grainSAId) {\r\n                data.grainSA = { grainSAId: signUpData.grainSAId, isVerified: false };\r\n            }\r\n\r\n            await this.createUser(data, data.uid);\r\n\r\n            return { user: data };\r\n        } catch (error) {\r\n            console.log('emailSignUp', { error });\r\n            throw error.code ? error.code : error.message;\r\n        }\r\n    }\r\n\r\n    async createUser(data: Partial<User>, uid: string) {\r\n        try {\r\n            const userCol: firebase.firestore.QuerySnapshot = await this.afs\r\n                .collection('/Users', (ref) =>\r\n                    ref.where('email', '==', data.email.toLowerCase()).where('archived', '==', 0),\r\n                )\r\n                .get()\r\n                .pipe(take(1))\r\n                .toPromise();\r\n\r\n            const doesExist: boolean = !userCol.empty;\r\n\r\n            if (!doesExist) {\r\n                const userRef = this.afs.doc(`Users/${uid}`);\r\n                data.archived = 0;\r\n                data.createdAt = Date.now();\r\n                data.phone = data.phone;\r\n                data.location = data.location;\r\n                data.updatedAt = Date.now();\r\n                data.email = data.email.toLocaleLowerCase();\r\n                if (data.grainSA)\r\n                    data.grainSA = { grainSAId: data.grainSA.grainSAId, isVerified: data.grainSA.isVerified };\r\n\r\n                userRef.set(data); // Creates the document for the first time user on the first login.\r\n            } else {\r\n                const userData = {\r\n                    ...data,\r\n                    archived: 0,\r\n                    uid: uid,\r\n                    email: data.email.toLocaleLowerCase(),\r\n                };\r\n\r\n                const newUserRef = this.afs.doc(`Users/${uid}`);\r\n                await newUserRef.set(userData).then(() => {\r\n                    userCol.forEach((doc) => {\r\n                        const oldUserRef = doc.ref;\r\n                        oldUserRef.update({ archived: 1 });\r\n                    });\r\n                });\r\n            }\r\n            return 'Success';\r\n        } catch (error) {\r\n            console.log('createUser', { error });\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    async nativeCreateUser(data: User) {\r\n        try {\r\n            const userRef = this.afs.doc(`Users/${data.uid}`);\r\n            const doesExist = await this.checkIfRefExists(userRef);\r\n\r\n            if (!doesExist) {\r\n                userRef.set(data);\r\n            }\r\n        } catch (error) {\r\n            console.log('nativeCreateUser', error);\r\n            return Promise.reject('fail');\r\n        }\r\n    }\r\n\r\n    async updateUserData(data: User): Promise<string> {\r\n        try {\r\n            const userRef = this.afs.doc(`Users/${data.uid}`);\r\n            const doesExist = await this.checkIfRefExists(userRef);\r\n\r\n            if (!doesExist) {\r\n                userRef.set(data);\r\n            } else {\r\n                userRef.update({ ...data, updatedAt: Date.now() });\r\n            }\r\n            return 'success';\r\n        } catch (error) {\r\n            console.log('updateUserData', error);\r\n            return Promise.reject('fail');\r\n        }\r\n    }\r\n\r\n    async verifyUsers(usersToBeVerified: UserVerification[]): Promise<string> {\r\n        let failedUsersList: string[] = usersToBeVerified.map((user) => user.fullName);\r\n        let totalUsersToUpdate = usersToBeVerified.length;\r\n        try {\r\n            for (let i = 0; i < usersToBeVerified.length; i++) {\r\n                const failedUserName = await this.updateVerification(usersToBeVerified[i]);\r\n                if (failedUserName !== null) {\r\n                    failedUsersList = failedUsersList.filter((fullName) => fullName !== failedUserName);\r\n                }\r\n            }\r\n            const singularOrPlural: string = totalUsersToUpdate === 1 ? '' : 's';\r\n            const usersToRetry: string = failedUsersList.join(', ');\r\n            return failedUsersList.length === 0\r\n                ? `Successfully Verified ${totalUsersToUpdate} User${singularOrPlural}.`\r\n                : `Failed to verify ${failedUsersList.length} of ${totalUsersToUpdate}. Please retry for the following users: ${usersToRetry}`;\r\n        } catch (error) {\r\n            console.log('Verify Users Error: ', error);\r\n            const usersToRetry: string = failedUsersList.join(', ');\r\n            return Promise.reject(\r\n                `Failed to verify ${failedUsersList.length} of ${totalUsersToUpdate}. Please retry for the following users: ${usersToRetry}`,\r\n            );\r\n        }\r\n    }\r\n\r\n    async updateVerification(userToBeVerified: UserVerification): Promise<string | null> {\r\n        const userRef = this.afs.doc(`Users/${userToBeVerified.uid}`);\r\n        const doesExist: boolean = await this.checkIfRefExists(userRef);\r\n        if (doesExist) {\r\n            await userRef.update({\r\n                verification: userToBeVerified.verification,\r\n            });\r\n            return userToBeVerified.fullName;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    getUsersForVerification(): Observable<User[]> {\r\n        return this.afs.collection<User>('Users', (userRef) => userRef.where('matchUser', '==', true)).valueChanges();\r\n    }\r\n\r\n    async checkIfRefExists(ref: AngularFirestoreDocument): Promise<boolean> {\r\n        const snap = await ref.get().pipe(take(1)).toPromise();\r\n        return snap.exists ? true : false;\r\n    }\r\n\r\n    resetPassword(email: string): Promise<void> {\r\n        return this.afAuth.sendPasswordResetEmail(email);\r\n    }\r\n\r\n    async logout(): Promise<void> {\r\n        await this.afAuth.signOut();\r\n        this.router.navigate([SIGNIN_ROUTE]);\r\n    }\r\n\r\n    userDataHelper(firebaseUser: firebase.auth.UserCredential): User {\r\n        return {\r\n            firstname: firebaseUser.user.displayName,\r\n            email: firebaseUser.user.email,\r\n            uid: firebaseUser.user.uid,\r\n            archived: 0,\r\n            lastname: '',\r\n            createdAt: Date.now(),\r\n            updatedAt: Date.now(),\r\n            location: '',\r\n            matchUser: !firebaseUser.additionalUserInfo.isNewUser,\r\n            phone: firebaseUser.user.phoneNumber || '',\r\n        };\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\r\nimport { Observable } from 'rxjs';\r\nimport { Broker, BrokerNegotiation, BrokerRequest, Client, User } from '../../models/queryModels';\r\nimport { LatLng } from '../../models/viewModels';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class BrokersService {\r\n    private geocoder: any;\r\n    constructor(private afs: AngularFirestore) {}\r\n\r\n    getBrokers(): Observable<Broker[]> {\r\n        return this.afs.collection<User>('Users', (userRef) => userRef.where('isBroker', '==', true)).valueChanges();\r\n    }\r\n\r\n    getClientByEmail(email: string): Observable<User[]> {\r\n        return this.afs.collection<Client>('Users', (userRef) => userRef.where('email', '==', email)).valueChanges();\r\n    }\r\n\r\n    getPendingBrokerRequests(brokerUid: string): Observable<BrokerRequest[]> {\r\n        return this.afs\r\n            .collection<BrokerRequest>('BrokerRequests', (userRef) =>\r\n                userRef.where('brokerUid', '==', brokerUid).where('acceptedRequest', '==', false),\r\n            )\r\n            .valueChanges();\r\n    }\r\n\r\n    getAcceptedBrokerRequests(brokerUid: string): Observable<BrokerRequest[]> {\r\n        return this.afs\r\n            .collection<BrokerRequest>('BrokerRequests', (userRef) =>\r\n                userRef.where('brokerUid', '==', brokerUid).where('acceptedRequest', '==', true),\r\n            )\r\n            .valueChanges();\r\n    }\r\n\r\n    getBrokerRequest(brokerUid: string, clientUid: string): Observable<BrokerRequest[]> {\r\n        return this.afs\r\n            .collection<BrokerRequest>('BrokerRequests', (userRef) => userRef.where('clientUid', '==', clientUid))\r\n            .valueChanges();\r\n    }\r\n\r\n    getClients(clientIds: string[]): Observable<Client[]> {\r\n        return this.afs.collection<Client>('Users', (userRef) => userRef.where('uid', 'in', clientIds)).valueChanges();\r\n    }\r\n\r\n    getClientBrokerRequests(uid: string): Observable<BrokerRequest[] | []> {\r\n        return this.afs\r\n            .collection<BrokerRequest>('BrokerRequests', (brokerRequestsRef) =>\r\n                brokerRequestsRef.where('clientUid', '==', uid),\r\n            )\r\n            .valueChanges();\r\n    }\r\n\r\n    createRequest(brokerUid: string, clientUid: string, sentByBroker: boolean) {\r\n        try {\r\n            this.afs.doc(`BrokerRequests/${brokerUid}-${clientUid}`).set({\r\n                acceptedRequest: false,\r\n                brokerUid: brokerUid,\r\n                clientUid: clientUid,\r\n                expiryDate: 0,\r\n                sentByBroker: sentByBroker,\r\n            });\r\n            return 'Success';\r\n        } catch (error) {\r\n            console.log('createBrokerRequest', { error });\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    deleteRequest(brokerUid: string, clientUid: string) {\r\n        try {\r\n            this.afs.doc(`BrokerRequests/${brokerUid}-${clientUid}`).delete();\r\n            return 'Success';\r\n        } catch (error) {\r\n            console.log('createBrokerRequest', { error });\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    acceptRequest(brokerUid: string, clientUid: string) {\r\n        try {\r\n            this.afs.doc(`BrokerRequests/${brokerUid}-${clientUid}`).update({\r\n                acceptedRequest: true,\r\n                expiryDate: new Date().setFullYear(new Date().getFullYear() + 1),\r\n                brokerAdminRole: true,\r\n            });\r\n            return 'Success';\r\n        } catch (error) {\r\n            console.log('createBrokerRequest', { error });\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    toggleBrokerAdminRole(brokerUid: string, clientUid: string, adminRole: boolean): Promise<void> {\r\n        try {\r\n            return this.afs.doc(`BrokerRequests/${brokerUid}-${clientUid}`).update({ brokerAdminRole: adminRole });\r\n        } catch (error) {\r\n            console.log('toggleBrokerAdminRole', { error });\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    async createNegotiationDocument(\r\n        lotMatchId: number,\r\n        sellerEmail: string,\r\n        buyerEmail: string,\r\n        sellerPaid: boolean,\r\n        buyerPaid: boolean,\r\n    ) {\r\n        try {\r\n            await this.afs.collection(`BrokerNegotiations`).add({\r\n                lotMatchId: lotMatchId,\r\n                sellerEmail: sellerEmail,\r\n                buyerEmail: buyerEmail,\r\n                sellerPaid: sellerPaid,\r\n                buyerPaid: buyerPaid,\r\n                emailSent: false,\r\n            });\r\n            return 'Success';\r\n        } catch (error) {\r\n            console.log('createBrokerNegotiationDocument', { error });\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    updateBrokerNegotiationDocument(brokerNegotiation: BrokerNegotiation) {\r\n        try {\r\n            this.afs\r\n                .collection<BrokerNegotiation>('BrokerNegotiations', (brokerNegotiationRef) =>\r\n                    brokerNegotiationRef.where('lotMatchId', '==', brokerNegotiation.lotMatchId),\r\n                )\r\n                .get()\r\n                .subscribe((brokerNegotiations) => {\r\n                    brokerNegotiations.forEach((document) => {\r\n                        document.ref.update({ ...brokerNegotiation });\r\n                    });\r\n                });\r\n            return 'Success';\r\n        } catch (error) {\r\n            console.log('updateBrokerNegotiationDocument: ', { error });\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    getBrokerNegotiations(lotMatchIds: number[]): Observable<BrokerNegotiation[]> {\r\n        return this.afs\r\n            .collection<BrokerNegotiation>('BrokerNegotiations', (brokerNegotiationRef) =>\r\n                brokerNegotiationRef.where('lotMatchId', 'in', lotMatchIds),\r\n            )\r\n            .valueChanges();\r\n    }\r\n\r\n    updateBrokerNegotiationEmailStatus(lotMatchId: number) {\r\n        try {\r\n            this.afs\r\n                .collection<BrokerNegotiation>('BrokerNegotiations', (brokerNegotiationRef) =>\r\n                    brokerNegotiationRef.where('lotMatchId', '==', lotMatchId),\r\n                )\r\n                .get()\r\n                .subscribe((brokerNegotiations) => {\r\n                    brokerNegotiations.forEach((brokerNegotiation) => {\r\n                        brokerNegotiation.ref.update({ emailSent: true });\r\n                    });\r\n                });\r\n            return 'Success';\r\n        } catch (error) {\r\n            console.log('updateBrokerRequest', { error });\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    async getGeocodedAddresses(locations: string[]): Promise<LatLng[]> {\r\n        this.geocoder = new google.maps.Geocoder();\r\n        var coordsArray = [];\r\n        for (let i = 0; i < locations.length; i++) {\r\n            await this.geocoder.geocode({ address: locations[i] }, (results, status) => {\r\n                if (status == google.maps.GeocoderStatus.OK) {\r\n                    let coords = {\r\n                        lat: results[0].geometry.location.lat(),\r\n                        lng: results[0].geometry.location.lng(),\r\n                    };\r\n                    coordsArray = [...coordsArray, coords];\r\n                } else {\r\n                    console.log('Error: ', results, ' & Status: ', status);\r\n                    let coords = {\r\n                        lat: 0,\r\n                        lng: 0,\r\n                    };\r\n                    coordsArray = [...coordsArray, coords];\r\n                }\r\n            });\r\n        }\r\n        return coordsArray;\r\n    }\r\n}\r\n","import { combineLatest, Observable } from 'rxjs';\r\nimport { ApiService } from 'src/app/core/services/api/api.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { IdName } from '../../models/queryModels';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class CropService {\r\n    constructor(private api: ApiService) {}\r\n\r\n    getCropMonthsAndGrades(cropId: number, exchangeId: number): Observable<[IdName[], IdName[]]> {\r\n        return combineLatest([this.api.getCropMonths(cropId, exchangeId), this.api.getCropGrades(cropId)]);\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { combineLatest, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { Entity, EntityUser, DeliveryPoint } from '../../models/queryModels';\r\nimport { ApiService } from '../api/api.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class DeliveryPointsService {\r\n    constructor(private api: ApiService) {}\r\n\r\n    getEntityUsersDeliveryPoints(entityUsers: Entity[]): Observable<DeliveryPoint[]> {\r\n        return combineLatest([\r\n            ...entityUsers.map((entityUser) => {\r\n                return this.api.getEntitysDeliveryPoints(entityUser.id);\r\n            }),\r\n        ]).pipe(\r\n            map((nestedDeliveryPoints) => {\r\n                return nestedDeliveryPoints.reduce((acc, deliveryPoints) => {\r\n                    acc = acc.concat(deliveryPoints);\r\n                    return acc;\r\n                }, []);\r\n            }),\r\n        );\r\n    }\r\n}\r\n","import { Notification } from 'src/app/core/models/viewModels';\r\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\r\nimport { AngularFireMessaging } from '@angular/fire/compat/messaging';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { User } from '../../models/queryModels';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class NotificationsService {\r\n    private _isListenerActive: boolean = false;\r\n\r\n    constructor(private afMessaging: AngularFireMessaging, private afStore: AngularFirestore) {}\r\n\r\n    getCloudMessagingPermissionStatus(): Observable<string> {\r\n        return this.afMessaging.getToken;\r\n    }\r\n\r\n    addDeviceTokenToUserDocument(user: User, newDeviceToken: string): void {\r\n        if (!user.deviceTokens || !user.deviceTokens.includes(newDeviceToken)) {\r\n            let deviceTokens = user.deviceTokens ? [...user.deviceTokens, newDeviceToken] : [newDeviceToken];\r\n            this.afStore.doc<User>(`Users/${user.uid}`).update({ deviceTokens });\r\n        }\r\n    }\r\n\r\n    activateNotificationListener() {\r\n        if (!this._isListenerActive) {\r\n            this._isListenerActive = true;\r\n            return this.afMessaging.messages;\r\n        } else {\r\n            return of(null);\r\n        }\r\n    }\r\n\r\n    getUserNotifications(uid: string): Observable<Notification[] | []> {\r\n        return this.afStore\r\n            .collection<Notification>('Notifications', (notificationsRef) =>\r\n                notificationsRef.where('userId', '==', uid).where('seen', '==', false),\r\n            )\r\n            .valueChanges();\r\n    }\r\n\r\n    getClientsNotifications(uids: string[]): Observable<Notification[] | []> {\r\n        return this.afStore\r\n            .collection<Notification>('Notifications', (notificationsRef) =>\r\n                notificationsRef.where('userId', 'in', uids).where('seenByAgent', '==', false),\r\n            )\r\n            .valueChanges();\r\n    }\r\n\r\n    toggleNotificationStatus(uids: string[], toggleForAgent = false) {\r\n        const data = toggleForAgent ? { seenByAgent: true } : { seen: true };\r\n        return Promise.all(\r\n            uids.map((uid) => {\r\n                return this.afStore.doc<Notification>(`Notifications/${uid}`).update({ ...data });\r\n            }),\r\n        );\r\n    }\r\n}\r\n","import { ScoutAndFineTune, Crop } from './../../models/queryModels';\r\nimport { Scout, IdName } from 'src/app/core/models/queryModels';\r\nimport { ApiService } from 'src/app/core/services/api/api.service';\r\nimport { Observable, combineLatest, of } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { ScoutCard } from '../../models/viewModels';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class ScoutService {\r\n    constructor(private api: ApiService) {}\r\n    getScoutEditData(scoutId: number): Observable<[ScoutAndFineTune, Crop[], IdName[]]> {\r\n        if (scoutId) {\r\n            return combineLatest([this.api.getScoutById(scoutId), this.api.getAllCrops(), this.api.getUnitOfMeasure()]);\r\n        } else {\r\n            return combineLatest([of(null), this.api.getAllCrops(), this.api.getUnitOfMeasure()]);\r\n        }\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class SubscriptionService {\r\n    unsubscribeComponent$ = new Subject<void>();\r\n    unsubscribe$ = this.unsubscribeComponent$.asObservable();\r\n}\r\n","import { cloneDeep } from 'lodash';\r\nimport { ActionReducerMap, createSelector, createFeatureSelector } from '@ngrx/store';\r\nimport * as fromApp from '../../core/ngrx/app-state/app-state.reducer';\r\nimport * as fromAuth from '../../core/ngrx/authState/auth.reducer';\r\nimport * as fromAppState from '../../core/ngrx/app-state/app-state.reducer';\r\nimport * as fromScout from '../../core/ngrx/entities/scout/scout.reducer';\r\nimport * as fromDeliveryPoints from '../../core/ngrx/entities/delivery-points/delivery-points.reducer';\r\nimport * as fromLot from '../../core/ngrx/entities/lot/lot.reducer';\r\nimport * as fromMatch from '../../core/ngrx/entities/match/match.reducer';\r\nimport * as fromCrop from '../../core/ngrx/crop/crop.reducer';\r\nimport * as fromNegotiation from '../../core/ngrx/entities/negotiations/index';\r\n\r\nimport * as _appSelectors from '../../core/ngrx/app-state/app-state.selectors';\r\nimport * as _deliveryPointsSelectors from '../../core/ngrx/entities/delivery-points/delivery-points.selectors';\r\nimport * as _lotSelectors from '../../core/ngrx/entities/lot/lot.selectors';\r\nimport * as _matchSelectors from '../../core/ngrx/entities/match/match.selectors';\r\nimport * as _scoutSelectors from '../../core/ngrx/entities/scout/scout.selectors';\r\nimport * as _authSelectors from '../../core/ngrx/authState/auth.selectors';\r\nimport * as _cropSelectors from '../../core/ngrx/crop/crop.selectors';\r\nimport * as _notificationSelectors from '../../core/ngrx/entities/notifications/notifications.selectors';\r\nimport { Lot, DeliveryPoint, IdName } from 'src/app/core/models/queryModels';\r\nimport { PriceType, SafexMonth } from 'src/app/core/models/queryModels';\r\n\r\nexport interface State {\r\n    [fromApp.appStateFeatureKey]: fromApp.State;\r\n    [fromAuth.authFeatureKey]: fromAuth.State;\r\n    [fromAppState.appStateFeatureKey]: fromAppState.State;\r\n    [fromDeliveryPoints.deliveryPointsFeatureKey]: fromDeliveryPoints.State;\r\n    [fromScout.scoutFeatureKey]: fromScout.State;\r\n    [fromLot.lotFeatureKey]: fromLot.State;\r\n    [fromMatch.matchFeatureKey]: fromMatch.State;\r\n    [fromCrop.cropFeatureKey]: fromCrop.State;\r\n    [fromNegotiation.negotiationFeatureKey]: fromNegotiation.negotiationState;\r\n}\r\n\r\nexport const reducers: ActionReducerMap<State> = {\r\n    [fromApp.appStateFeatureKey]: fromApp.reducer,\r\n    [fromAuth.authFeatureKey]: fromAuth.reducer,\r\n    [fromAppState.appStateFeatureKey]: fromAppState.reducer,\r\n    [fromDeliveryPoints.deliveryPointsFeatureKey]: fromDeliveryPoints.reducer,\r\n    [fromScout.scoutFeatureKey]: fromScout.reducer,\r\n    [fromLot.lotFeatureKey]: fromLot.reducer,\r\n    [fromMatch.matchFeatureKey]: fromMatch.reducer,\r\n    [fromCrop.cropFeatureKey]: fromCrop.reducer,\r\n    [fromNegotiation.negotiationFeatureKey]: fromNegotiation.negotiationReducer,\r\n};\r\n\r\n// #region Feature Selectors\r\nexport const getAppState = createFeatureSelector<State, fromAppState.State>('appState');\r\nexport const getAuthState = createFeatureSelector<State, fromAuth.State>(fromAuth.authFeatureKey);\r\nexport const getDeliveryPointState = createFeatureSelector<State, fromDeliveryPoints.State>(\r\n    fromDeliveryPoints.deliveryPointsFeatureKey,\r\n);\r\n// #endregion\r\n\r\nexport const appSelectors = _appSelectors;\r\nexport const authSelectors = _authSelectors;\r\nexport const deliveryPointsSelectors = _deliveryPointsSelectors;\r\nexport const marketSelectors = _scoutSelectors;\r\nexport const lotSelectors = _lotSelectors;\r\nexport const matchSelectors = _matchSelectors;\r\nexport const negotiationSelector = fromNegotiation.negotiationSelectors;\r\nexport const notificationSelectors = _notificationSelectors;\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { take } from 'rxjs/operators';\r\nimport { TRANSACTIONAL_RISK_ROUTE, SCOUT_CREATE_ROUTE } from './../../core/helpers/constants';\r\n\r\n@Component({\r\n    selector: 'app-landing',\r\n    templateUrl: './landing.component.html',\r\n    styleUrls: ['./landing.component.scss'],\r\n})\r\nexport class LandingComponent implements OnInit {\r\n    fromSupport: boolean = false;\r\n    constructor(private route: ActivatedRoute, private router: Router) {}\r\n\r\n    ngOnInit(): void {\r\n        this.route.queryParams.pipe(take(1)).subscribe(({ fromSupport }) => {\r\n          if (fromSupport === 'true') this.fromSupport = true;\r\n        });\r\n    }\r\n\r\n    handleNavigateToTransactionalRisk() {\r\n        this.router.navigate([TRANSACTIONAL_RISK_ROUTE], { queryParams: { fromSupport: this.fromSupport } });\r\n    }\r\n\r\n    handleNavigateCreateScout() {\r\n        this.router.navigate([SCOUT_CREATE_ROUTE]);\r\n    }\r\n}\r\n","<div class=\"g-app-dimensions\">\r\n    <div class=\"l-landing-container\">\r\n        <div class=\"l-landing-content\">\r\n            <img class=\"l-img\" src=\"assets/images/MX-landing.svg\" alt=\"Match Exchange\" />\r\n            <h1 class=\"g-text-h1-dark mb-4\">What is Match Exchange?</h1>\r\n            <p class=\"g-text-p-dark mb-3\">\r\n                Match Exchange is the best way for farmers to sell their crop, deal directly with buyers and shorten the\r\n                chain.\r\n            </p>\r\n            <p class=\"g-text-p-dark mb-3\">For the buyers, MX is the shortest path to farmers.</p>\r\n            <p class=\"g-text-p-dark mb-3\">Unlocking new markets for farmers and many more suppliers for buyers.</p>\r\n        </div>\r\n        <button mat-flat-button class=\"g-primary-button mb-2\" (click)=\"handleNavigateToTransactionalRisk()\">\r\n            Let's get started\r\n        </button>\r\n        <button *ngIf=\"!fromSupport\" mat-flat-button class=\"g-secondary-button\" (click)=\"handleNavigateCreateScout()\">\r\n            Skip Tutorial\r\n        </button>\r\n    </div>\r\n</div>\r\n","import { Component, EventEmitter, OnInit } from '@angular/core';\r\nimport { select, Store } from '@ngrx/store';\r\nimport { filter, takeUntil } from 'rxjs/operators';\r\nimport * as fromNotifications from 'src/app/core/ngrx/entities/notifications/index';\r\nimport * as fromAuth from 'src/app/core/ngrx/authState/index';\r\nimport { CurrentNotification } from 'src/app/core/models/viewModels';\r\nimport { Client, User } from 'src/app/core/models/queryModels';\r\nimport { Capacitor } from '@capacitor/core';\r\nimport { PushNotifications } from '@capacitor/push-notifications';\r\nimport { NotificationsService } from 'src/app/core/services/notifications/notifications.service';\r\nimport { brokersSelectors } from '../../core/ngrx/brokers';\r\n\r\n@Component({\r\n    selector: 'app-notification',\r\n    templateUrl: './notification.component.html',\r\n    styleUrls: ['./notification.component.scss'],\r\n})\r\nexport class NotificationComponent implements OnInit {\r\n    currentNotification: CurrentNotification = {} as CurrentNotification;\r\n\r\n    isWeb: boolean = false;\r\n    permissionStatusHasBeenDispatched: boolean = false;\r\n    notificationListenerIsActive: boolean = false;\r\n    showNotification: boolean = false;\r\n    client: Client;\r\n\r\n    destroyed$: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n    constructor(private store: Store<fromNotifications.State>, private notificationsService: NotificationsService) {}\r\n\r\n    ngOnInit(): void {\r\n        this.selectClientHelper();\r\n\r\n        this.isWeb = Capacitor.getPlatform() === 'web';\r\n\r\n        if (this.isWeb) {\r\n            this.store\r\n                .pipe(\r\n                    select(fromNotifications.notificationSelectors.getPermissionStatus),\r\n                    takeUntil(this.destroyed$),\r\n                    filter((permissionStatus) => {\r\n                        return permissionStatus !== null;\r\n                    }),\r\n                )\r\n                .subscribe((permissionStatus) => {\r\n                    if (permissionStatus) {\r\n                        this.getCurrentNotificationHelper();\r\n                        this.store.dispatch(fromNotifications.notificationActions.ReqActivateNotificationListener());\r\n                    }\r\n                });\r\n        }\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.destroyed$.next();\r\n    }\r\n\r\n    getCurrentNotificationHelper(): void {\r\n        if (!this.notificationListenerIsActive) {\r\n            this.store\r\n                .pipe(\r\n                    select(fromNotifications.notificationSelectors.getCurrentNotification),\r\n                    takeUntil(this.destroyed$),\r\n                )\r\n                .subscribe((notification) => {\r\n                    if (notification && Object.keys(notification).length) {\r\n                        this.currentNotification = notification;\r\n                        this.showNotification = true;\r\n                    }\r\n                });\r\n            this.notificationListenerIsActive = true;\r\n        }\r\n    }\r\n\r\n    activateMobileNotificationsHelper(user: User): void {\r\n        PushNotifications.requestPermissions().then((permissionStatus) => {\r\n            permissionStatus.receive === 'granted' && PushNotifications.register();\r\n        });\r\n        PushNotifications.addListener('registration', (token) => {\r\n            this.notificationsService.addDeviceTokenToUserDocument(user, token.value);\r\n            this.getCurrentNotificationHelper();\r\n        });\r\n        PushNotifications.addListener('pushNotificationReceived', (notification) => {\r\n            const { title, body } = notification;\r\n            this.store.dispatch(\r\n                fromNotifications.notificationActions.ReqUpdateCurrentNotification({\r\n                    notification: { title, body },\r\n                }),\r\n            );\r\n        });\r\n    }\r\n\r\n    fetchUserNotificationsHelper(): void {\r\n        this.store.pipe(select(fromAuth.authSelectors.getUser), takeUntil(this.destroyed$)).subscribe((user: User) => {\r\n            const userOfInterest: User | Client = this.client ? this.client : user;\r\n\r\n            if (userOfInterest) {\r\n                if (!this.permissionStatusHasBeenDispatched) {\r\n                    this.isWeb\r\n                        ? this.store.dispatch(fromNotifications.notificationActions.ReqCloudMessagingPermissionStatus())\r\n                        : this.activateMobileNotificationsHelper(userOfInterest);\r\n                    this.permissionStatusHasBeenDispatched = true;\r\n                }\r\n\r\n                this.client\r\n                    ? userOfInterest.deviceTokens &&\r\n                      this.store.dispatch(\r\n                          fromNotifications.notificationActions.ReqClientNotifications({\r\n                              clientUid: userOfInterest.uid,\r\n                          }),\r\n                      )\r\n                    : userOfInterest.deviceTokens &&\r\n                      this.store.dispatch(fromNotifications.notificationActions.ReqUserNotifications());\r\n            }\r\n        });\r\n    }\r\n\r\n    selectClientHelper(): void {\r\n        this.store\r\n            .select(brokersSelectors.getCurrentClient)\r\n            .pipe(takeUntil(this.destroyed$))\r\n            .subscribe((client: Client) => {\r\n                this.client = client;\r\n                this.fetchUserNotificationsHelper();\r\n            });\r\n    }\r\n\r\n    handleCloseNotification(): void {\r\n        this.showNotification = false;\r\n    }\r\n}\r\n","<div class=\"l-container\" [class.l-show-notification]=\"showNotification\">\r\n    <div class=\"l-icon-container\">\r\n        <img class=\"l-icon\" src=\"./assets/icons/MX-small-logo.svg\" alt=\"Match\" />\r\n    </div>\r\n    <div class=\"l-content\">\r\n        <h2 class=\"g-text-h2 l-text-left\">\r\n            <b>{{ currentNotification.title }}</b>\r\n        </h2>\r\n        <p class=\"g-text-p l-text-left mt-2\">{{ currentNotification.body }}</p>\r\n    </div>\r\n    <div class=\"l-close-container\" (click)=\"handleCloseNotification()\">\r\n        <img class=\"l-close-icon\" src=\"./assets/icons/close-icon-dark.svg\" alt=\"Black close icon\" />\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatLegacyDialogRef as MatDialogRef } from '@angular/material/legacy-dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport * as snackBarConfigs from 'src/app/core/helpers/snackbar';\r\nimport { AdditionalEntityDetail, AdditionalEntityDetailsClass } from 'src/app/core/models/queryModels';\r\nimport { emailRegex, ratingData } from 'src/app/core/helpers/constants';\r\nimport { bbbeeRating } from 'src/app/core/models/viewModels';\r\n\r\n@Component({\r\n    selector: 'app-additional-info-modal',\r\n    templateUrl: './additional-info-modal.component.html',\r\n    styleUrls: ['./additional-info-modal.component.scss'],\r\n})\r\nexport class AdditionalInfoModalComponent implements OnInit {\r\n    additionalEntityDetails: AdditionalEntityDetail = new AdditionalEntityDetailsClass();\r\n    ratingData: bbbeeRating[] = ratingData;\r\n\r\n    constructor(private dialogRef: MatDialogRef<AdditionalInfoModalComponent>, private snackbar: MatSnackBar) {}\r\n\r\n    ngOnInit(): void {}\r\n\r\n    handleToggleExFarm(option: boolean): void {\r\n        option !== this.additionalEntityDetails.exFarm && (this.additionalEntityDetails.exFarm = option);\r\n    }\r\n\r\n    validateEmail(email): boolean {\r\n        return emailRegex.test(String(email).toLowerCase());\r\n    }\r\n\r\n    handleSaveDetails(email): void {\r\n        const isEmail = this.validateEmail(email);\r\n\r\n        if (!(this.additionalEntityDetails.legalEntityName.length < 2) && isEmail) {\r\n            this.dialogRef.close(this.additionalEntityDetails);\r\n        } else {\r\n            this.additionalEntityDetails.legalEntityName.length < 2\r\n                ? this.snackbar.open('Please enter a valid Entity name.', 'CLOSE', snackBarConfigs.errorConfig)\r\n                : this.snackbar.open('Please enter a valid Email', 'CLOSE', snackBarConfigs.errorConfig);\r\n        }\r\n    }\r\n}\r\n","<div class=\"l-container\">\r\n    <p class=\"g-text-h2-dark mb-3\">Just a few more important details</p>\r\n    <form>\r\n        <!-- #region Ex Farm Toggle -->\r\n        <div class=\"l-content-holder\">\r\n            <div class=\"g-text-input-container\">\r\n                <img class=\"g-input-text-icon\" src=\"../../../assets/icons/user-blue-icon.svg\" alt=\"\" />\r\n                <input\r\n                    class=\"g-input-text\"\r\n                    type=\"text\"\r\n                    name=\"fullName\"\r\n                    placeholder=\"Legal Entity Name\"\r\n                    [(ngModel)]=\"additionalEntityDetails.legalEntityName\"\r\n                    required\r\n                    maxlength=\"30\"\r\n                />\r\n            </div>\r\n\r\n            <div class=\"g-text-input-container mt-3\">\r\n                <img class=\"g-input-text-icon\" src=\"../../../assets/icons/mail-icon.svg\" alt=\"\" />\r\n                <input\r\n                    class=\"g-input-text\"\r\n                    type=\"email\"\r\n                    placeholder=\"Entity Email\"\r\n                    [(ngModel)]=\"additionalEntityDetails.email\"\r\n                    name=\"email\"\r\n                    required\r\n                />\r\n            </div>\r\n\r\n            <form>\r\n                <!-- #region Ex Farm Toggle -->\r\n\r\n                <label class=\"g-form-label mt-3\">Do you have the ability to deliver Ex-Farm?</label>\r\n                <div class=\"l-toggle-container\">\r\n                    <button\r\n                        class=\"l-option\"\r\n                        [class.l-active]=\"additionalEntityDetails.exFarm\"\r\n                        (click)=\"handleToggleExFarm(true)\"\r\n                    >\r\n                        Yes<img\r\n                            class=\"l-icon\"\r\n                            src=\"./assets/icons/unselected-icon.svg\"\r\n                            [src]=\"\r\n                                additionalEntityDetails.exFarm\r\n                                    ? './assets/icons/selected-blue-icon.svg'\r\n                                    : './assets/icons/unselected-icon.svg'\r\n                            \"\r\n                            alt=\"selected-icon\"\r\n                        />\r\n                    </button>\r\n                    <button\r\n                        class=\"l-option\"\r\n                        [class.l-active]=\"!additionalEntityDetails.exFarm\"\r\n                        (click)=\"handleToggleExFarm(false)\"\r\n                    >\r\n                        No\r\n                        <img\r\n                            class=\"l-icon\"\r\n                            [src]=\"\r\n                                !additionalEntityDetails.exFarm\r\n                                    ? './assets/icons/selected-blue-icon.svg'\r\n                                    : './assets/icons/unselected-icon.svg'\r\n                            \"\r\n                            alt=\"selected-icon\"\r\n                        />\r\n                    </button>\r\n                </div>\r\n\r\n                <!-- #endregion -->\r\n\r\n                <!-- #region B-BBEE Rating -->\r\n\r\n                <label class=\"g-form-label mt-3\">Scout for farmers that have a B-BBEE rating better than:</label>\r\n                <mat-select\r\n                    class=\"g-form-select l-select\"\r\n                    [(ngModel)]=\"additionalEntityDetails.bbbeeRating\"\r\n                    name=\"bbbeeRating\"\r\n                >\r\n                    <mat-option *ngFor=\"let rating of ratingData\" [value]=\"ratingData.indexOf(rating)\">\r\n                        {{ rating }}\r\n                    </mat-option>\r\n                </mat-select>\r\n\r\n                <!-- #endregion -->\r\n\r\n                <div class=\"d-flex align-items-start\">\r\n                    <img class=\"g-form-info-icon mt-1\" src=\"./assets/icons/info-icon.svg\" alt=\"info-icon-grey\" />\r\n                    <p class=\"g-text-p-small-grey\">\r\n                        If your turnover is less than R10 Million, you can choose level 4.\r\n                    </p>\r\n                </div>\r\n            </form>\r\n\r\n            <button\r\n                mat-flat-button\r\n                class=\"g-primary-button mb-3\"\r\n                (click)=\"handleSaveDetails(additionalEntityDetails.email)\"\r\n            >\r\n                Save Details\r\n            </button>\r\n        </div>\r\n    </form>\r\n</div>\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatLegacyDialogRef as MatDialogRef, MAT_LEGACY_DIALOG_DATA as MAT_DIALOG_DATA } from '@angular/material/legacy-dialog';\r\nimport { select, Store } from '@ngrx/store';\r\nimport { take } from 'rxjs/operators';\r\nimport { Crop } from 'src/app/core/models/queryModels';\r\nimport * as fromLot from 'src/app/features/lots/lots.selectors';\r\nimport * as fromCrop from 'src/app/core/ngrx/crop/crop.selectors';\r\nimport * as actions from 'src/app/core/helpers/index.actions';\r\nimport { Actions, ofType } from '@ngrx/effects';\r\n\r\n@Component({\r\n    selector: 'app-category-info-modal',\r\n    templateUrl: './category-info-modal.component.html',\r\n    styleUrls: ['./category-info-modal.component.scss'],\r\n})\r\nexport class CategoryInfoModalComponent implements OnInit {\r\n    isDataLoading: boolean = true;\r\n    crops: Crop[];\r\n\r\n    constructor(\r\n        private dialogRef: MatDialogRef<CategoryInfoModalComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: { categoryId: number; iconSource: string; categoryName: string },\r\n        private actions$: Actions,\r\n        private store: Store<fromLot.State>,\r\n    ) {}\r\n\r\n    ngOnInit(): void {\r\n        this.store.dispatch(actions.cropActions.ReqAllCrops());\r\n\r\n        this.actions$.pipe(ofType(actions.cropActions.AllCropsSuccess), take(1)).subscribe(() => {\r\n            this.store\r\n                .pipe(select(fromCrop.selectCropByCategoryId, this.data.categoryId), take(1))\r\n                .subscribe((crops) => {\r\n                    this.crops = crops;\r\n                    this.isDataLoading = false;\r\n                });\r\n        });\r\n    }\r\n\r\n    handleClose(): void {\r\n        this.dialogRef.close();\r\n    }\r\n}\r\n","<div class=\"l-container\">\r\n    <!-- #region Header -->\r\n\r\n    <div class=\"l-header\">\r\n        <img class=\"l-close-icon\" src=\"./assets/icons/close-icon-dark.svg\" alt=\"close\" (click)=\"handleClose()\" />\r\n        <img class=\"l-icon\" src=\"{{ data.iconSource }}\" alt=\"icon\" />\r\n    </div>\r\n    <h1 class=\"g-text-h1-dark mb-3\">\r\n        <b>{{ data.categoryName }}</b>\r\n    </h1>\r\n\r\n    <!-- #endregion -->\r\n\r\n    <!-- #region Modal Content -->\r\n\r\n    <div *ngIf=\"isDataLoading; else showCategories\" class=\"l-loading-container\">\r\n        <mat-progress-spinner\r\n            class=\"g-mat-progress-spinner-blue\"\r\n            mode=\"indeterminate\"\r\n            [diameter]=\"40\"\r\n        ></mat-progress-spinner>\r\n    </div>\r\n\r\n    <ng-template #showCategories>\r\n        <div class=\"l-content-container\">\r\n            <div class=\"l-content g-text-p-dark\" *ngFor=\"let crop of crops\">\r\n                <img class=\"l-crop-bullet-icon\" src=\"./assets/icons/crop-icon-blue.svg\" alt=\"crop-icon\" />\r\n                <p>{{ crop.name }}</p>\r\n            </div>\r\n        </div>\r\n    </ng-template>\r\n\r\n    <!-- #endregion -->\r\n\r\n    <!-- #region Buttons -->\r\n\r\n    <button class=\"g-primary-button my-2\" (click)=\"handleClose()\">Okay, got it!</button>\r\n\r\n    <!-- #endregion -->\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Location } from '@angular/common';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { InvalidPDFException, PagesLoadedEvent } from 'ngx-extended-pdf-viewer';\r\nimport { take } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector: 'app-document-viewer',\r\n    templateUrl: './document-viewer.component.html',\r\n    styleUrls: ['./document-viewer.component.scss'],\r\n})\r\nexport class DocumentViewerComponent implements OnInit {\r\n    pdfUrl: string;\r\n    pdfViewerReady = false;\r\n    pdfPageCount: number;\r\n\r\n    constructor(private router: Router, private route: ActivatedRoute, private location: Location) {}\r\n\r\n    ngOnInit(): void {\r\n        this.route.params.pipe(take(1)).subscribe(({ name }) => {\r\n            name ? (this.pdfUrl = `./assets/files/${name}`) : this.handleClose();\r\n        });\r\n    }\r\n\r\n    handlePDFLoadFailEvent(exception: InvalidPDFException): void {\r\n        if (exception.name === 'InvalidPDFException') {\r\n            window.open(this.pdfUrl);\r\n            this.handleClose();\r\n        }\r\n    }\r\n\r\n    handlePDFLoadingEvent(event: PagesLoadedEvent): void {\r\n        this.pdfPageCount = event.pagesCount;\r\n        this.pdfViewerReady = event.pagesCount > 0;\r\n    }\r\n\r\n    handleClose(): void {\r\n        this.location.back();\r\n    }\r\n}\r\n","<div class=\"l-main-container\">\r\n  <div class=\"py-3 px-4 g-clickable l-header-container\">\r\n    <img (click)=\"handleClose()\" src=\"../../../../assets/icons/black-arrow-back.svg\" alt=\"arrow\" height=\"15px;\" />\r\n  </div>\r\n  <div\r\n    *ngIf=\"!pdfViewerReady\"\r\n    class=\"d-flex flex-wrap flex-column h-100 w-100 justify-content-center align-content-center\"\r\n  >\r\n    <div class=\"spinner-border\" role=\"status\"></div>\r\n  </div>\r\n\r\n  <div *ngIf=\"pdfPageCount === 0\" class=\"d-flex h-100 w-100 justify-content-center\">Empty PDF</div>\r\n\r\n  <div [class.d-none]=\"!pdfViewerReady\">\r\n    <ngx-extended-pdf-viewer\r\n      [src]=\"pdfUrl\"\r\n      [useBrowserLocale]=\"true\"\r\n      [mobileFriendlyZoom]=\"'150%'\"\r\n      [showSecondaryToolbarButton]=\"false\"\r\n      [showToolbar]=\"false\"\r\n      [showDownloadButton]=\"false\"\r\n      (pdfLoadingFailed)=\"handlePDFLoadFailEvent($event)\"\r\n      (pagesLoaded)=\"handlePDFLoadingEvent($event)\"\r\n    ></ngx-extended-pdf-viewer>\r\n  </div>\r\n</div>\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatLegacyDialogRef as MatDialogRef, MAT_LEGACY_DIALOG_DATA as MAT_DIALOG_DATA } from '@angular/material/legacy-dialog';\r\nimport { Router } from '@angular/router';\r\nimport { VERIFICATION_ROUTE } from 'src/app/core/helpers/constants';\r\n\r\n@Component({\r\n    selector: 'app-grain-sa-modal',\r\n    templateUrl: './grain-sa-modal.component.html',\r\n    styleUrls: ['./grain-sa-modal.component.scss'],\r\n})\r\nexport class GrainSaModalComponent implements OnInit {\r\n    constructor(\r\n        private dialogRef: MatDialogRef<GrainSaModalComponent>,\r\n        private router: Router,\r\n        @Inject(MAT_DIALOG_DATA) public data: { showSubscription: boolean },\r\n    ) {}\r\n\r\n    ngOnInit(): void {}\r\n\r\n    handleClose(): void {\r\n        this.dialogRef.close();\r\n    }\r\n\r\n    handleNavigateToSubscriptions(): void {\r\n        this.dialogRef.close();\r\n        this.router.navigate([VERIFICATION_ROUTE]);\r\n    }\r\n}\r\n","<div class=\"l-container\">\r\n    <!-- #region Header -->\r\n\r\n    <div class=\"l-header\">\r\n        <img class=\"l-close-icon\" src=\"./assets/icons/close-icon-dark.svg\" alt=\"close\" (click)=\"handleClose()\" />\r\n\r\n        <img class=\"l-icon\" src=\"../../../assets/icons/grainSA-icon.svg\" alt=\"Grain SA icon\" />\r\n\r\n        <h1 class=\"g-text-h1-dark\">\r\n            <b>Grain SA</b>\r\n        </h1>\r\n    </div>\r\n\r\n    <!-- #endregion -->\r\n\r\n    <!-- #region Modal Content -->\r\n\r\n    <div class=\"l-content g-text-p-dark\">\r\n        <p>\r\n            Use your Grain SA membership number and get a years' free Grain SA verification type. Input your membership\r\n            number and after we verify your number you can purchase the Grain SA verification and get access to all of\r\n            MX's premium features.\r\n        </p>\r\n        <p class=\"mt-2\">\r\n            You will see a green tick <img class=\"mx-1\" src=\"./assets/icons/green-tick.svg\" /> when MX has confirmed\r\n            your membership. You can then purchase the Grain SA verification.\r\n        </p>\r\n    </div>\r\n\r\n    <!-- #endregion -->\r\n\r\n    <!-- #region Buttons -->\r\n\r\n    <button class=\"g-primary-button\" (click)=\"handleClose()\">Okay, got it!</button>\r\n    <button *ngIf=\"data.showSubscription\" class=\"g-secondary-button mt-2\" (click)=\"handleNavigateToSubscriptions()\">\r\n        Go to Subscriptions\r\n    </button>\r\n\r\n    <!-- #endregion -->\r\n</div>\r\n","import { CommonModule } from '@angular/common';\r\nimport { Component, OnInit, Input, NgModule } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-loading-spinner',\r\n    templateUrl: './loading-spinner.component.html',\r\n    styleUrls: ['./loading-spinner.component.scss'],\r\n})\r\nexport class LoadingSpinnerComponent implements OnInit {\r\n    @Input() loading = false;\r\n\r\n    constructor() {}\r\n\r\n    ngOnInit() {}\r\n}\r\n@NgModule({\r\n    declarations: [LoadingSpinnerComponent],\r\n    imports: [CommonModule],\r\n    exports: [LoadingSpinnerComponent],\r\n})\r\nexport class LoadingSpinnerModule {}\r\n","<div id=\"nb-global-spinner\" class=\"spinner\">\r\n    <div class=\"blob blob-0\"></div>\r\n    <div class=\"blob blob-1\"></div>\r\n    <div class=\"blob blob-2\"></div>\r\n    <div class=\"blob blob-3\"></div>\r\n    <div class=\"blob blob-4\"></div>\r\n    <div class=\"blob blob-5\"></div>\r\n</div>\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MAT_LEGACY_DIALOG_DATA as MAT_DIALOG_DATA, MatLegacyDialogRef as MatDialogRef } from '@angular/material/legacy-dialog';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n@Component({\r\n    selector: 'app-payment-check-modal',\r\n    templateUrl: './payment-check-modal.component.html',\r\n    styleUrls: ['./payment-check-modal.component.scss'],\r\n})\r\nexport class PaymentCheckModalComponent implements OnInit {\r\n    feedbackMessage: string;\r\n\r\n    constructor(\r\n        public dialogRef: MatDialogRef<PaymentCheckModalComponent>,\r\n        public domSanitizer: DomSanitizer,\r\n        @Inject(MAT_DIALOG_DATA)\r\n        public data: {\r\n            metricTons: number;\r\n            paymentStepReady: boolean;\r\n            paymentComplete: boolean;\r\n            counterPartySubmitted: boolean;\r\n            currentUserSubmitted: boolean;\r\n        },\r\n    ) {}\r\n\r\n    commission = 0;\r\n    ngOnInit(): void {\r\n        this.commission = this.data.metricTons ? this.data.metricTons * 3 : 0;\r\n        console.log(this.data);\r\n        this.prepareFeedbackMessage();\r\n    }\r\n\r\n    prepareFeedbackMessage(): void {\r\n        if (this.data.paymentStepReady && this.data.currentUserSubmitted && this.data.counterPartySubmitted) {\r\n            this.feedbackMessage = `\r\n          <p class=\"d-flex\">\r\n            The commission made by the agent to be payed to MX is R${this.commission}\r\n          </p>\r\n\r\n          <h2 class=\"g-text-h2-dark\">\r\n            Bank Account Details\r\n          </h2>\r\n\r\n          <p class=\"d-flex flex-row text-left\">\r\n            Rekeningnaam/Account Name: MATCHMX (PTY) LTD <br>\r\n            ABSA-rekeningnommer/ABSA Account Number: 4090190760 <br>\r\n            Rekeningtipe/Account Type: Current (Tjek) <br>\r\n            Takkode/Branch Code: 632005 <br>\r\n          </p>`;\r\n        } else if (!this.data.paymentStepReady && this.data.currentUserSubmitted && !this.data.counterPartySubmitted) {\r\n            this.feedbackMessage = `\r\n          <p>\r\n            This negotiation is pending submission from the Counter Party.\r\n            Payment for Broker services will be due when the Counter Party submits the Match.\r\n          </p>\r\n           `;\r\n        } else if (!this.data.paymentStepReady && !this.data.currentUserSubmitted && this.data.counterPartySubmitted) {\r\n            this.feedbackMessage = `\r\n          <p>\r\n            This negotiation is pending because you have not yet submitted the Match.\r\n            Payment for Broker services will be due once you have submitted the Match.\r\n          </p>`;\r\n        } else if (this.data.paymentComplete) {\r\n            this.feedbackMessage = `\r\n          <p>\r\n            This negotiation has now been closed and is considered complete.\r\n            Payment for Broker services has been completed.\r\n          </p>`;\r\n        }\r\n    }\r\n\r\n    handleCloseModal(): void {\r\n        this.dialogRef.close();\r\n    }\r\n}\r\n","<div mat-dialog-content class=\"d-flex flex-column\">\r\n  <div class=\"d-flex flex-row justify-content-end\" (click)=\"handleCloseModal()\">\r\n    <img src=\"assets/icons/close-icon-dark.svg\" alt=\"close\" />\r\n  </div>\r\n\r\n  <div class=\"d-flex flex-column\">\r\n    <h1 class=\"g-text-h1-dark mb-3 w-100\">\r\n      Broker Payment Check\r\n    </h1>\r\n\r\n    <div class=\"g-text-p-dark w-100 text-center\" [innerHTML]=\"domSanitizer.bypassSecurityTrustHtml(feedbackMessage)\">\r\n    </div>\r\n\r\n    <div class=\"d-flex flex-column\">\r\n      <button mat-flat-button [mat-dialog-close]=\"true\" class=\"g-primary-button mt-0\">\r\n        Proceed\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatLegacyDialogRef as MatDialogRef } from '@angular/material/legacy-dialog';\r\n\r\n@Component({\r\n    selector: 'app-refresh-modal',\r\n    templateUrl: './refresh-modal.component.html',\r\n    styleUrls: ['./refresh-modal.component.scss'],\r\n})\r\nexport class RefreshModalComponent implements OnInit {\r\n    constructor(private dialogRef: MatDialogRef<RefreshModalComponent>) {}\r\n\r\n    ngOnInit(): void {}\r\n\r\n    handleCloseModal() {\r\n        this.dialogRef.close();\r\n    }\r\n}\r\n","<div class=\"l-container\">\r\n    <div class=\"l-modal\">\r\n        <h2 class=\"g-text-h2\"><b>Match Exchange Update</b></h2>\r\n        <p class=\"g-text-p my-4 mx-2\">\r\n            Match Exchange just got better and will now refresh. <br />We apologise for any inconvenience.\r\n        </p>\r\n        <button mat-flat-button class=\"w-100 g-primary-button\" (click)=\"handleCloseModal()\">Refresh</button>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Location } from '@angular/common';\r\nimport { Store, select } from '@ngrx/store';\r\nimport * as fromRoot from 'src/app/features/dashboard/dashboard.selectors';\r\nimport { take } from 'rxjs/operators';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport {\r\n    NEGOTIATING_ROOM_ROUTE,\r\n    NEGOTIATIONS_COMPLETED_ROUTE,\r\n    NEGOTIATION_EDIT_ROUTE,\r\n} from 'src/app/core/helpers/constants';\r\nimport { AnimationOptions } from 'ngx-lottie';\r\n\r\n@Component({\r\n    selector: 'app-success-page',\r\n    templateUrl: './success-page.component.html',\r\n    styleUrls: ['./success-page.component.scss'],\r\n})\r\nexport class SuccessPageComponent implements OnInit {\r\n    lotMatchId: number;\r\n    hasOpposingPartySubmitted: boolean = false;\r\n\r\n    options: AnimationOptions = {\r\n        path: './assets/images/success-lottie.json',\r\n        loop: false,\r\n    };\r\n\r\n    constructor(\r\n        private route: ActivatedRoute,\r\n        private router: Router,\r\n        private location: Location,\r\n        private store: Store<fromRoot.State>,\r\n    ) {}\r\n\r\n    ngOnInit(): void {\r\n        this.route.params.pipe(take(1)).subscribe(({ id }) => {\r\n            if (id) {\r\n                this.lotMatchId = id;\r\n            }\r\n        });\r\n\r\n        this.route.queryParams.pipe(take(1)).subscribe(({ hasOpposingPartySubmitted }) => {\r\n            if (hasOpposingPartySubmitted) {\r\n                this.hasOpposingPartySubmitted = true;\r\n            }\r\n        });\r\n    }\r\n\r\n    handleRouteToNegotiation() {\r\n        this.store.pipe(select(fromRoot.matchSelectors.getNewMatchId), take(1)).subscribe((lotMatchId) => {\r\n            if (lotMatchId) {\r\n                this.router.navigate([`${NEGOTIATION_EDIT_ROUTE}/${lotMatchId}`], {\r\n                    queryParams: { fromSuccess: true },\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    handleContinueSwiping() {\r\n        this.location.back();\r\n    }\r\n\r\n    handleNavigateToNegotiationCard() {\r\n        this.hasOpposingPartySubmitted\r\n            ? this.router.navigate([NEGOTIATIONS_COMPLETED_ROUTE], { queryParams: { fromSuccess: true } })\r\n            : this.router.navigate([NEGOTIATING_ROOM_ROUTE]);\r\n    }\r\n}\r\n","<div class=\"g-app-dimensions\">\r\n    <div class=\"l-container\">\r\n        <div class=\"l-content\">\r\n            <ng-lottie class=\"l-image\" [options]=\"options\"></ng-lottie>\r\n            <div class=\"l-success-text\">\r\n                <ng-container *ngIf=\"!lotMatchId; else showSkuduMatchText\">\r\n                    <h1 class=\"g-text-h1-dark mb-2\"><b>Great!</b></h1>\r\n                    <h1 class=\"g-text-h1-dark\">Let's get serious</h1>\r\n                </ng-container>\r\n                <ng-template #showSkuduMatchText>\r\n                    <h1 class=\"g-text-h1-dark mb-2\"><b>Congratulations!</b></h1>\r\n                    <h1 class=\"g-text-h1-dark mb-4\">You have a Match!</h1>\r\n                    <h2 class=\"g-text-h2\">Your Match has been notified of this.</h2>\r\n                </ng-template>\r\n            </div>\r\n\r\n            <!-- #region Buttons -->\r\n            <div *ngIf=\"!lotMatchId; else showNegotiatingButton\" class=\"l-negotiations\">\r\n                <button mat-flat-button (click)=\"handleRouteToNegotiation()\" class=\"g-primary-button mt-4\">\r\n                    Let's Negotiate\r\n                </button>\r\n                <button class=\"g-secondary-button mt-3\" (click)=\"handleContinueSwiping()\">Continue swiping</button>\r\n            </div>\r\n            <ng-template #showNegotiatingButton>\r\n                <button mat-flat-button (click)=\"handleNavigateToNegotiationCard()\" class=\"g-primary-button mt-4\">\r\n                    {{ hasOpposingPartySubmitted ? 'View in completed negotiations' : 'View in negotiating room' }}\r\n                </button>\r\n            </ng-template>\r\n            <!-- #endregion -->\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { AngularFirestoreModule } from '@angular/fire/compat/firestore';\r\nimport { AngularFireAuthModule } from '@angular/fire/compat/auth';\r\nimport { AngularFireModule } from '@angular/fire/compat';\r\nimport { AngularFireAnalyticsModule, UserTrackingService } from '@angular/fire/compat/analytics';\r\nimport { AngularFireFunctionsModule } from '@angular/fire/compat/functions';\r\nimport { AngularFireMessagingModule } from '@angular/fire/compat/messaging';\r\nimport { environment } from '../../../environments/environment';\r\n\r\n@NgModule({\r\n    declarations: [],\r\n    imports: [\r\n        AngularFireAuthModule,\r\n        AngularFirestoreModule,\r\n        AngularFireAnalyticsModule,\r\n        AngularFireModule.initializeApp(environment.firebase),\r\n        AngularFirestoreModule.enablePersistence(),\r\n        AngularFireFunctionsModule,\r\n        AngularFireMessagingModule,\r\n    ],\r\n    exports: [\r\n        AngularFireAuthModule,\r\n        AngularFirestoreModule,\r\n        AngularFireAnalyticsModule,\r\n        AngularFireFunctionsModule,\r\n        AngularFireMessagingModule,\r\n    ],\r\n    providers: [UserTrackingService],\r\n})\r\nexport class FirebaseModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { SCOUT_CREATE_ROUTE, verificationTypes, SUPPORT_ROUTE } from 'src/app/core/helpers/constants';\r\nimport { take } from 'rxjs/operators';\r\nimport { VerificationType } from 'src/app/core/models/viewModels';\r\nimport { Dictionary } from '@ngrx/entity';\r\n\r\n@Component({\r\n    selector: 'app-subscribe',\r\n    templateUrl: './subscribe.component.html',\r\n    styleUrls: ['./subscribe.component.scss'],\r\n})\r\nexport class SubscribeComponent implements OnInit {\r\n    fromSupport: boolean = false;\r\n    subscribeContent: Dictionary<VerificationType> = verificationTypes;\r\n    verificationOrder: number[] = [4, 1, 3, 2, 5];\r\n    constructor(private route: ActivatedRoute, private router: Router) {}\r\n\r\n    ngOnInit(): void {\r\n        this.route.queryParams.pipe(take(1)).subscribe(({ fromSupport }) => {\r\n            if (fromSupport === 'true') this.fromSupport = true;\r\n        });\r\n    }\r\n\r\n    handleNavigateCreateScout() {\r\n        this.router.navigate([this.fromSupport ? SUPPORT_ROUTE : SCOUT_CREATE_ROUTE]);\r\n    }\r\n}\r\n","<div class=\"g-app-dimensions\">\r\n    <div class=\"l-container\">\r\n        <div class=\"l-content l-fade-in\">\r\n            <h1 class=\"g-text-h1-dark mb-4 mt-3\">Subscribe to be Verified</h1>\r\n            <p class=\"g-text-p-dark mb-3\">Raise your profile and enjoy multiple benefits.</p>\r\n            <p class=\"g-text-p-dark mb-4\">Subscribe as a:</p>\r\n            <div class=\"l-verification-row ml-3 my-3\" *ngFor=\"let verification of verificationOrder\">\r\n                <img\r\n                    class=\"l-img\"\r\n                    src=\"{{ subscribeContent[verification].source }}\"\r\n                    alt=\"{{ subscribeContent[verification].name }}\"\r\n                />\r\n                <p class=\"g-text-p-dark l-verification-text pl-5\">{{ subscribeContent[verification].name }}</p>\r\n            </div>\r\n        </div>\r\n        <button mat-flat-button class=\"g-primary-button\" (click)=\"handleNavigateCreateScout()\">Next</button>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { take } from 'rxjs/operators';\r\nimport { ONBOARDING_ROUTE, SCOUT_CREATE_ROUTE } from './../../core/helpers/constants';\r\n\r\n@Component({\r\n    selector: 'app-transactional-risks',\r\n    templateUrl: './transactional-risks.component.html',\r\n    styleUrls: ['./transactional-risks.component.scss'],\r\n})\r\nexport class TransactionalRisksComponent implements OnInit {\r\n  fromSupport: boolean = false;\r\n    constructor(private route: ActivatedRoute, private router: Router) {}\r\n\r\n    ngOnInit(): void {\r\n      this.route.queryParams.pipe(take(1)).subscribe(({ fromSupport }) => {\r\n        if (fromSupport === 'true') this.fromSupport = true;\r\n      });\r\n    }\r\n\r\n    handleNavigateToOnboarding() {\r\n        this.router.navigate([ONBOARDING_ROUTE], { queryParams: { fromSupport: this.fromSupport } });\r\n    }\r\n\r\n    handleNavigateCreateScout() {\r\n        this.router.navigate([SCOUT_CREATE_ROUTE]);\r\n    }\r\n}\r\n","<div class=\"g-app-dimensions\">\r\n    <div class=\"l-container\">\r\n        <div class=\"l-content l-fade-in\">\r\n            <h1 class=\"g-text-h1-dark mb-4\">No Transactional Risk</h1>\r\n            <p class=\"g-text-p-dark mb-3\">There is no transactional risk for either buyers or sellers.</p>\r\n            <p class=\"g-text-p-dark\">MX solves the two most important problems in the marketplace.</p>\r\n            <img class=\"l-img my-4\" src=\"assets/images/connect-buyers-sellers.svg\" alt=\"Buyers & Sellers\" />\r\n            <p class=\"g-text-p-dark\">Firstly, connecting buyers and sellers with similar needs.</p>\r\n            <img class=\"l-img my-4\" src=\"assets/images/price-discovery.svg\" alt=\"Discovery\" />\r\n            <p class=\"g-text-p-dark\">Secondly, MX facilitates price discovery between buyers and sellers.</p>\r\n        </div>\r\n        <button mat-flat-button class=\"g-primary-button my-2\" (click)=\"handleNavigateToOnboarding()\">Next</button>\r\n        <button *nfIf=\"!fromSupport\" mat-flat-button class=\"g-secondary-button\" (click)=\"handleNavigateCreateScout()\">\r\n            Skip Tutorial\r\n        </button>\r\n    </div>\r\n</div>\r\n","//#region Test Environment\r\nexport const environment = {\r\n    production: true,\r\n    firebase: {\r\n        apiKey: 'AIzaSyBxK92jQdfceClVqvHJur6D2181Z-1YWk0',\r\n        authDomain: 'skudutest.firebaseapp.com',\r\n        databaseURL: 'https://skudutest.firebaseio.com',\r\n        projectId: 'skudutest',\r\n        storageBucket: 'skudutest.appspot.com',\r\n        messagingSenderId: '519714862029',\r\n        appId: '1:519714862029:web:058a9979c6cafed6',\r\n        measurementId: 'G-15C38FLYMS',\r\n    },\r\n    LOGO: '../../../assets/images/logofont.PNG',\r\n    API: 'https://testapi.matchmx.com:50785/api',\r\n    LOCALHOST_API: 'https://localhost:44366/api',\r\n    STANDARD_QUALITY_ID: 0,\r\n    DEFAULT_PACKAGING_ID: 1,\r\n    DEFAULT_UOM_ID: 1,\r\n    DEFAULT_PAYMENT_ID: 6,\r\n    ROUGHAGE_BALES_CROP_IDS: [19, 20, 21, 22, 23, 25, 26, 27, 28, 93, 94, 95, 96, 97, 98, 99, 115, 116, 124],\r\n    STRAW_CROP_IDS: [19, 20, 22, 26, 28],\r\n    HAY_CROP_IDS: [21, 23, 25, 27],\r\n    STRAW_HAY_INCO_TERM_IDS: [1, 6],\r\n    ROUGHAGE_BALES_INCO_TERM_IDS: [1, 3],\r\n    STRAW_HAY_UNIT_OF_MEASURE_IDS: [1, 5],\r\n    CROP_CATEGORIES: [9, 10, 11, 13, 17],\r\n};\r\n//#endregion\r\n\r\n// #region Live Environment\r\n// export const environment = {\r\n//     production: true,\r\n//     firebase: {\r\n//         apiKey: 'AIzaSyAPz_4c60V_PBTnACgcWOz2nVPKpyN8DT8',\r\n//         authDomain: 'skudumain.firebaseapp.com',\r\n//         databaseURL: 'https://skudumain.firebaseio.com',\r\n//         projectId: 'skudumain',\r\n//         storageBucket: 'skudumain.appspot.com',\r\n//         messagingSenderId: '663811423141',\r\n//         appId: '1:663811423141:web:5ddbed1a59e7a99b2f064c',\r\n//     },\r\n//     LOGO: '../../../assets/images/logofont.PNG',\r\n//     API: 'https://api.matchmx.com:50685/api',\r\n//     STANDARD_QUALITY_ID: 0,\r\n//     DEFAULT_PACKAGING_ID: 1,\r\n//     DEFAULT_UOM_ID: 1,\r\n//     DEFAULT_PAYMENT_ID: 6,\r\n//     STRAW_CROP_IDS: [19, 20, 22, 26, 28],\r\n//     HAY_CROP_IDS: [21, 23, 25, 27],\r\n//     STRAW_HAY_INCO_TERM_IDS: [1, 6],\r\n//     STRAW_HAY_UNIT_OF_MEASURE_IDS: [1, 5],\r\n//     CROP_CATEGORIES: [9, 10, 11, 13],\r\n// };\r\n//#endregion\r\n","// #region Test Environment\r\nexport const environment = {\r\n    production: false,\r\n    firebase: {\r\n        apiKey: 'AIzaSyBxK92jQdfceClVqvHJur6D2181Z-1YWk0',\r\n        authDomain: 'skudutest.firebaseapp.com',\r\n        databaseURL: 'https://skudutest.firebaseio.com',\r\n        projectId: 'skudutest',\r\n        storageBucket: 'skudutest.appspot.com',\r\n        messagingSenderId: '519714862029',\r\n        appId: '1:519714862029:web:058a9979c6cafed6',\r\n        measurementId: 'G-15C38FLYMS',\r\n    },\r\n    LOGO: '../../../assets/images/logofont.PNG',\r\n    API: 'https://testapi.matchmx.com:50785/api',\r\n    LOCALHOST_API: 'https://localhost:44366/api',\r\n    STANDARD_QUALITY_ID: 0,\r\n    DEFAULT_PACKAGING_ID: 1,\r\n    DEFAULT_UOM_ID: 1,\r\n    DEFAULT_PAYMENT_ID: 6,\r\n    ROUGHAGE_BALES_CROP_IDS: [19, 20, 21, 22, 23, 25, 26, 27, 28, 93, 94, 95, 96, 97, 98, 99, 115, 116, 124],\r\n    STRAW_CROP_IDS: [19, 20, 22, 26, 28],\r\n    HAY_CROP_IDS: [21, 23, 25, 27],\r\n    STRAW_HAY_INCO_TERM_IDS: [1, 6],\r\n    ROUGHAGE_BALES_INCO_TERM_IDS: [1, 3],\r\n    STRAW_HAY_UNIT_OF_MEASURE_IDS: [1, 5],\r\n    CROP_CATEGORIES: [9, 10, 11, 13, 17],\r\n};\r\n// #endregion\r\n\r\n// =================================== NB =================================== //\r\n\r\n// The below Live environment should be used only when attempting to serve a\r\n// a local version of the app that points to the Live Server & DB,\r\n// and should only be used STRICTLY for testing whether or not a build of the\r\n// app in it's current state will work whilst pointing to the Live server & DB.\r\n\r\n// PROCEED WITH CAUTION, and realise that your interactions with the app\r\n// locally will alter the clients Live DB.\r\n\r\n// GitLense is watching you...\r\n\r\n// ========================================================================== //\r\n\r\n// #region Live Environment\r\n// export const environment = {\r\n//     production: true,\r\n//     firebase: {\r\n//         apiKey: 'AIzaSyAPz_4c60V_PBTnACgcWOz2nVPKpyN8DT8',\r\n//         authDomain: 'skudumain.firebaseapp.com',\r\n//         databaseURL: 'https://skudumain.firebaseio.com',\r\n//         projectId: 'skudumain',\r\n//         storageBucket: 'skudumain.appspot.com',\r\n//         messagingSenderId: '663811423141',\r\n//         appId: '1:663811423141:web:5ddbed1a59e7a99b2f064c',\r\n//     },\r\n//     LOGO: '../../../assets/images/logofont.PNG',\r\n//     API: 'https://api.matchmx.com:50685/api',\r\n//     STANDARD_QUALITY_ID: 0,\r\n//     DEFAULT_PACKAGING_ID: 1,\r\n//     DEFAULT_UOM_ID: 1,\r\n//     DEFAULT_PAYMENT_ID: 6,\r\n//     STRAW_CROP_IDS: [19, 20, 22, 26, 28],\r\n//     HAY_CROP_IDS: [21, 23, 25, 27],\r\n//     STRAW_HAY_INCO_TERM_IDS: [1, 6],\r\n//     STRAW_HAY_UNIT_OF_MEASURE_IDS: [1, 5],\r\n//     CROP_CATEGORIES: [9, 10, 11, 13],\r\n// };\r\n// #endregion\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n    enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic()\r\n    .bootstrapModule(AppModule)\r\n    .catch(err => console.error(err));\r\n"],"names":["RouterModule","AngularFireAuthGuard","redirectLoggedInTo","redirectUnauthorizedTo","LandingComponent","TransactionalRisksComponent","SubscribeComponent","SuccessPageComponent","HOME_ROUTE","SIGNIN_ROUTE","DocumentViewerComponent","redirectLoggedInToHome","redirectUnauthorizedToLogin","routes","path","redirectTo","pathMatch","component","loadChildren","then","m","OnboardingModule","ScoutsModule","canActivate","data","authGuardPipe","AuthenticationModule","HomeModule","SupportModule","DashboardModule","ClearingModule","LotsModule","NegotiationsModule","BrokerDashboardModule","AppRoutingModule","_","_2","_3","forRoot","imports","i1","exports","MatLegacyDialog","MatDialog","SwUpdate","Store","select","take","filter","fromRoot","RefreshModalComponent","Purchases","Capacitor","i0","ɵɵelement","ɵɵelementStart","ɵɵelementEnd","ɵɵtemplate","AppComponent_div_0_app_loading_spinner_1_Template","AppComponent_div_0_div_3_Template","ɵɵadvance","ɵɵproperty","appData_r1","isLoading","persist","AppComponent","constructor","store","dialog","serviceWorkerUpdate","purchases","title","appState$","pipe","getAppState","isWeb","ngOnInit","isEnabled","versionUpdates","evt","type","subscribe","dialogRef","open","panelClass","afterClosed","window","location","reload","getPlatform","onDeviceReady","setDebugLogsEnabled","setFirebaseAppInstanceID","ɵɵdirectiveInject","i2","i3","i4","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","AppComponent_div_0_Template","ɵɵpipeBind1","CommonModule","NGRXModule","BrowserAnimationsModule","FirebaseModule","LoadingSpinnerModule","HttpClientJsonpModule","HttpClientModule","MatLegacyDialogModule","MatDialogModule","FormsModule","MatLegacyButtonModule","MatButtonModule","MatRippleModule","MatLegacySelectModule","MatSelectModule","MatLegacyProgressSpinnerModule","MatProgressSpinnerModule","ServiceWorkerModule","LottieModule","AdditionalInfoModalComponent","NotificationComponent","InAppPurchase2","CategoryInfoModalComponent","environment","PaymentCheckModalComponent","GrainSaModalComponent","NgxExtendedPdfViewerModule","Loader","NgxGpAutocompleteModule","playerFactory","AppModule","bootstrap","provide","useValue","apiKey","libraries","register","enabled","production","player","declarations","cloneDeep","filterOutNegotiationDocument","lotMatchId","brokerNegotiationDocuments","length","brokerDocument","document","getAllLotMatchIdsFromNegotiationCards","negotiationCards","lotMatchIds","map","card","activeNegotiations","activeNegotiation","push","newClientsListWithoutDuplicates","stateClients","actionClients","newStateClients","newActionClients","i","actionClient","existingIndex","findIndex","client","uid","splice","concat","checkIfClientHasBroker","clientId","brokerRequests","brokerRequest","clientUid","acceptedRequest","version","HOURS_IN_A_DAY","MINUTES_IN_AN_HOUR","SECONDS_IN_A_MINUTE","MILLISECONDS_IN_A_SECOND","FARMER_VERIFICATION_ID","FARMER_ON_FARM_STORAGE_VERIFICATION_ID","PROCESSOR_OF_BYPRODUCTS_VERIFICATION_ID","BUYER_VERIFICATION_ID","TRANSPORTER_VERIFICATION_ID","UNVERIFIED_VERIFICATION_ID","GRAINSA_VERIFICATION_ID","MATCH_EXCHANGE_VERIFICATION_ID","baseVerifications","promotionVerifications","ONBOARDING_ROUTE","DOCUMENT_VIEWER_ROUTE","TRANSACTIONAL_RISK_ROUTE","SUBSCRIBE_ROUTE","SIGNUP_ROUTE","FORGOT_PASSWORD_ROUTE","LANDING_ROUTE","BROKER_DASHBOARD_ROUTE","SUPPORT_ROUTE","CLEARING","SCOUTS_ROUTE","LOTS_ROUTE","NEGOTIATING_ROOM_ROUTE","NEGOTIATIONS_COMPLETED_ROUTE","BROWSE_THE_MARKET_ROUTE","BROKERS_ROUTE","REQUESTS_ROUTE","PROFILE_ROUTE","LOTS_CROP_CATEGORIES_ROUTE","LOTS_CREATE_ROUTE","LOTS_EDIT_ROUTE","LOTS_MATCH_ROUTE","SCOUT_CREATE_ROUTE","SCOUT_EDIT_ROUTE","SCOUT_FINE_TUNE_ROUTE","SCOUT_SEARCH_RESULT_ROUTE","NEGOTIATION_EDIT_ROUTE","NEGOTIATION_VIEW_ROUTE","DELIVERY_POINT_ROUTE","SUCCESS_ROUTE","MATCHBOX_ROUTE","FAQ_ROUTE","CONTACT_PAGE_ROUTE","KYC_PARTY_ROUTE","DETAILED_TUTORIAL_ROUTE","VERIFICATION_ROUTE","onboardingContent","info","imagePath","HOME_CARDS_DATA","browse","routesTo","source","sourceAlt","clearing","scouts","stepText","lots","negotiations","completed","brokers","profile","FAQ","SUPPORT_CARDS_DATA","linksTo","TUTORIAL_TABLE_DATA","value","iconDetails","name","sourceGrey","sourceBlue","Browse","ratingData","matchItems","displayChoices","key","submitMatchContent","adminEmails","cropCategoriesImages","sellerDeliveryPointIcon","url","scaledSize","width","height","buyerDeliveryPointIcon","verificationTypes","id","VERIFICATION_SUBSCRIPTIONS","identifier","product","price","product_monthly","promotion","RCproductIdentifiers","DEFAULT_VERIFICATION","verificationDate","Date","now","GRAINSA_VERIFICATION_TEXT","description","period","emailRegex","specialCharacterRegex","numberRegex","letterRegex","requiredUserProfileItems","lotFormAsteriskMonths","STEP_INFO_DATA","iconPath","tooltip","heading","body","saveAs","dateStringToDate","objectToConvert","Array","mapArrayOfObjects","convertDateStringToObject","object","Object","keys","toLowerCase","includes","objectArray","downloadFile","replacer","header","csv","row","fieldName","JSON","stringify","join","unshift","csvArray","blob","Blob","prepareScoutFromMarketLotCardHelper","marketLotCard","lotType","crop","town","radius","counterPartyLotType","creatorType","scoutType","inSouthAfrica","googlePlaceId","isPublic","transformSingleUsersForVerificationHelper","verificationId","user","fullName","firstname","lastname","verification","verificationExpires","matchRCIdentifierToVerificationIdHelper","parseInt","calculateBrokerDistanceHelper","coordinates","latUser","lat","lngUser","lng","slice","distances","latAgent","lngAgent","radLatUser","Math","PI","radLatAgent","theta","radTheta","dist","sin","cos","acos","ceil","getClientNotificationsCountHelper","notifications","notificationsCount","userId","filterBrokerHelper","sentByBroker","sentBy","sentByUids","brokerUid","sentByBrokers","broker","sort","a","b","distance","isProfileCompleteHelper","Boolean","email","phone","transformDateToUtcHelper","date","newDate","setHours","getHours","transformLotBeforeDispatchHelper","lot","quantity","dateFrom","dateTo","appActions","cropActions","authActions","scoutActions","deliveryPointActions","lotActions","matchActions","negotiationActions","notificationActions","paygateActions","brokersActions","errorConfig","duration","horizontalPosition","verticalPosition","successConfig","notificationConfig","ScoutClass","cropCategoryId","DeliveryPointClass","streetNumber","street","suburb","postalCode","region","province","country","locationType","AdditionalEntityDetailsClass","legalEntityName","exFarm","bbbeeRating","Lot","lotName","priceType","month","incoTerm","deliveryPoint","quality","paymentTerm","scoutId","exchange","quantityMeasure","safexOption","tradingEntityId","packaging","LotMatchDetails","FineTune","DateRange","MarketFilters","MarketFilterClass","cardType","gpsCoordinates","cropCategory","createAction","props","ReqCheckAuthorization","CheckAuthorizationFail","CheckAuthorizationSuccess","ReqToggleIsLoading","ReqGetAnalytics","GetAnalyticsFail","GetAnalyticsSuccess","ReqGetLotsInDateRange","GetLotsInDateRangeFail","GetLotsInDateRangeSuccess","ReqGetUsersForVerification","ReqGetUsersForVerificationFail","ReqGetUsersForVerificationSuccess","ReqEmailVerificationForm","ReqEmailVerificationFormFail","ReqEmailVerificationFormSuccess","MatSnackBar","ApiService","AuthService","Actions","ofType","createEffect","mergeMap","catchError","switchMap","repeat","actions","snackbarConfigs","snackBarConfigs","AppStateEffects","generateAndDownloadCSVLots","apiResponse","Name","Type","Crop","PriceType","Month","FromDate","toLocaleDateString","ToDate","IncoTerm","DeliveryPoint","Quality","Quantity","Price","PaymentTerm","IsPublic","ScoutId","Exchange","UnitOfMeasure","SafexOption","TradingEntityId","Packaging","actions$","authService","api","snackbar","ReqCheckAuthorization$","payload","getAuthorization","firebaseUser","dispatch","ReqGetUserFromAuthorization","GetUserFromAuthorizationSuccess","GetUserFromAuthorizationFail","storeAction","executedTime","flag","Error","error","console","log","message","logout","ReqGetAnalytics$","getAnalytics","analytics","ReqGetLotsInDateRange$","dateRange","getLotsInDateRange","ReqGetUsersForVerification$","getUsersForVerification","users","ReqEmailVerificationFormSuccess$","sendVerificationFormEmail","ɵɵinject","i5","factory","ɵfac","ReqLogoutAction","LotMatchFormDataSuccess","CropGradesSuccess","CropMonthsSuccess","CropMonthsAndGradesSuccess","CropPackagingSuccess","LotFormDataSuccess","createReducer","on","ClearState","addLoading","removeLoading","ScoutFormDataSuccess","appStateFeatureKey","initialState","initialLogin","dictLoading","unitsOfMeasure","incoTerms","priceTypes","paymentTerms","cropGrades","cropPackaging","months","appStateReducer","state","ReqEmailLogin","ReqEmailRegister","ReqProviderSignIn","EmailLoginFail","ProviderSignInFail","EmailRegistrationFail","EmailLoginSuccess","ProviderSignInSuccess","EmailRegisterSuccess","paymentOptions","grades","safexMonths","reducer","action","createFeatureSelector","createSelector","fromApp","selectAppState","getCropPackaging","appState","getCropGrades","appSate","getFormData","getIncoTermsByCropId","roughageBales","ROUGHAGE_BALES_CROP_IDS","cropId","ROUGHAGE_BALES_INCO_TERM_IDS","getUnitsOfMeasureByCropId","filterCropIds","STRAW_CROP_IDS","HAY_CROP_IDS","unitOfMeasure","STRAW_HAY_UNIT_OF_MEASURE_IDS","DEFAULT_UOM_ID","getUsers","appSelectors","authReducer","SaveAdditionalEntityDetails","SaveAdditionalEntityDetailsSuccess","SaveAdditionalEntityDetailsFail","ReqPasswordReset","UpdateUserFromInit","ReqUpdateUserDetails","ReqUpdateUserDetailsFail","ReqUpdateUserDetailsSuccess","ReqSubscriptionStatus","ReqUpdateUserVerificationStatus","ReqUpdateUserVerificationStatusFail","ReqUpdateUserVerificationStatusSuccess","ReqEntityDisplayInfo","EntityDisplayInfoFail","EntityDisplayInfoSuccess","ReqUpdateEntityInfo","UpdateEntityInfoFail","UpdateEntityInfoSuccess","ReqDeleteAccountEmail","ReqDeleteAccountEmailFail","ReqDeleteAccountEmailSuccess","ReqGetClientEntities","ReqGetClientEntitiesFail","ReqGetClientEntitiesSuccess","ClearClientEntities","SubscriptionService","of","combineLatest","EMPTY","from","AuthEffects","generateAdditionalDetailsWithTradingEntity","additionalDetails","entityId","additionalDetailsWithTradingEntity","constructErrorMessage","code","subService","ReqEmailLogin$","password","emailLogin","ReqProviderSignIn$","platform","providerLogin","nativeProviderLogin","ReqEmailRegister$","signUpData","emailSignUp","resetPassword","_payload","ReqLogoutAction$","unsubscribeComponent$","next","localStorage","clear","ReqGetUserFromAuthorization$","getUser","ReqGetClientEntities$","saveAdditionalEntityDetails$","authSelectors","getUserEntities","entities","getEntityById","entity","hasB_BBEE","disableClose","additionalEntityDetails","saveAdditionalEntityDetails","authResult","ReqSubscriptionStatus$","logIn","customerInfo","created","latestExpiryDate","latestExpirationDate","activeSubscriptions","userVerifications","getTime","showSnackBar","ReqEntityDisplayInfo$","getAdditionalEntityDetails","ReqUpdateEntityInfo$","additionalEntityDetail","ReqUpdateUserVerificationStatus$","verifyResponse","verifyUsers","userVerification","verificationResponse","response","failed","ReqUpdateUserDetails$","updateSQL","updateUserData","res","updateUser","phoneNumber","ReqDeleteAccountEmail$","deleteAccountRequest","i6","i7","i8","getStateData","authFeatureKey","getInitialState","initState","newState","userCopy","fromAuth","getAuthState","authState","BrokersService","NotificationsService","BrokersEffects","brokersService","ReqBrokersAndDistance_Shared$","ReqBrokersAndDistance_Shared","getBrokers","locationsToGeocode","forEach","getGeocodedAddresses","index","ReqBrokersAndDistance_SharedSuccess","ReqBrokersAndDistance_SharedFail","ReqCreateRequest_Shared$","ReqCreateRequest_Shared","createRequest","ReqCreateRequest_SharedSuccess","ReqCreateRequest_SharedFail","ReqAcceptRequest_Shared$","ReqAcceptRequest_Shared","acceptRequest","ReqAcceptRequest_SharedSuccess","ReqAcceptRequest_SharedFail","ReqDeleteRequest_Shared$","ReqDeleteRequest_Shared","deleteRequest","ReqDeleteRequest_SharedSuccess","ReqDeleteRequest_SharedFail","ReqSendPairingNotification_Shared$","ReqSendPairingNotification_Shared","fromBroker","newRequest","sendPairingNotification","ReqSendPairingNotification_SharedSuccess","ReqSendPairingNotification_SharedFail","ReqCheckIfClientExists_Broker$","ReqCheckIfClientExists_Broker","getClientByEmail","isBroker","ReqCheckIfClientExists_BrokerSuccess","ReqCheckIfClientExists_BrokerFail","ReqCheckIfClientHasBroker$","ReqCheckIfClientHasBroker","getClientBrokerRequests","result","ReqCheckIfClientHasBrokerSuccess","ReqCheckIfClientHasBrokerFail","ReqGetBrokerRequest$","ReqGetBrokerRequest","getBrokerRequest","GetBrokerRequestSuccess","pop","GetBrokerRequestFail","ReqToggleBrokerAdminRole$","ReqToggleBrokerAdminRole","adminRole","toggleBrokerAdminRole","ToggleBrokerAdminRoleSuccess","ToggleBrokerAdminRoleFail","ReqGetActiveClients_Broker$","ReqGetActiveClients_Broker","clientIds","getClients","clients","ReqGetActiveClients_BrokerSuccess","ReqGetActiveClients_BrokerFail","ReqGetPendingClients_Broker$","ReqGetPendingClients_Broker","ReqGetPendingClients_BrokerSuccess","ReqGetPendingClients_BrokerFail","ReqPendingBrokerRequests_Broker$","ReqPendingBrokerRequests_Broker","getPendingBrokerRequests","requests","ReqPendingBrokerRequests_BrokerSuccess","ReqPendingBrokerRequests_BrokerFail","ReqAcceptedBrokerRequests_Broker$","ReqAcceptedBrokerRequests_Broker","getAcceptedBrokerRequests","ReqAcceptedBrokerRequests_BrokerSuccess","acceptedRequests","ReqAcceptedBrokerRequests_BrokerFail","ReqClientBrokerRequests_Client$","ReqClientBrokerRequests_Client","ReqClientBrokerRequests_ClientSuccess","ReqClientBrokerRequests_ClientFail","ReqClientsNotifications$","ReqClientsNotifications","getClientsNotifications","clientsUids","ReqClientsNotificationsSuccess","ReqClientsNotificationsFail","ReqCoordinates_Client$","ReqCoordinates_Client","ReqCoordinates_ClientSuccess","ReqCoordinates_ClientFail","ReqCreateNegotiationDocument$","ReqCreateNegotiationDocument","buyerEmail","sellerEmail","buyerPaid","sellerPaid","createNegotiationDocument","CreateNegotiationDocumentSuccess","CreateNegotiationDocumentFail","ReqUpdateNegotiationDocument$","ReqUpdateNegotiationDocument","brokerNegotiation","updateBrokerNegotiationDocument","UpdateNegotiationDocumentSuccess","UpdateNegotiationDocumentFail","ReqGetBrokerNegotiationDocument$","ReqGetBrokerNegotiationDocuments","getBrokerNegotiations","brokerNegotiationDocs","GetBrokerNegotiationDocumentsSuccess","GetBrokerNegotiationDocumentsFail","ReqSendIntroductionEmail$","ReqSendIntroductionEmail","sendIntroductionEmail","updateBrokerNegotiationEmailStatus","SendIntroductionEmailSuccess","SendIntroductionEmailFail","PopulateClientObject","ClearClientObject_Broker","ResetActiveClientsState","ResetPendingClientsState","ReqBrokerTermsCheck_Client","ClearBrokerRequest","brokersFeatureKey","getBrokersFromLocalStorage","undefined","activeClients","pendingClients","pendingRequests","getClientFromLocalStorage","getBrokerRequestFromLocalStorage","seenTsAndCs","clientBrokerRequests","getClientBrokerRequestsFromLocalStorage","clientsNotifications","brokerNegotiations","localStorageValue","getItem","parse","setItem","removeItem","pendingRequest","pendingClient","notificationDict","request","newBrokerNegotiations","fromBrokers","selectBrokersState","brokersState","getClientsBrokerRequests","getBrokerTermsCheck","getCurrentClient","getActiveClients","getPendingClients","getPendingRequests","getAcceptedRequests","getClientNotificationsCount","getNegotiationDocuments","getFilteredBrokers","activeBroker","brokerList","activeBrokerRequest","expiryDate","sortedBrokers","brokerRequestUids","filteredBrokers","getFilteredRequests","fromClientRequests","fromBrokerRequests","brokersSelectors","brokersReducer","ReqAllCrops","AllCropsFail","AllCropsSuccess","ReqCropCategories","ReqCropCategoriesFail","ReqCropCategoriesSuccess","ReqCropGrades","CropGradesFail","ReqCropMonths","CropMonthsFail","ReqCropMonthsAndGrades","CropMonthsAndGradesFail","ReqCropPackaging","CropPackagingFail","CropService","CropEffects","cropService","ReqAllCrops$","getAllCrops","crops","ReqCropCategories$","getCropCategories","cropCategories","ReqCropGrades$","ReqCropMonths$","getCropMonths","exchangeId","ReqCropMonthsAndGrades$","getCropMonthsAndGrades","ReqCropPackaging$","cropFeatureKey","exchanges","fromCrop","selectCropState","selectCropByCategoryId","cropState","categoryId","selectCropByCategories","cropSelectors","cropReducer","ReqCreateDeliveryPoint","CreateDeliveryPointFail","CreateDeliveryPointSuccess","ReqPublicDeliveryPoints","PublicDeliveryPointsSuccess","PublicDeliveryPointsFail","ReqEntityDeliveryPoints","EntityDeliveryPointsSuccess","EntityDeliveryPointsFail","ReqManagementData","ManagementDataFail","ManagementDataSuccess","ReqUpdateDeliveryPoint","UpdateDeliveryPointFail","UpdateDeliveryPointSuccess","ReqDeleteDeliveryPoint","DeleteDeliveryPointFail","DeleteDeliveryPointSuccess","Router","concatMap","DeliveryPointsService","DeliveryPointsEffects","router","deliveryPointService","ReqCreateDeliveryPoint$","createDeliveryPoint","ReqPublicDeliveryPoints$","getPublicDeliveryPoints","deliveryPoints","ReqEntityDeliveryPoints$","getEntityUsersDeliveryPoints","ReqManagementData$","getLocationTypes","publicDeliveryPoints","locationTypes","regions","ReqUpdateDeliveryPoint$","updateDeliveryPoint","navigate","queryParams","tabIndex","ReqDeleteDeliveryPoint$","deleteDeliveryPoint","createEntityAdapter","DeliveryPointsActions","deliveryPointsFeatureKey","adapter","selectId","selectDeliveryPointId","ids","removeAll","upsertMany","upsertOne","removeOne","fromDeliveryPoints","getDeliveryPointState","selectIds","getDeliveryPointIds","selectEntities","getDeliveryPointEntities","selectAll","getAllDeliveryPoints","selectTotal","getTotalDeliveryPoints","getSelectors","getManageDeliveryPointDetails","deliveryPointState","allDeliveryPoints","values","userDeliveryPoints","getSetupDeliveryPointDetails","getDeliveryPointById","deliveryPointMap","deliveryPointSelectors","deliveryPointReducer","lotSelectors","lotFeatureKey","lotReducer","ReqCreateLot","CreateLotFail","CreateLotSuccess","ReqLotFormData","LotFormDataFail","ReqUserLots","UserLotsFail","UserLotsSuccess","ReqUpdateLot","UpdateLotFail","UpdateLotSuccess","ReqPrivatiseLots","PrivatiseLotsFail","PrivatiseLotsSuccess","ReqDeleteLot","DeleteLotFail","DeleteLotSuccess","ReqSaveLotFormData","LinkCurrentScoutToLot","ClearAllLots","currentLot","linkedScout","lotCards","lotId","scout","fromLot","selectLotState","getLotCardIds","getLotCardEntities","getAllLotCards","getTotalLotCards","getCurrentLot","lotState","getAllOrderedLotCards","orderedLotCards","first","second","createdDate","getLinkedScout","matchSelectors","matchFeatureKey","matchReducer","ReqCreateLotMatch","CreateLotMatchFail","CreateLotMatchSuccess","ReqLoadLotMatches","LoadLotMatchesFail","LoadLotMatchesSuccess","ReqLotMatchFormData","LotMatchFormDataFail","ReqLotHasBrokerCheck","ReqLotHasBrokerCheckFail","ReqLotHasBrokerCheckSuccess","ReqUpdateLotMatch","UpdateLotMatchFail","UpdateLotMatchSuccess","currentMatches","matchId","matches","lotMatchIterations","lotMatchIteration","fromMatch","selectMatchState","getMatchIterationsIds","getMatchIterationsEntities","getAllMatchIterations","getTotalMatchIterations","getCurrentLotMatches","availableMatches","reverse","getNewMatchId","negotiationSelectors","negotiationFeatureKey","negotiationReducer","ReqUserNegotiationCards","UserNegotiationCardsFail","UserNegotiationCardsSuccess","ReqGetAvailableMatchIds","GetAvailableMatchIdsSuccess","GetAvailableMatchIdsFail","ReqLatestLotMatchIteration","LatestLotMatchIterationFail","LatestLotMatchIterationSuccess","ReqCompleteNegotiation","CompleteNegotiationFail","CompleteNegotiationSuccess","ReqClearNegotiation","ClearNegotiationFail","ClearNegotiationSuccess","ReqDeclineNegotiation","DeclineNegotiationFail","DeclineNegotiationSuccess","getLocalStorageLotMatchIds","completedNegotiations","activeNegotiationCards","completedNegotiationCards","fromNegotiation","selectNegotiationState","getNegotiationCardIds","getNegotiationCardEntities","getAllNegotiationCards","getTotalNegotiationCards","getAllOrderedNegotiationCards","orderedNegotiationCards","getLotMatchIds","negotiationState","notificationSelectors","ReqCloudMessagingPermissionStatus","CloudMessagingPermissionStatusFail","CloudMessagingPermissionStatusSuccess","ReqActivateNotificationListener","ActivateNotificationListenerFail","ActivateNotificationListenerSuccess","ReqUserNotifications","UserNotificationsFail","UserNotificationsSuccess","ReqClientNotifications","ClientNotificationsFail","ClientNotificationsSuccess","ReqToggleNotificationStatus","ToggleNotificationStatusFail","ToggleNotificationStatusSuccess","ReqUpdateCloudMessagingPermissionStatus","ReqUpdateCurrentNotification","ClearNotifications","NotificationsEffects","notificationService","ReqCloudMessagingPermissionStatus$","getCloudMessagingPermissionStatus","deviceToken","addDeviceTokenToUserDocument","permissionStatus","ReqActivateNotificationListener$","activateNotificationListener","fireBaseNotification","notification","ReqUserNotifications$","getUserNotifications","userNotifications","ReqClientNotifications$","clientNotifications","ReqToggleNotificationStatus$","toggleNotificationStatus","notificationUids","toggleForAgent","notificationsActions","notificationsFeatureKey","model","currentNotification","setAll","fromNotifications","selectNotificationsState","selectAuthState","getPermissionStatus","getCurrentNotification","getNotificationCounts","notificationState","profileNotificationCount","total","lotStatus","senderUid","agentRequest","getNotificationsForDropDown","getIncompleteUserProfileItems","requiredKeys","requiredKey","getNegotiationNotifications","getCompletedNegotiationNotifications","scoutSelectors","scoutFeatureKey","scoutReducer","ReqCreateScout","CreateScoutFail","CreateScoutSuccess","ReqScoutSearch","ScoutSearchFail","ScoutSearchSuccess","ReqFineTunedScoutSearch","FineTunedScoutSearchFail","FineTunedScoutSearchSuccess","ReqScoutFormData","ScoutFormDataFail","ReqUserScoutCards","UserScoutCardsFail","UserScoutCardsSuccess","ReqUpdateScout","UpdateScoutFail","UpdateScoutSuccess","ReqDeleteScout","DeleteScoutFail","DeleteScoutSuccess","ReqUpdateSearchValues","ClearAllScouts","ScoutService","MarketEffects","generateFineTunedScoutCriteria","searchInfo","searchCriteria","fineTunedSearchCriteria","hasLots","rating","checkForDuplicateScouts","scoutCards","duplicateExists","some","scoutCard","scoutService","ReqCreateScout$","getSearchCriteria","getFineTune","getAllScoutCards","fineTune","scoutAndFineTune","tradingEntities","createScout","ReqSearchScout$","getScoutSearchResults","searchResult","scoutSearch","ReqSearchFineTunedScout$","getFineTunedScoutSearchResults","ReqScoutFormData$","getScoutEditData","ReqUserScoutCards$","getUserScoutCards","ReqUpdateScout$","scoutAndFineTuneChanges","updateScout","ReqDeleteScout$","deleteScout","ScoutActions","selectScoutId","searchValues","currentScout","fromScout","selectScoutState","getScoutCardIds","getScoutCardEntities","getTotalScoutCards","getSearchResults","scoutState","getCurrentFullScout","getAllOrderedScoutCards","orderedScoutCards","pick","saveStateData","keyToSave","propertiesToSave","dataToSave","keyToGet","MatSnackBarModule","APP_INITIALIZER","StoreModule","reducers","metaReducers","StoreDevtoolsModule","EffectsModule","useFactory","multi","deps","runtimeChecks","strictStateImmutability","strictActionImmutability","instrument","maxAge","logOnly","StoreRootModule","EffectsRootModule","ReqPaySubs","ReqPaySubsFail","ReqPaySubsSuccess","fromAppState","fromAgents","_deliveryPointsSelectors","_scoutSelectors","_authSelectors","_cropSelectors","getScoutFormData","scoutDictionary","deliveryPointsSelectors","marketSelectors","AngularFirestore","HttpClient","AngularFireAuth","tap","API","http","afAuth","afs","baseHeaders","firebaseToken","Authorization","idToken","token","get","headers","params","registerUser","post","sqlUser","doc","skuduId","update","matchUser","toString","getEntitysDeliveryPoints","deliveryPointId","getUnitOfMeasure","detailsToUpdate","searchReturn","getScoutById","getScoutCardById","createLot","lotCard","getLotById","getLotCardById","updateLot","changes","privatiseLots","lotIds","getUserLotCards","convertedLotCards","deleteLot","createLotMatch","lotMatch","getLotMatches","lotMatches","buyerDetails","sellerDetails","getLotMatchIterations","updateLotMatch","getHasBroker","getUserNegotiationCards","convertedNegotiationCards","completeNegotiation","clientHasBroker","counterPartyHasBroker","declineNegotiation","clearNegotiation","requestedBy","getAvailableMatchedIds","getIncoTerms","getPaymentOptions","getMarketLotCards","marketFilters","getMarketScoutCards","providedIn","retry","Plugins","firebase","actionByAgent","documentSnapshot","ref","exists","hasBrowsedMarket","SQL_id","_this","_asyncToGenerator","userCredentials","signInWithEmailAndPassword","_this2","provider","auth","GoogleAuthProvider","signInWithPopup","userDataHelper","additionalUserInfo","isNewUser","_this3","googleUser","GoogleAuth","signIn","credential","authentication","signInWithCredential","nativeCreateUser","_this4","userCred","createUserWithEmailAndPassword","surname","grainSAId","grainSA","isVerified","createUser","_this5","userCol","collection","where","toPromise","doesExist","empty","userRef","archived","createdAt","updatedAt","toLocaleLowerCase","set","userData","newUserRef","oldUserRef","_this6","checkIfRefExists","Promise","reject","_this7","usersToBeVerified","_this8","failedUsersList","totalUsersToUpdate","failedUserName","updateVerification","singularOrPlural","usersToRetry","userToBeVerified","_this9","valueChanges","snap","sendPasswordResetEmail","_this10","signOut","displayName","brokerRequestsRef","delete","setFullYear","getFullYear","brokerAdminRole","add","emailSent","brokerNegotiationRef","locations","geocoder","google","maps","Geocoder","coordsArray","geocode","address","results","status","GeocoderStatus","OK","coords","geometry","Entity","entityUsers","entityUser","nestedDeliveryPoints","reduce","acc","AngularFireMessaging","afMessaging","afStore","_isListenerActive","getToken","newDeviceToken","deviceTokens","messages","notificationsRef","uids","seenByAgent","seen","all","IdName","Subject","unsubscribe$","asObservable","_appSelectors","_lotSelectors","_matchSelectors","_notificationSelectors","negotiationSelector","ActivatedRoute","ɵɵlistener","LandingComponent_button_14_Template_button_click_0_listener","ɵɵrestoreView","_r2","ctx_r1","ɵɵnextContext","ɵɵresetView","handleNavigateCreateScout","ɵɵtext","route","fromSupport","handleNavigateToTransactionalRisk","LandingComponent_Template","LandingComponent_Template_button_click_12_listener","LandingComponent_button_14_Template","EventEmitter","takeUntil","PushNotifications","notificationsService","permissionStatusHasBeenDispatched","notificationListenerIsActive","showNotification","destroyed$","selectClientHelper","getCurrentNotificationHelper","ngOnDestroy","activateMobileNotificationsHelper","requestPermissions","receive","addListener","fetchUserNotificationsHelper","userOfInterest","handleCloseNotification","NotificationComponent_Template","NotificationComponent_Template_div_click_9_listener","ɵɵclassProp","ɵɵtextInterpolate","MatLegacyDialogRef","MatDialogRef","ctx_r0","indexOf","rating_r1","ɵɵtextInterpolate1","handleToggleExFarm","option","validateEmail","test","String","handleSaveDetails","isEmail","close","AdditionalInfoModalComponent_Template","AdditionalInfoModalComponent_Template_input_ngModelChange_7_listener","$event","AdditionalInfoModalComponent_Template_input_ngModelChange_10_listener","AdditionalInfoModalComponent_Template_button_click_15_listener","AdditionalInfoModalComponent_Template_button_click_18_listener","AdditionalInfoModalComponent_Template_mat_select_ngModelChange_23_listener","AdditionalInfoModalComponent_mat_option_24_Template","AdditionalInfoModalComponent_Template_button_click_29_listener","ɵɵsanitizeUrl","MAT_LEGACY_DIALOG_DATA","MAT_DIALOG_DATA","crop_r4","CategoryInfoModalComponent_ng_template_8_div_1_Template","ctx_r2","isDataLoading","handleClose","CategoryInfoModalComponent_Template","CategoryInfoModalComponent_Template_img_click_2_listener","CategoryInfoModalComponent_div_7_Template","CategoryInfoModalComponent_ng_template_8_Template","ɵɵtemplateRefExtractor","CategoryInfoModalComponent_Template_button_click_10_listener","ɵɵpropertyInterpolate","iconSource","categoryName","_r1","Location","pdfViewerReady","pdfUrl","handlePDFLoadFailEvent","exception","handlePDFLoadingEvent","event","pdfPageCount","pagesCount","back","DocumentViewerComponent_Template","DocumentViewerComponent_Template_img_click_2_listener","DocumentViewerComponent_div_3_Template","DocumentViewerComponent_div_4_Template","DocumentViewerComponent_Template_ngx_extended_pdf_viewer_pdfLoadingFailed_6_listener","DocumentViewerComponent_Template_ngx_extended_pdf_viewer_pagesLoaded_6_listener","GrainSaModalComponent_button_16_Template_button_click_0_listener","handleNavigateToSubscriptions","GrainSaModalComponent_Template","GrainSaModalComponent_Template_img_click_2_listener","GrainSaModalComponent_Template_button_click_14_listener","GrainSaModalComponent_button_16_Template","showSubscription","LoadingSpinnerComponent","loading","inputs","LoadingSpinnerComponent_Template","DomSanitizer","domSanitizer","commission","metricTons","prepareFeedbackMessage","paymentStepReady","currentUserSubmitted","counterPartySubmitted","feedbackMessage","paymentComplete","handleCloseModal","PaymentCheckModalComponent_Template","PaymentCheckModalComponent_Template_div_click_1_listener","bypassSecurityTrustHtml","ɵɵsanitizeHtml","RefreshModalComponent_Template","RefreshModalComponent_Template_button_click_9_listener","ɵɵelementContainerStart","ɵɵelementContainerEnd","SuccessPageComponent_div_8_Template_button_click_1_listener","_r7","ctx_r6","handleRouteToNegotiation","SuccessPageComponent_div_8_Template_button_click_3_listener","ctx_r8","handleContinueSwiping","SuccessPageComponent_ng_template_9_Template_button_click_0_listener","_r10","ctx_r9","handleNavigateToNegotiationCard","ctx_r5","hasOpposingPartySubmitted","options","loop","fromSuccess","SuccessPageComponent_Template","SuccessPageComponent_ng_container_5_Template","SuccessPageComponent_ng_template_6_Template","SuccessPageComponent_div_8_Template","SuccessPageComponent_ng_template_9_Template","_r4","AngularFirestoreModule","AngularFireAuthModule","AngularFireModule","AngularFireAnalyticsModule","UserTrackingService","AngularFireFunctionsModule","AngularFireMessagingModule","initializeApp","enablePersistence","subscribeContent","verification_r1","verificationOrder","SubscribeComponent_Template","SubscribeComponent_div_9_Template","SubscribeComponent_Template_button_click_10_listener","TransactionalRisksComponent_button_17_Template_button_click_0_listener","handleNavigateToOnboarding","TransactionalRisksComponent_Template","TransactionalRisksComponent_Template_button_click_15_listener","TransactionalRisksComponent_button_17_Template","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","LOGO","LOCALHOST_API","STANDARD_QUALITY_ID","DEFAULT_PACKAGING_ID","DEFAULT_PAYMENT_ID","STRAW_HAY_INCO_TERM_IDS","CROP_CATEGORIES","enableProdMode","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","catch","err"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}