{"version":3,"file":"src_app_features_support_support_module_ts.js","mappings":"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","sources":["./src/app/core/ngrx/paygate/paygate.effects.ts","./src/app/core/services/paygate/paygate.service.ts","./src/app/features/support/components/contact-us/contact-us.component.ts","./src/app/features/support/components/contact-us/contact-us.component.html","./src/app/features/support/components/detailed-tutorial/detailed-tutorial.component.ts","./src/app/features/support/components/detailed-tutorial/detailed-tutorial.component.html","./src/app/features/support/components/faq/faq.component.ts","./src/app/features/support/components/faq/faq.component.html","./src/app/features/support/components/know-your-counter-party/know-your-counter-party.component.ts","./src/app/features/support/components/know-your-counter-party/know-your-counter-party.component.html","./src/app/features/support/components/verification/not-verified-modal/not-verified-modal.component.ts","./src/app/features/support/components/verification/not-verified-modal/not-verified-modal.component.html","./src/app/features/support/components/verification/subscription-type-modal/subscription-type-modal.component.ts","./src/app/features/support/components/verification/subscription-type-modal/subscription-type-modal.component.html","./src/app/features/support/components/verification/verification-card/verification-card.component.ts","./src/app/features/support/components/verification/verification-card/verification-card.component.html","./src/app/features/support/components/verification/verification.component.ts","./src/app/features/support/components/verification/verification.component.html","./src/app/features/support/support-routing.module.ts","./src/app/features/support/support.component.ts","./src/app/features/support/support.component.html","./src/app/features/support/support.module.ts","./node_modules/@angular/cdk/fesm2022/accordion.mjs","./node_modules/@angular/material/fesm2022/expansion.mjs"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Actions, ofType, createEffect } from '@ngrx/effects';\r\nimport { switchMap, mergeMap, catchError, take } from 'rxjs/operators';\r\nimport { PaygateService } from '../../services/paygate/paygate.service';\r\nimport * as paygateActions from './paygate.actions';\r\n\r\n@Injectable()\r\nexport class PaygateEffects {\r\n    ReqPaySubs$ = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(paygateActions.ReqPaySubs),\r\n            mergeMap((payload) => {\r\n                return this.api.postPaySubs(payload.transaction).pipe(\r\n                    take(1),\r\n                    switchMap((transaction) => {\r\n                        console.log('Effect transaction: ', transaction);\r\n                        return [paygateActions.ReqPaySubsSuccess()];\r\n                    }),\r\n                    catchError((error) => {\r\n                        console.log('ReqPaySubs: ', error.message);\r\n                        return [paygateActions.ReqPaySubsFail()];\r\n                    }),\r\n                );\r\n            }),\r\n        ),\r\n    );\r\n\r\n    constructor(private actions$: Actions, private api: PaygateService) {}\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Transaction, TransactionReturn } from '../../models/queryModels';\r\n\r\nconst paygateAPI = 'https://www.paygate.co.za/paysubs/process.trans';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class PaygateService {\r\n    baseHeaders = {\r\n        password: 'secret',\r\n    };\r\n\r\n    constructor(private http: HttpClient) {}\r\n\r\n    //#region Paygate Subscriptions\r\n\r\n    postPaySubs(transaction: Transaction): Observable<TransactionReturn> {\r\n        return this.http.post<TransactionReturn>(`${paygateAPI}`, { transaction }, { headers: this.baseHeaders });\r\n    }\r\n\r\n    //#endregion\r\n}\r\n","import { SUPPORT_ROUTE } from './../../../../core/helpers/constants';\r\nimport { Router } from '@angular/router';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, catchError, map, of } from 'rxjs';\r\nimport { Loader } from '@googlemaps/js-api-loader';\r\n\r\n@Component({\r\n    selector: 'app-contact-us',\r\n    templateUrl: './contact-us.component.html',\r\n    styleUrls: ['./contact-us.component.scss'],\r\n})\r\nexport class ContactUsComponent implements OnInit {\r\n    skuduOfficeCoordinates: { lat: number; lng: number } = { lat: -33.7317975, lng: 18.9642491 };\r\n    apiLoaded:BehaviorSubject<boolean> = new BehaviorSubject(false);\r\n    constructor(private loader:Loader,private router: Router) {}\r\n\r\n    ngOnInit(): void {\r\n        this.loader.importLibrary('maps')\r\n        .then(({Map}) => {\r\n          this.apiLoaded?.next(true);\r\n         })\r\n        .catch((e) => {\r\n          // do something\r\n        });\r\n    }\r\n\r\n    handleBack() {\r\n        this.router.navigate([SUPPORT_ROUTE]);\r\n    }\r\n}\r\n","<div class=\"g-app-dimensions l-container\">\r\n    <!-- #region Header -->\r\n\r\n    <div class=\"l-header\">\r\n        <img\r\n            class=\"l-back-icon\"\r\n            src=\"./assets/icons/back-arrow-icon.svg\"\r\n            alt=\"back-arrow-icon\"\r\n            (click)=\"handleBack()\"\r\n        />\r\n        <p class=\"g-text-h2-dark\">Contact Us</p>\r\n    </div>\r\n\r\n    <!-- #endregion -->\r\n\r\n    <!-- #region Content -->\r\n\r\n    <div class=\"l-content\">\r\n        <div class=\"d-flex flex-column\">\r\n            <h1 class=\"g-text-h1-dark mb-3\">Get in Touch. Get Involved</h1>\r\n            <p class=\"g-text-p-dark text-left\">\r\n                Do you have an idea or question? Is there a <br />\r\n                feature missing that can add value to you? <br />\r\n                Please tell us how we can do it better!\r\n            </p>\r\n            <div class=\"mt-3\">\r\n                <div class=\"d-flex flex-row mb-3\">\r\n                    <img class=\"l-img\" src=\"../../../../../assets/images/whatsapp.svg\" alt=\"Whatsapp Logo\" />\r\n                    <p class=\"g-text-p-dark text-left ml-5\">Whatsapp: 072 332 2936</p>\r\n                </div>\r\n                <div class=\"d-flex flex-row mb-3\">\r\n                    <img class=\"l-img\" src=\"../../../../../assets//images//blue-phone.svg\" alt=\"Blue Phone Symbol\" />\r\n                    <p class=\"g-text-p-dark text-left ml-5\">Call: 021 140 0387</p>\r\n                </div>\r\n                <div class=\"d-flex flex-row\">\r\n                    <img class=\"l-img\" src=\"../../../../../assets//images/blue-at-symbol.svg\" alt=\"Blue At Symbol\" />\r\n                    <p class=\"g-text-p-dark text-left ml-5\">\r\n                        Email: <a href=\"mailto:info@matchmx.com\">info@matchmx.com</a>\r\n                    </p>\r\n                </div>\r\n            </div>\r\n\r\n            <!-- #region Map -->\r\n\r\n            <h1 class=\"g-text-h1-dark text-left my-3\">Where to Find Us:</h1>\r\n\r\n            <p class=\"g-text-p-dark text-left mb-3\">\r\n                Match Exchange, 1st Floor, Newlink Building, 1 New St, Esterville, Paarl, South Africa\r\n            </p>\r\n\r\n            <div *ngIf=\"apiLoaded | async\" class=\"l-map-holder\">\r\n                <google-map\r\n                    class=\"g-delivery-form-map\"\r\n                    [zoom]=\"14\"\r\n                    [center]=\"{lat:skuduOfficeCoordinates.lat,lng:skuduOfficeCoordinates.lng}\"\r\n                    [options]=\"{mapTypeId:'hybrid',gestureHandling:'cooperative'}\"\r\n                >\r\n                    <map-marker\r\n                        [position]=\"{lat:skuduOfficeCoordinates.lat,lng:skuduOfficeCoordinates.lng}\"\r\n                        [options]=\"{clickable:false, draggable:false}\"\r\n                    ></map-marker>\r\n                </google-map>\r\n            </div>\r\n\r\n            <!-- #endregion -->\r\n        </div>\r\n\r\n        <!-- #region Feedback Button -->\r\n\r\n        <a\r\n            class=\"g-primary-button l-feedback-button\"\r\n            href=\"https://forms.gle/Qtb3mpDuHbjD3SyA8\"\r\n            target=\"_blank\"\r\n            matRipple\r\n            >Leave Feedback</a\r\n        >\r\n\r\n        <!-- #endregion -->\r\n    </div>\r\n\r\n    <!-- #endregion -->\r\n</div>\r\n","import { SUPPORT_ROUTE, TUTORIAL_TABLE_DATA } from './../../../../core/helpers/constants';\r\nimport { Router } from '@angular/router';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { TutorialTableItem } from 'src/app/core/models/viewModels';\r\n\r\n@Component({\r\n    selector: 'app-detailed-tutorial',\r\n    templateUrl: './detailed-tutorial.component.html',\r\n    styleUrls: ['./detailed-tutorial.component.scss'],\r\n})\r\nexport class DetailedTutorialComponent implements OnInit {\r\n    items: TutorialTableItem[] = TUTORIAL_TABLE_DATA;\r\n    constructor(private router: Router) {}\r\n\r\n    ngOnInit(): void {}\r\n\r\n    handleBack() {\r\n        this.router.navigate([SUPPORT_ROUTE]);\r\n    }\r\n}\r\n","<div class=\"g-app-dimensions l-container\">\r\n    <!-- #region Header -->\r\n\r\n    <div class=\"l-header\">\r\n        <img\r\n            class=\"l-back-icon\"\r\n            src=\"./assets/icons/back-arrow-icon.svg\"\r\n            alt=\"back-arrow-icon\"\r\n            (click)=\"handleBack()\"\r\n        />\r\n        <p class=\"g-text-h2-dark\">Detailed Tutorial</p>\r\n    </div>\r\n\r\n    <!-- #endregion -->\r\n\r\n    <!-- #region Content -->\r\n\r\n    <div class=\"l-content\">\r\n        <div class=\"d-flex flex-column\">\r\n            <div>\r\n                <h1 class=\"l-text-h2\">So How Does It Work?</h1>\r\n                <p class=\"mt-3 g-text-p-dark text-left\">\r\n                    Match Exchange stimulates a cash market at every point where a Lot is created, and doing so creates\r\n                    a transparent and fair market for both buyers and sellers.\r\n                </p>\r\n                <p class=\"g-text-p-dark text-left mt-3\">\r\n                    Follow the four easy steps to get the perfect Match for your produce.\r\n                </p>\r\n            </div>\r\n            <div class=\"d-flex flex-column align-items-center\">\r\n                <div>\r\n                    <img\r\n                        class=\"l-scout-image my-4\"\r\n                        src=\"../../../../../assets/images/detail-tutorial-scout.svg\"\r\n                        alt=\"Person with binoculars looking on\"\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <h2 class=\"l-text-h2\">Step 1: Create a Scout</h2>\r\n                    <p class=\"mt-3 g-text-p-dark text-left\">\r\n                        Tell the Market what you are planning to buy or sell. You can indicate what products you plan to\r\n                        produce or purchase, and the Scout will display how many counterparties are currently available\r\n                        with matching needs.\r\n                    </p>\r\n                    <p class=\"mt-3 g-text-p-dark text-left pl-3\">\r\n                        • Product (commodity): e.g. Wheat <br />\r\n                        • Position (location): e.g. Malmesbury\r\n                    </p>\r\n                </div>\r\n            </div>\r\n            <div class=\"d-flex flex-column align-items-center\">\r\n                <div>\r\n                    <img\r\n                        class=\"l-lot-image my-4\"\r\n                        src=\"../../../../../assets/images/detail-tutorial-lot.svg\"\r\n                        alt=\"Hand holding back of wheat\"\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <h2 class=\"l-text-h2\">Step 2: Create a Lot</h2>\r\n                    <p class=\"mt-3 g-text-p-dark text-left\">\r\n                        Match Exchange stimulates a cash market at every point where a Lot is created. By creating a\r\n                        Match Exchange Lot you are communicating to the Market that you are a willing buyer or seller of\r\n                        a specific portion of your product.\r\n                    </p>\r\n                    <p class=\"mt-3 g-text-p-dark text-left\">\r\n                        To create a lot you have to tell the market about the 5 ‘s and 2 Q’s. They are, for example:\r\n                    </p>\r\n                </div>\r\n            </div>\r\n            <div class=\"my-3\">\r\n                <div *ngFor=\"let item of items; let last = last\" class=\"l-table g-text-p-small-dark\">\r\n                    <div class=\"w-50\">\r\n                        • <b>{{ item.title }}:</b>\r\n                    </div>\r\n                    <div class=\"w-50\">{{ item.value }}</div>\r\n                </div>\r\n            </div>\r\n            <div class=\"d-flex flex-column align-items-center\">\r\n                <div>\r\n                    <img\r\n                        class=\"l-compare-image my-4\"\r\n                        src=\"../../../../../assets/images/detail-tutorial-puzzle.svg\"\r\n                        alt=\"Undirected graph linking to green circles with icons\"\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <h2 class=\"l-text-h2\">Step 3: Compare Matches</h2>\r\n                    <p class=\"mt-3 g-text-p-dark text-left\">\r\n                        Once you have created a Lot, Match Exchange will match your Lot with counter Lots of similar\r\n                        needs. Counter Lots display the 5 P’s and 2 Q’s of your own Lot in comparison to the counter\r\n                        Lots, and you can enter into a negotiation with the matching Lot of your choosing.\r\n                    </p>\r\n                </div>\r\n            </div>\r\n            <div class=\"d-flex flex-column align-items-center\">\r\n                <div>\r\n                    <img\r\n                        class=\"l-negotiate-image my-4\"\r\n                        src=\"../../../../../assets/images/detail-tutorial-negotiate.svg\"\r\n                        alt=\"Two people having a conversation beside a bag of products\"\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <h2 class=\"l-text-h2\">Step 4: Negotiate</h2>\r\n                    <p class=\"mt-3 g-text-p-dark text-left\">\r\n                        Both the buyer and seller are notified when a negotiation on a Lot has started. In the\r\n                        Negotiating Room the buyer and seller can obtain consensus on the 5 P's and 2 Q's. When\r\n                        consensus has been reached, you have a Match!\r\n                    </p>\r\n                </div>\r\n            </div>\r\n            <div class=\"d-flex flex-column align-items-center\">\r\n                <div>\r\n                    <img\r\n                        class=\"l-match-image my-4\"\r\n                        src=\"../../../../../assets/images/detail-tutorial-match.svg\"\r\n                        alt=\"Handshake above a signed contract\"\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <h2 class=\"l-text-h2\">Step 5: Match</h2>\r\n                    <p class=\"mt-3 g-text-p-dark text-left\">\r\n                        Once you have a Match you will be introduced to the counterparty with the 5 P’s & 2 Q’s you\r\n                        agreed upon.\r\n                    </p>\r\n                    <p class=\"mt-3 g-text-p-dark text-left\">\r\n                        Match Exchange only facilitates the platform for getting consensus on the marketing of your\r\n                        product. It is up to the buyer and seller to follow through on the transaction from here via\r\n                        further communication.\r\n                    </p>\r\n                </div>\r\n            </div>\r\n            <div class=\"d-flex flex-column align-items-center\">\r\n                <div>\r\n                    <img\r\n                        class=\"l-know-image my-4\"\r\n                        src=\"../../../../../assets/images/detail-tutorial-kyc.svg\"\r\n                        alt=\"Two people having a conversation over a bag of products\"\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <h2 class=\"l-text-h2\">Step 6: Know your counterparty (“KYC-party”)</h2>\r\n                    <p class=\"mt-3 g-text-p-dark text-left\">\r\n                        Refer to the “Know your Counterparty (\"KYC-party\")” section for steps to ensure that the\r\n                        counterparty you are dealing with is a trusted party.\r\n                    </p>\r\n                    <p class=\"mt-3 g-text-p-dark text-left\">\r\n                        Match Exchange is currently implementing ‘user verification’ to verify users on the platform.\r\n                        This will entail proof of identity, ownership, and authority to transact on behalf of the\r\n                        entity.\r\n                    </p>\r\n                    <p class=\"mt-3 g-text-p-dark text-left\">\r\n                        Match Exchange is also implementing a ‘user experience rating’ system to rate the experience\r\n                        between the buyer and seller after a successful match.\r\n                    </p>\r\n                </div>\r\n                <div>\r\n                    <img\r\n                        class=\"l-match-image my-4\"\r\n                        src=\"../../../../../assets/images/detail-tutorial-kyc.svg\"\r\n                        alt=\"Handshake above a signed contract\"\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div class=\"mt-3\">\r\n                <h2 class=\"l-text-h2\">Need More Help?</h2>\r\n                <p class=\"mt-3 g-text-p-dark text-left\">\r\n                    Our support team is always ready to assist and navigate you through every step of the Match journey.\r\n                    Visit the “Contact us” page for our details.\r\n                </p>\r\n                <p class=\"mt-3 g-text-p-dark text-left\">\r\n                    Also have a look at our video tutorials that explains every step in full detail.\r\n                </p>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <!-- #endregion -->\r\n</div>\r\n","import { SUPPORT_ROUTE } from './../../../../core/helpers/constants';\r\nimport { Router } from '@angular/router';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-faq',\r\n    templateUrl: './faq.component.html',\r\n    styleUrls: ['./faq.component.scss'],\r\n})\r\nexport class FAQComponent implements OnInit {\r\n    constructor(private router: Router) {}\r\n\r\n    ngOnInit(): void {}\r\n\r\n    handleBack() {\r\n        this.router.navigate([SUPPORT_ROUTE]);\r\n    }\r\n}\r\n","<div class=\"g-app-dimensions l-container\">\r\n    <!-- #region Header -->\r\n\r\n    <div class=\"l-header\">\r\n        <img\r\n            class=\"l-back-icon\"\r\n            src=\"./assets/icons/back-arrow-icon.svg\"\r\n            alt=\"back-arrow-icon\"\r\n            (click)=\"handleBack()\"\r\n        />\r\n        <p class=\"g-text-h2-dark\">FAQs</p>\r\n    </div>\r\n\r\n    <!-- #endregion -->\r\n\r\n    <!-- #region Content -->\r\n\r\n    <div class=\"l-content\">\r\n        <div class=\"l-flex-gap\">\r\n            <mat-expansion-panel>\r\n                <mat-expansion-panel-header>\r\n                    <mat-panel-title class=\"g-text-p-dark text-left\">Is Match really free to use?</mat-panel-title>\r\n                </mat-expansion-panel-header>\r\n                <p class=\"g-text-p-dark text-left\">\r\n                    Yes, there are no sign-up fees. Match Exchange takes no commission on any successful purchase that\r\n                    results from parties being introduced through Match. Match is merely a free tool for buyers and\r\n                    sellers of agricultural commodities to have more options to do business with.\r\n                </p>\r\n            </mat-expansion-panel>\r\n            <mat-expansion-panel>\r\n                <mat-expansion-panel-header>\r\n                    <mat-panel-title class=\"g-text-p-dark text-left\">What is a Scout?</mat-panel-title>\r\n                </mat-expansion-panel-header>\r\n                <p class=\"g-text-p-dark text-left\">\r\n                    You create a Scout to tell the market what you are planning to buy or sell and within which area.\r\n                    Match Exchange’s algorithm with display the available counter-parties interested in the same\r\n                    commodity.\r\n                </p>\r\n            </mat-expansion-panel>\r\n            <mat-expansion-panel>\r\n                <mat-expansion-panel-header>\r\n                    <mat-panel-title class=\"g-text-p-dark text-left\">What is a Lot?</mat-panel-title>\r\n                </mat-expansion-panel-header>\r\n                <p class=\"g-text-p-dark text-left\">\r\n                    You create a Lot to tell the market more details about the commodity that you want to buy or sell.\r\n                    These details are the 5 P’s (product, price, period of availability, payment terms and position) and\r\n                    2 Q’s (quality and quantity). You can create multiple Lots to partially market your produce.\r\n                </p>\r\n            </mat-expansion-panel>\r\n            <mat-expansion-panel>\r\n                <mat-expansion-panel-header>\r\n                    <mat-panel-title class=\"g-text-p-dark text-left\"\r\n                        >Will my Scouts or Lots be removed or disappear after some time?</mat-panel-title\r\n                    >\r\n                </mat-expansion-panel-header>\r\n                <p class=\"g-text-p-dark text-left\">\r\n                    No, your Scouts and Lots will remain on Match, for as long as you are buying or selling the\r\n                    commodity for which the Scout or Lot has been created. You can delete a Scout or a Lot from the\r\n                    “Scouts” or the “Lots” screens if you no longer want a specific Scout or Lot to be matched with\r\n                    another user’s Scouts or Lots.\r\n                </p>\r\n            </mat-expansion-panel>\r\n            <mat-expansion-panel>\r\n                <mat-expansion-panel-header>\r\n                    <mat-panel-title class=\"g-text-p-dark text-left\">\r\n                        Is there any obligation to transact with the matching counterparty?</mat-panel-title\r\n                    >\r\n                </mat-expansion-panel-header>\r\n                <p class=\"g-text-p-dark text-left\">\r\n                    No, after you have a match, you and the counterparty are introduced to each other. If you are unsure\r\n                    about making a transaction with a specific party, you are welcome to decline the offer and recreate\r\n                    your lot on Match.\r\n                </p>\r\n            </mat-expansion-panel>\r\n            <mat-expansion-panel>\r\n                <mat-expansion-panel-header>\r\n                    <mat-panel-title class=\"g-text-p-dark text-left\">\r\n                        How do I know that the counterparty that I negotiate with is a trusted person or\r\n                        business?</mat-panel-title\r\n                    >\r\n                </mat-expansion-panel-header>\r\n                <p class=\"g-text-p-dark text-left\">\r\n                    Kindly see the “Know your counterparty” page in the app for helpful guidelines to verify the\r\n                    counterparty. These guidelines will also be sent to you in an email once a negotiation has been\r\n                    completed. Match Exchange will also verify trusted users in the near future.\r\n                </p>\r\n            </mat-expansion-panel>\r\n            <mat-expansion-panel>\r\n                <mat-expansion-panel-header>\r\n                    <mat-panel-title class=\"g-text-p-dark text-left\">\r\n                        I am having difficulty understanding the process or I cannot find what I’m looking for, what do\r\n                        I do now?</mat-panel-title\r\n                    >\r\n                </mat-expansion-panel-header>\r\n                <p class=\"g-text-p-dark text-left\">\r\n                    We will kindly assist users to become proficient in using the App, please send an email to\r\n                    <a href=\"mailto:info@matchmx.com\">info@matchmx.com</a> or a WhatsApp message to 072 332 2936 and we\r\n                    will contact you. Alternatively, you can watch one of our tutorial videos on the Match Exchange\r\n                    YouTube page.\r\n                </p>\r\n            </mat-expansion-panel>\r\n        </div>\r\n    </div>\r\n\r\n    <!-- #endregion -->\r\n</div>\r\n","import { SUPPORT_ROUTE } from './../../../../core/helpers/constants';\r\nimport { Router } from '@angular/router';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-know-your-counter-party',\r\n    templateUrl: './know-your-counter-party.component.html',\r\n    styleUrls: ['./know-your-counter-party.component.scss'],\r\n})\r\nexport class KnowYourCounterPartyComponent implements OnInit {\r\n    constructor(private router: Router) {}\r\n\r\n    ngOnInit(): void {}\r\n\r\n    handleBack() {\r\n        this.router.navigate([SUPPORT_ROUTE]);\r\n    }\r\n}\r\n","<div class=\"g-app-dimensions l-container\">\r\n    <div class=\"l-header\">\r\n        <img\r\n            class=\"l-back-icon\"\r\n            src=\"./assets/icons/back-arrow-icon.svg\"\r\n            alt=\"back-arrow-icon\"\r\n            (click)=\"handleBack()\"\r\n        />\r\n        <p class=\"g-text-h2-dark\">KYC-Party</p>\r\n    </div>\r\n    <div class=\"l-content\">\r\n        <h1 class=\"g-text-h1-dark\">Know your Counterparty (\"KYC-party\"), protect yourself</h1>\r\n        <p class=\"g-text-p-dark text-left pt-2\">\r\n            <span class=\"l-text-bold\">TAKE NOTE:</span><br />[Match Exchange is not a party to the Seller and Buyer\r\n            agreement.\r\n            <br />\r\n            These are just guidelines for you to follow to better KYC-party.]\r\n        </p>\r\n\r\n        <div class=\"pt-4\">\r\n            <h2 class=\"g-text-h2-dark mb-2\">SELLER</h2>\r\n            <p class=\"g-text-p-dark text-left\">\r\n                The objective here is to ensure that you get paid in full, on time, for the product you deliver:\r\n            </p>\r\n            <p class=\"g-text-p-dark text-left\">\r\n                1. Is the Buyer (Off-Taker) a well-known company? If not, ask around, especially in your area.\r\n            </p>\r\n            <p class=\"g-text-p-dark text-left\">\r\n                2. Google the Buyer’s contact details, phone the company and ask to speak to the Procurement Manager. Is\r\n                he aware of the transaction?\r\n            </p>\r\n            <p class=\"g-text-p-dark text-left\">\r\n                3. If you’ve agreed to terms, consider paying for a credit check. Does this company pay its bills?\r\n            </p>\r\n        </div>\r\n\r\n        <div class=\"pt-4\">\r\n            <h2 class=\"g-text-h2-dark mb-2\">BUYER</h2>\r\n            <p class=\"g-text-p-dark text-left\">\r\n                Your objective is to receive the quantity and quality product that you are paying for, and on time:\r\n            </p>\r\n            <p class=\"g-text-p-dar text-leftk\">1. Is the Seller a known farmer in the area?</p>\r\n            <p class=\"g-text-p-dark text-left\">\r\n                2. Phone procurement agents or farmers you know in the area and get a reference.\r\n            </p>\r\n            <p class=\"g-text-p-dar text-leftk\">3. Are you aware of any problems with this farmer (producer)?</p>\r\n            <p class=\"g-text-p-dark text-left\">\r\n                4. Phone the farmer and confirm the location from where the produce will be delivered.\r\n            </p>\r\n            <p class=\"g-text-p-dark text-left\">\r\n                5. Obtain information about the farmer’s other off-takers / customers or to who the farmer normally\r\n                supplies to. Phone that off-taker and get a reference.\r\n            </p>\r\n            <p class=\"g-text-p-dark text-left\">\r\n                6. If you have agreed to any payments prior to delivery, consider a credit check or if possible an\r\n                escrow account at an independent (and trusted) third party that may only release the payment on your\r\n                receipt of the purchased goods.\r\n            </p>\r\n        </div>\r\n        <p class=\"g-text-p-dark l-text-bold pt-4\">\r\n            We are not liable for any damages or losses whatsoever that may result for a transaction that was not\r\n            successful.\r\n        </p>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatLegacyDialogRef as MatDialogRef } from '@angular/material/legacy-dialog';\r\nimport { Router } from '@angular/router';\r\nimport { PROFILE_ROUTE } from 'src/app/core/helpers/constants';\r\n\r\n@Component({\r\n    selector: 'app-not-verified-modal',\r\n    templateUrl: './not-verified-modal.component.html',\r\n    styleUrls: ['./not-verified-modal.component.scss'],\r\n})\r\nexport class NotVerifiedModalComponent implements OnInit {\r\n    constructor(private dialogRef: MatDialogRef<NotVerifiedModalComponent>, private router: Router) {}\r\n\r\n    ngOnInit(): void {}\r\n\r\n    handleClose(): void {\r\n        this.dialogRef.close();\r\n    }\r\n\r\n    handleRouteToProfile(): void {\r\n        this.dialogRef.close();\r\n        this.router.navigate([PROFILE_ROUTE], { queryParams: { tabIndex: 2 } });\r\n    }\r\n}\r\n","<div class=\"l-container\">\r\n    <!-- #region Header -->\r\n\r\n    <div class=\"l-header\">\r\n        <img class=\"l-close-icon\" src=\"./assets/icons/close-icon-dark.svg\" alt=\"close\" (click)=\"handleClose()\" />\r\n\r\n        <img class=\"l-icon\" src=\"./assets/icons/grainSA-icon.svg\" alt=\"icon\" />\r\n\r\n        <h1 class=\"g-text-h1-dark\">\r\n            <b>You are not Verified</b>\r\n        </h1>\r\n    </div>\r\n\r\n    <!-- #endregion -->\r\n\r\n    <!-- #region Modal Content -->\r\n\r\n    <div class=\"l-content g-text-p-dark\">\r\n        <p>\r\n            This verification type is only available to verified Grain SA members. If you are a member of Grain SA you\r\n            get a <strong>1 year</strong> free Grain SA verification status. To apply for this promotion input your\r\n            membership number on the profile tab.\r\n        </p>\r\n    </div>\r\n\r\n    <!-- #endregion -->\r\n\r\n    <!-- #region Buttons -->\r\n\r\n    <button class=\"g-primary-button\" (click)=\"handleClose()\">Okay, got it!</button>\r\n    <button class=\"g-secondary-button mt-2\" (click)=\"handleRouteToProfile()\">Go to Profile</button>\r\n\r\n    <!-- #endregion -->\r\n</div>\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatLegacyDialogRef as MatDialogRef, MAT_LEGACY_DIALOG_DATA as MAT_DIALOG_DATA } from '@angular/material/legacy-dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Purchases, PurchasesPackage } from '@awesome-cordova-plugins/purchases/ngx';\r\nimport { Capacitor } from '@capacitor/core';\r\nimport { Actions, ofType } from '@ngrx/effects';\r\nimport { Dictionary } from '@ngrx/entity';\r\nimport { select, Store } from '@ngrx/store';\r\nimport { take } from 'rxjs/operators';\r\nimport { VerificationSubscription } from 'src/app/core/models/viewModels';\r\nimport { User } from 'src/app/core/models/queryModels';\r\nimport { transformSingleUsersForVerificationHelper } from 'src/app/core/helpers/helperFunctions';\r\n\r\nimport * as snackBarConfigs from '../../../../../core/helpers/snackbar';\r\nimport * as actions from 'src/app/core/helpers/index.actions';\r\nimport * as fromRoot from 'src/app/features/dashboard/dashboard.selectors';\r\nimport * as fromApp from 'src/app/core/ngrx/app-state/index';\r\n\r\n@Component({\r\n    selector: 'app-subscription-type-modal',\r\n    templateUrl: './subscription-type-modal.component.html',\r\n    styleUrls: ['./subscription-type-modal.component.scss'],\r\n})\r\nexport class SubscriptionTypeModalComponent implements OnInit {\r\n    isWeb: boolean = true;\r\n    isSuccess: boolean = false;\r\n    isLoading: boolean = false;\r\n    isEmailLoading: boolean = false;\r\n\r\n    productName: string;\r\n    annualOffering: PurchasesPackage;\r\n    monthlyOffering: PurchasesPackage;\r\n\r\n    user: User;\r\n\r\n    constructor(\r\n        private dialogRef: MatDialogRef<SubscriptionTypeModalComponent>,\r\n        @Inject(MAT_DIALOG_DATA)\r\n        public data: { verificationSubscription: Dictionary<VerificationSubscription>; promotionalText?: string },\r\n        private purchases: Purchases,\r\n        private snackbar: MatSnackBar,\r\n        private store: Store,\r\n        private actions$: Actions,\r\n    ) {\r\n        this.isWeb = Capacitor.getPlatform() === 'web';\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.store.pipe(select(fromRoot.authSelectors.getUser), take(1)).subscribe((user) => {\r\n            this.user = user;\r\n        });\r\n        if (!this.isWeb) {\r\n            this.purchases.getOfferings().then(\r\n                (offerings) => {\r\n                    this.productName = offerings.all[this.data.verificationSubscription.value.identifier].identifier;\r\n                    this.annualOffering = offerings.all[this.data.verificationSubscription.value.identifier].annual;\r\n                    this.monthlyOffering = offerings.all[this.data.verificationSubscription.value.identifier].monthly;\r\n                },\r\n                (error) => {\r\n                    console.log('Failed to get Offerings: ', error.message);\r\n                    this.snackbar.open(\r\n                        'Failed to get Offerings, please try again',\r\n                        'CLOSE',\r\n                        snackBarConfigs.errorConfig,\r\n                    );\r\n                },\r\n            );\r\n        }\r\n    }\r\n\r\n    handleClose(): void {\r\n        this.dialogRef.close();\r\n    }\r\n\r\n    handleNativePurchase(purchasePeriod: string, verificationId: number) {\r\n        this.isLoading = true;\r\n        let currentDate = new Date();\r\n        if (purchasePeriod === 'year') {\r\n            this.purchases.purchasePackage(this.annualOffering).then(\r\n                () => {\r\n                    this.isLoading = false;\r\n                    let expiryDate = new Date(currentDate.setFullYear(currentDate.getFullYear() + 1)).getTime();\r\n                    this.verificationHelper(verificationId, expiryDate);\r\n                },\r\n                ({ error, userCancelled }) => {\r\n                    this.isLoading = false;\r\n                    console.log('An error occurred while making the purchase: ', error.message);\r\n                    if (!userCancelled) {\r\n                        this.snackbar.open('Failed To Purchase Subscription', 'CLOSE', snackBarConfigs.errorConfig);\r\n                    }\r\n                },\r\n            );\r\n        } else if (purchasePeriod === 'month') {\r\n            this.purchases.purchasePackage(this.monthlyOffering).then(\r\n                () => {\r\n                    this.isLoading = false;\r\n                    let expiryDate = new Date(currentDate.setMonth(currentDate.getMonth() + 1)).getTime();\r\n                    this.verificationHelper(verificationId, expiryDate);\r\n                },\r\n                ({ error, userCancelled }) => {\r\n                    this.isLoading = false;\r\n                    console.log('An error occurred while making the purchase: ', error.message);\r\n                    if (!userCancelled) {\r\n                        this.snackbar.open('Failed To Purchase Subscription', 'CLOSE', snackBarConfigs.errorConfig);\r\n                    }\r\n                },\r\n            );\r\n        }\r\n    }\r\n\r\n    verificationHelper(verificationId: number, expiryDate: number) {\r\n        this.isLoading = true;\r\n        this.actions$\r\n            .pipe(ofType(actions.authActions.ReqUpdateUserVerificationStatusSuccess), take(1))\r\n            .subscribe(() => {\r\n                this.isLoading = false;\r\n                this.isSuccess = true;\r\n                this.snackbar.open('Successfully purchased Subscription', 'CLOSE', snackBarConfigs.successConfig);\r\n            });\r\n\r\n        this.actions$.pipe(ofType(actions.authActions.ReqUpdateUserVerificationStatusFail), take(1)).subscribe(() => {\r\n            this.isLoading = false;\r\n            this.snackbar.open(\r\n                'Payment successful but failed to update verification, please contact MatchMX',\r\n                'CLOSE',\r\n                snackBarConfigs.errorConfig,\r\n            );\r\n        });\r\n\r\n        this.store.dispatch(\r\n            actions.authActions.ReqUpdateUserVerificationStatus({\r\n                userVerifications: [transformSingleUsersForVerificationHelper(verificationId, this.user, expiryDate)],\r\n                showSnackBar: false,\r\n            }),\r\n        );\r\n    }\r\n\r\n    handleEmail() {\r\n        this.isEmailLoading = true;\r\n        this.actions$\r\n            .pipe(\r\n                ofType(\r\n                    fromApp.appActions.ReqEmailVerificationFormSuccess,\r\n                    fromApp.appActions.ReqEmailVerificationFormFail,\r\n                ),\r\n                take(1),\r\n            )\r\n            .subscribe(() => {\r\n                this.isEmailLoading = false;\r\n                this.dialogRef.close();\r\n            });\r\n        this.store.dispatch(fromApp.appActions.ReqEmailVerificationForm());\r\n    }\r\n}\r\n","<div class=\"l-container\">\r\n    <div *ngIf=\"!isLoading\">\r\n        <img\r\n            class=\"l-close-icon\"\r\n            src=\"./assets/icons/close-icon-dark.svg\"\r\n            alt=\"Black cross / close icon\"\r\n            (click)=\"handleClose()\"\r\n        />\r\n        <img class=\"l-verification-icon\" [src]=\"data.verificationSubscription.value.source\" alt=\"verification-icon\" />\r\n    </div>\r\n    <div *ngIf=\"!isSuccess; else showSuccess\">\r\n        <div *ngIf=\"!isLoading; else showLoading\">\r\n            <p class=\"g-text-h1-dark\">{{ data.verificationSubscription.value.product.title }}</p>\r\n            <p class=\"g-text-p-dark my-2\">{{ data.promotionalText?.description }}</p>\r\n            <p class=\"g-text-h2-dark\">{{ data.promotionalText?.period }}</p>\r\n            <button\r\n                class=\"g-primary-button mt-3\"\r\n                [disabled]=\"isLoading\"\r\n                mat-flat-button\r\n                (click)=\"!isWeb && handleNativePurchase('year', data.verificationSubscription.value.id)\"\r\n            >\r\n                <div>\r\n                    {{ data.verificationSubscription.value.product.price }}\r\n                    / year\r\n                </div>\r\n            </button>\r\n            <div class=\"g-text-p-small-grey\">\r\n                <p class=\"mt-1\">*VAT Included</p>\r\n            </div>\r\n            <p class=\"text-center m-0\">OR</p>\r\n            <button\r\n                class=\"g-secondary-button mt-2\"\r\n                [disabled]=\"isLoading\"\r\n                mat-flat-button\r\n                (click)=\"!isWeb && handleNativePurchase('month', data.verificationSubscription.value.id)\"\r\n            >\r\n                <div>\r\n                    {{ data.verificationSubscription.value.product_monthly.price }}\r\n                    / month\r\n                </div>\r\n            </button>\r\n            <div class=\"g-text-p-small-grey\">\r\n                <p class=\"mt-1\">*VAT Included</p>\r\n            </div>\r\n            <div class=\"g-text-p-dark text-center m-0\">\r\n                <p>Save <strong>20%</strong> with the yearly subscription!</p>\r\n            </div>\r\n        </div>\r\n        <ng-template #showLoading>\r\n            <mat-progress-spinner\r\n                class=\"g-mat-progress-spinner-blue mx-auto my-4\"\r\n                mode=\"indeterminate\"\r\n                [diameter]=\"100\"\r\n            ></mat-progress-spinner>\r\n            <h1 class=\"g-text-h1-dark my-3\">Processing your Payment...</h1>\r\n        </ng-template>\r\n    </div>\r\n    <ng-template #showSuccess>\r\n        <div class=\"g-text-h2-dark\">Congratulations!</div>\r\n        <div class=\"g-text-p-dark\">\r\n            You are now verified as a\r\n            <strong>{{ data.verificationSubscription.value.product.title }}</strong>\r\n        </div>\r\n        <div class=\"g-text-p-dark\">\r\n            You can now access all our premium features, like Browse the Market and MX Clearing.\r\n        </div>\r\n        <div class=\"g-text-p-dark mt-2\">\r\n            Further increase your trust in the market by getting <strong>FICA</strong> registered with MatchMX.\r\n        </div>\r\n        <a\r\n            class=\"g-primary-button l-button-link mt-3\"\r\n            mat-ripple\r\n            [href]=\"\r\n                isWeb\r\n                    ? './assets/files/The Match Exchange - Client Subscription Form.docx'\r\n                    : 'https://match.skudu.co.za/assets/files/The Match Exchange - Client Subscription Form.docx'\r\n            \"\r\n            download=\"The Match Exchange - Client Subscription Form\"\r\n            >Download Form</a\r\n        >\r\n        <button class=\"g-secondary-button mt-3\" mat-flat-button [disabled]=\"isEmailLoading\" (click)=\"handleEmail()\">\r\n            <mat-progress-spinner\r\n                *ngIf=\"isEmailLoading; else showEmailText\"\r\n                class=\"g-mat-progress-spinner-blue mx-auto\"\r\n                mode=\"indeterminate\"\r\n                [diameter]=\"30\"\r\n            ></mat-progress-spinner>\r\n            <ng-template #showEmailText>Request By Email </ng-template>\r\n        </button>\r\n        <p class=\"g-text-p-small-grey mt-2\">*This is optional and can be completed at a future date</p>\r\n    </ng-template>\r\n</div>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { MatLegacyDialog as MatDialog } from '@angular/material/legacy-dialog';\r\nimport { Dictionary } from '@ngrx/entity';\r\nimport { GRAINSA_VERIFICATION_ID, GRAINSA_VERIFICATION_TEXT } from 'src/app/core/helpers/constants';\r\nimport { VerificationSubscription } from 'src/app/core/models/viewModels';\r\nimport { NotVerifiedModalComponent } from '../not-verified-modal/not-verified-modal.component';\r\nimport { SubscriptionTypeModalComponent } from '../subscription-type-modal/subscription-type-modal.component';\r\n\r\n@Component({\r\n    selector: 'app-verification-card',\r\n    templateUrl: './verification-card.component.html',\r\n    styleUrls: ['./verification-card.component.scss'],\r\n})\r\nexport class VerificationCardComponent implements OnInit {\r\n    @Input() verificationSubscription: Dictionary<VerificationSubscription>;\r\n    @Input() isWeb: boolean;\r\n    @Input() isGrainSAVerified: boolean;\r\n\r\n    constructor(private dialog: MatDialog) {}\r\n\r\n    ngOnInit(): void {}\r\n\r\n    handleVerificationModal() {\r\n        if (+this.verificationSubscription.key === GRAINSA_VERIFICATION_ID && this.isGrainSAVerified) {\r\n            this.dialog.open(SubscriptionTypeModalComponent, {\r\n                panelClass: 'g-modal-container',\r\n                autoFocus: false,\r\n                data: {\r\n                    verificationSubscription: this.verificationSubscription,\r\n                    promotionalText: GRAINSA_VERIFICATION_TEXT,\r\n                },\r\n            });\r\n        } else if (+this.verificationSubscription.key === GRAINSA_VERIFICATION_ID && !this.isGrainSAVerified) {\r\n            this.dialog.open(NotVerifiedModalComponent, {\r\n                panelClass: 'g-modal-container',\r\n                autoFocus: false,\r\n            });\r\n        } else {\r\n            this.dialog.open(SubscriptionTypeModalComponent, {\r\n                panelClass: 'g-modal-container',\r\n                autoFocus: false,\r\n                data: {\r\n                    verificationSubscription: this.verificationSubscription,\r\n                },\r\n            });\r\n        }\r\n    }\r\n}\r\n","<div class=\"l-verification-subscription\" (click)=\"!isWeb && handleVerificationModal()\">\r\n    <div class=\"l-promotion\" *ngIf=\"verificationSubscription.value.promotion\">\r\n        {{ verificationSubscription.value.promotion }}\r\n    </div>\r\n    <div>\r\n        <img\r\n            class=\"d-inline l-verification-icon\"\r\n            [src]=\"verificationSubscription.value.source\"\r\n            alt=\"verification-icon\"\r\n        />\r\n        <p class=\"d-inline g-text-p l-left\">{{ verificationSubscription.value.product.title }}</p>\r\n    </div>\r\n    <p class=\"g-text-p l-verification-price\">{{ verificationSubscription.value.product.price }}</p>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { select, Store } from '@ngrx/store';\r\nimport { Actions, ofType } from '@ngrx/effects';\r\nimport { Dictionary } from '@ngrx/entity';\r\nimport {\r\n    baseVerifications,\r\n    promotionVerifications,\r\n    SUPPORT_ROUTE,\r\n    verificationTypes,\r\n    VERIFICATION_SUBSCRIPTIONS,\r\n    DOCUMENT_VIEWER_ROUTE,\r\n} from 'src/app/core/helpers/constants';\r\nimport { VerificationSubscription, VerificationType } from 'src/app/core/models/viewModels';\r\nimport { take } from 'rxjs/operators';\r\nimport { Capacitor } from '@capacitor/core';\r\nimport { User } from 'src/app/core/models/queryModels';\r\n\r\nimport * as fromApp from 'src/app/core/ngrx/app-state/index';\r\nimport * as fromRoot from '../../../../core/ngrx/reducers/index';\r\n\r\n@Component({\r\n    selector: 'app-verification',\r\n    templateUrl: './verification.component.html',\r\n    styleUrls: ['./verification.component.scss'],\r\n})\r\nexport class VerificationComponent implements OnInit {\r\n    verificationSubscriptions: Dictionary<VerificationSubscription> = VERIFICATION_SUBSCRIPTIONS;\r\n    baseVerificationSubscriptions: Dictionary<VerificationSubscription>;\r\n    promotionVerificationSubscriptions: Dictionary<VerificationSubscription>;\r\n    verificationTypes: Dictionary<VerificationType> = verificationTypes;\r\n    user: User;\r\n    userVerification: VerificationType;\r\n    verificationDate: Date;\r\n\r\n    platform: string;\r\n    isWeb: boolean = false;\r\n    isUserVerified: boolean = false;\r\n    isActionLoading: boolean = false;\r\n    isGrainSAVerified: boolean = false;\r\n\r\n    constructor(private router: Router, private store: Store<fromApp.AppState>, private actions$: Actions) {\r\n        this.platform = Capacitor.getPlatform();\r\n        this.isWeb = this.platform === 'web';\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.baseVerificationSubscriptions = Object.fromEntries(\r\n            Object.entries(this.verificationSubscriptions).filter(([key]) => baseVerifications.includes(+key)),\r\n        );\r\n        this.promotionVerificationSubscriptions = Object.fromEntries(\r\n            Object.entries(this.verificationSubscriptions).filter(([key]) => promotionVerifications.includes(+key)),\r\n        );\r\n\r\n        this.store.pipe(select(fromRoot.authSelectors.getUser), take(1)).subscribe((user) => {\r\n            if (user) {\r\n                this.user = user;\r\n                if (user.verification && user.verification.id !== 6) {\r\n                    this.isUserVerified = true;\r\n                    this.userVerification = this.verificationTypes[this.user.verification.id];\r\n                    this.verificationDate = new Date(this.user.verification.verificationDate);\r\n                }\r\n                if (user.grainSA?.isVerified) this.isGrainSAVerified = true;\r\n            }\r\n        });\r\n    }\r\n\r\n    handleBack(): void {\r\n        this.router.navigate([SUPPORT_ROUTE]);\r\n    }\r\n\r\n    handleRequestByEmail(): void {\r\n        this.isActionLoading = true;\r\n\r\n        this.actions$\r\n            .pipe(\r\n                ofType(\r\n                    fromApp.appActions.ReqEmailVerificationFormSuccess,\r\n                    fromApp.appActions.ReqEmailVerificationFormFail,\r\n                ),\r\n                take(1),\r\n            )\r\n            .subscribe(() => {\r\n                this.isActionLoading = false;\r\n            });\r\n\r\n        this.store.dispatch(fromApp.appActions.ReqEmailVerificationForm());\r\n    }\r\n\r\n    handleRouteToDocumentViewer(name: string) {\r\n        this.router.navigate([`${DOCUMENT_VIEWER_ROUTE}/${name}`]);\r\n    }\r\n}\r\n","<div class=\"g-app-dimensions l-container\">\r\n    <!-- #region Header -->\r\n\r\n    <div class=\"l-header\">\r\n        <img\r\n            class=\"l-back-icon\"\r\n            src=\"./assets/icons/back-arrow-icon.svg\"\r\n            alt=\"back-arrow-icon\"\r\n            (click)=\"handleBack()\"\r\n        />\r\n        <p class=\"g-text-h2-dark m-0\">Verification</p>\r\n    </div>\r\n\r\n    <!-- #endregion -->\r\n\r\n    <!-- #region Content -->\r\n\r\n    <div class=\"l-content\">\r\n        <ng-container *ngIf=\"!isUserVerified; else showVerificationDetails\">\r\n            <p class=\"g-text-p l-left my-5\">\r\n                By Subscribing to Match Exchange you indicate to the market that you are a trusted party to transact\r\n                with. A symbol of verification is displayed to matching counterparties on your Lots.\r\n            </p>\r\n\r\n            <!-- #region Verification Subscriptions -->\r\n\r\n            <h2 class=\"g-text-h2 l-left mt-4 mb-3\"><b>Available Verification Types:</b></h2>\r\n            <div class=\"g-text-p-small-grey\" *ngIf=\"!isWeb\">\r\n                <p>Select a Yearly or Monthly subscription below</p>\r\n            </div>\r\n\r\n            <div\r\n                *ngFor=\"let verificationSubscription of baseVerificationSubscriptions | keyvalue\"\r\n                class=\"l-verification-container\"\r\n            >\r\n                <app-verification-card\r\n                    [verificationSubscription]=\"verificationSubscription\"\r\n                    [isWeb]=\"isWeb\"\r\n                ></app-verification-card>\r\n            </div>\r\n\r\n            <div *ngIf=\"isWeb\" class=\"g-text-p-small-grey\">\r\n                <p>*VAT Excluded</p>\r\n            </div>\r\n            <h2 class=\"g-text-h2 l-left mt-4 mb-3\"><b>Grain SA</b></h2>\r\n\r\n            <div\r\n                *ngFor=\"let verificationSubscription of promotionVerificationSubscriptions | keyvalue\"\r\n                class=\"l-verification-container\"\r\n            >\r\n                <app-verification-card\r\n                    [verificationSubscription]=\"verificationSubscription\"\r\n                    [isWeb]=\"isWeb\"\r\n                    [isGrainSAVerified]=\"isGrainSAVerified\"\r\n                ></app-verification-card>\r\n            </div>\r\n            <div class=\"g-text-p-small-grey mb-2\" *ngIf=\"!isWeb\">\r\n                <p>\r\n                    Your monthly or annual subscription automatically renews for the same term unless cancelled at least\r\n                    24 hours prior to the end of the current term. Cancel at any time in the\r\n                    <span>{{ platform === 'ios' ? 'App Store' : 'Google Play store' }}</span> at no additional cost;\r\n                    your subscription will then cease at the end of the current term.\r\n                </p>\r\n                <a\r\n                    class=\"l-document-link\"\r\n                    *ngIf=\"platform === 'ios'\"\r\n                    href=\"https://www.apple.com/legal/internet-services/itunes/dev/stdeula/\"\r\n                >\r\n                    Apple EULA, </a\r\n                ><a class=\"l-document-link\" href=\"https://app.matchmx.com/assets/files/ToS.html\"\r\n                    (click)=\"handleRouteToDocumentViewer('ToS.pdf')\"> Terms Of Service</a>,\r\n                <a class=\"l-document-link\"\r\n                   (click)=\"handleRouteToDocumentViewer('privacyPolicy.pdf')\"\r\n                    >Privacy Policy</a\r\n                >,\r\n                <a class=\"l-document-link\"\r\n                   (click)=\"handleRouteToDocumentViewer('Skudu_Acceptable.pdf')\"\r\n                    >Website Terms of Use</a\r\n                >.\r\n            </div>\r\n\r\n            <!-- #endregion -->\r\n\r\n            <!-- #region How To Verify -->\r\n\r\n            <h2 class=\"g-text-h2 l-left my-4\">\r\n                <b> To verify your company you can download the application form or request it by email below: </b>\r\n            </h2>\r\n\r\n            <div class=\"l-button-container\">\r\n                <a\r\n                    class=\"g-primary-button l-button-link\"\r\n                    mat-ripple\r\n                    [href]=\"\r\n                        isWeb\r\n                            ? './assets/files/The Match Exchange - Client Subscription Form.docx'\r\n                            : 'https://match.skudu.co.za/assets/files/The Match Exchange - Client Subscription Form.docx'\r\n                    \"\r\n                    download=\"The Match Exchange - Client Subscription Form\"\r\n                    >Download Form</a\r\n                >\r\n                <button class=\"g-primary-button mt-3\" mat-flat-button (click)=\"handleRequestByEmail()\">\r\n                    <mat-progress-spinner\r\n                        *ngIf=\"isActionLoading; else showRequestByEmail\"\r\n                        class=\"g-mat-progress-spinner-white mx-auto\"\r\n                        mode=\"indeterminate\"\r\n                        [diameter]=\"30\"\r\n                    ></mat-progress-spinner>\r\n                    <ng-template #showRequestByEmail> Request By Email </ng-template>\r\n                </button>\r\n            </div>\r\n            <!-- #endregion -->\r\n\r\n            <!-- #region Contact Information -->\r\n            <div class=\"l-contacts mt-4\">\r\n                <img class=\"l-verification-icon\" src=\"./assets/images/blue-phone.svg\" alt=\"Blue phone\" />\r\n                <p class=\"g-text-p l-left m-0\">Call: 021 870 3960</p>\r\n            </div>\r\n            <div class=\"l-contacts\">\r\n                <img class=\"l-verification-icon\" src=\"./assets/images/blue-at-symbol.svg\" alt=\"Commercial at sign\" />\r\n                <p class=\"g-text-p l-left m-0\">Email: info@matchmx.com</p>\r\n            </div>\r\n\r\n            <!-- #endregion -->\r\n        </ng-container>\r\n        <ng-template #showVerificationDetails>\r\n            <div class=\"l-user-verified\">\r\n                <p class=\"m-0\">You are verified as a</p>\r\n                <h2>\r\n                    {{ userVerification.name }}\r\n                </h2>\r\n                <img class=\"l-verification-icon-verified\" [src]=\"userVerification.source\" alt=\"verification-icon\" />\r\n                <div class=\"mt-1\">\r\n                    <p class=\"g-text-h2 d-inline mr-1\">Subscription Start Date:</p>\r\n                    <span class=\"d-inline\" id=\"months\">{{ verificationDate.toLocaleDateString() }}</span>\r\n                </div>\r\n\r\n                <div class=\"g-text-p-small-grey mt-4\" *ngIf=\"!isWeb\">\r\n                    <p>\r\n                        Your monthly or annual subscription automatically renews for the same term unless cancelled at\r\n                        least 24 hours prior to the end of the current term. Cancel at any time in your store at no\r\n                        additional cost; your subscription will then cease at the end of the current term.\r\n                    </p>\r\n                </div>\r\n\r\n                <p class=\"l-incorrect-verification-contact\">\r\n                    If your verification is displaying incorrectly, or you wish to change your verification type, please\r\n                    email\r\n                    <a href=\"mailto:info@matchmx.com\">info@matchmx.com.</a>\r\n                </p>\r\n            </div>\r\n        </ng-template>\r\n    </div>\r\n\r\n    <!-- #endregion -->\r\n</div>\r\n","import { DetailedTutorialComponent } from './components/detailed-tutorial/detailed-tutorial.component';\r\nimport { KnowYourCounterPartyComponent } from './components/know-your-counter-party/know-your-counter-party.component';\r\nimport { ContactUsComponent } from './components/contact-us/contact-us.component';\r\nimport { FAQComponent } from './components/faq/faq.component';\r\nimport { SupportComponent } from './support.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { VerificationComponent } from './components/verification/verification.component';\r\n\r\nimport { AngularFireAuthGuard, redirectUnauthorizedTo } from '@angular/fire/compat/auth-guard';\r\nimport { SIGNIN_ROUTE } from 'src/app/core/helpers/constants';\r\n\r\nconst redirectUnauthorizedToLogin = () => redirectUnauthorizedTo([SIGNIN_ROUTE]);\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        children: [\r\n            {\r\n                path: '',\r\n                canActivate: [AngularFireAuthGuard],\r\n                data: { authGuardPipe: redirectUnauthorizedToLogin },\r\n                component: SupportComponent,\r\n            },\r\n            {\r\n                path: 'FAQs',\r\n                canActivate: [AngularFireAuthGuard],\r\n                data: { authGuardPipe: redirectUnauthorizedToLogin },\r\n                component: FAQComponent,\r\n            },\r\n            {\r\n                path: 'contact-us',\r\n                canActivate: [AngularFireAuthGuard],\r\n                data: { authGuardPipe: redirectUnauthorizedToLogin },\r\n                component: ContactUsComponent,\r\n            },\r\n            {\r\n                path: 'kyc-party',\r\n                canActivate: [AngularFireAuthGuard],\r\n                data: { authGuardPipe: redirectUnauthorizedToLogin },\r\n                component: KnowYourCounterPartyComponent,\r\n            },\r\n            {\r\n                path: 'detailed-tutorial',\r\n                canActivate: [AngularFireAuthGuard],\r\n                data: { authGuardPipe: redirectUnauthorizedToLogin },\r\n                component: DetailedTutorialComponent,\r\n            },\r\n            { path: 'verification', component: VerificationComponent },\r\n        ],\r\n    },\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule],\r\n})\r\nexport class SupportRoutingModule {}\r\n","import { SupportCard } from './../../core/models/viewModels';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { HOME_ROUTE, LANDING_ROUTE, SUPPORT_CARDS_DATA } from 'src/app/core/helpers/constants';\r\nimport { Location } from '@angular/common';\r\n\r\n@Component({\r\n    selector: 'app-support',\r\n    templateUrl: './support.component.html',\r\n    styleUrls: ['./support.component.scss'],\r\n})\r\nexport class SupportComponent implements OnInit {\r\n    cards: SupportCard[] = SUPPORT_CARDS_DATA;\r\n\r\n    constructor(private router: Router, private location: Location) {}\r\n\r\n    ngOnInit(): void {}\r\n\r\n    handleNavigateToHome() {\r\n        this.router.navigate([HOME_ROUTE]);\r\n    }\r\n\r\n    handleNavigate(route: string) {\r\n        route === LANDING_ROUTE\r\n            ? this.router.navigate([route], { queryParams: { fromSupport: true } })\r\n            : this.router.navigate([route]);\r\n    }\r\n}\r\n","<div class=\"g-app-dimensions l-container\">\r\n    <!-- #region Header -->\r\n\r\n    <div class=\"l-header\">\r\n        <img\r\n            class=\"l-back-icon\"\r\n            src=\"./assets/icons/back-arrow-icon.svg\"\r\n            alt=\"back-arrow-icon\"\r\n            (click)=\"handleNavigateToHome()\"\r\n        />\r\n        <div class=\"l-header-img-container\">\r\n            <img\r\n                class=\"l-header-img\"\r\n                src=\"./assets/images/MX-logo-full.svg\"\r\n                alt=\"MX Match Logo\"\r\n                (click)=\"handleNavigateToHome()\"\r\n            />\r\n        </div>\r\n    </div>\r\n\r\n    <!-- #endregion -->\r\n\r\n    <!-- #region Content -->\r\n\r\n    <div class=\"l-cards-container\">\r\n        <div *ngFor=\"let card of cards\" class=\"l-card\" matRipple>\r\n            <a\r\n                class=\"l-card l-black\"\r\n                *ngIf=\"card.linksTo !== null; else displayRouteCard\"\r\n                href=\"{{ card.linksTo }}\"\r\n                target=\"_blank\"\r\n            >\r\n                <div class=\"l-card-img-container\">\r\n                    <img class=\"l-card-img\" [src]=\"card.source\" [alt]=\"card.sourceAlt\" />\r\n                </div>\r\n                <div class=\"l-card-title-container\">\r\n                    <h2 class=\"g-text-h2 m-0\">{{ card.title }}</h2>\r\n                </div>\r\n            </a>\r\n            <ng-template class=\"l-black\" #displayRouteCard (click)=\"handleNavigate(card.routesTo)\">\r\n                <div class=\"l-card\" (click)=\"handleNavigate(card.routesTo)\">\r\n                    <div class=\"l-card-img-container\">\r\n                        <img class=\"l-card-img\" [src]=\"card.source\" [alt]=\"card.sourceAlt\" />\r\n                    </div>\r\n                    <div class=\"l-card-title-container\">\r\n                        <h2 class=\"g-text-h2 m-0 text-left\">{{ card.title }}</h2>\r\n                    </div>\r\n                </div>\r\n            </ng-template>\r\n        </div>\r\n    </div>\r\n\r\n    <!-- #endregion -->\r\n</div>\r\n","// #region Module Imports\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n//import { GooglePlaceModule } from 'ngx-google-places-autocomplete';\r\n//import { AgmCoreModule } from '@diegomvh/agm-core';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { SupportRoutingModule } from './support-routing.module';\r\nimport { MatLegacyProgressSpinnerModule as MatProgressSpinnerModule } from '@angular/material/legacy-progress-spinner';\r\n\r\n// #endregion\r\n\r\n// #region Component Imports\r\n\r\nimport { ContactUsComponent } from './components/contact-us/contact-us.component';\r\nimport { FAQComponent } from './components/faq/faq.component';\r\nimport { SupportComponent } from './support.component';\r\nimport { KnowYourCounterPartyComponent } from './components/know-your-counter-party/know-your-counter-party.component';\r\nimport { DetailedTutorialComponent } from './components/detailed-tutorial/detailed-tutorial.component';\r\nimport { VerificationComponent } from './components/verification/verification.component';\r\nimport { VerificationCardComponent } from './components/verification/verification-card/verification-card.component';\r\nimport { SubscriptionTypeModalComponent } from './components/verification/subscription-type-modal/subscription-type-modal.component';\r\nimport { EffectsModule } from '@ngrx/effects';\r\nimport { PaygateEffects } from '../../core/ngrx/paygate/paygate.effects';\r\nimport { NotVerifiedModalComponent } from './components/verification/not-verified-modal/not-verified-modal.component';\r\nimport { GoogleMapsModule } from '@angular/google-maps';\r\nimport { NgxGpAutocompleteModule } from '@angular-magic/ngx-gp-autocomplete';\r\n\r\n// #endregion\r\n\r\n@NgModule({\r\n    declarations: [\r\n        SupportComponent,\r\n        FAQComponent,\r\n        ContactUsComponent,\r\n        KnowYourCounterPartyComponent,\r\n        DetailedTutorialComponent,\r\n        VerificationComponent,\r\n        VerificationCardComponent,\r\n        SubscriptionTypeModalComponent,\r\n        NotVerifiedModalComponent,\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        SupportRoutingModule,/*\r\n        AgmCoreModule.forRoot({\r\n            apiKey: 'AIzaSyAPz_4c60V_PBTnACgcWOz2nVPKpyN8DT8',\r\n        }),*/\r\n        GoogleMapsModule,\r\n        NgxGpAutocompleteModule,\r\n       // GooglePlaceModule,\r\n        MatRippleModule,\r\n        MatExpansionModule,\r\n        MatProgressSpinnerModule,\r\n        EffectsModule.forFeature([PaygateEffects]),\r\n    ],\r\n})\r\nexport class SupportModule {}\r\n","import * as i0 from '@angular/core';\nimport { InjectionToken, Directive, Input, EventEmitter, Optional, Inject, SkipSelf, Output, NgModule } from '@angular/core';\nimport * as i1 from '@angular/cdk/collections';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject, Subscription } from 'rxjs';\n\n/** Used to generate unique ID for each accordion. */\nlet nextId$1 = 0;\n/**\n * Injection token that can be used to reference instances of `CdkAccordion`. It serves\n * as alternative token to the actual `CdkAccordion` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_ACCORDION = new InjectionToken('CdkAccordion');\n/**\n * Directive whose purpose is to manage the expanded state of CdkAccordionItem children.\n */\nclass CdkAccordion {\n    constructor() {\n        /** Emits when the state of the accordion changes */\n        this._stateChanges = new Subject();\n        /** Stream that emits true/false when openAll/closeAll is triggered. */\n        this._openCloseAllActions = new Subject();\n        /** A readonly id value to use for unique selection coordination. */\n        this.id = `cdk-accordion-${nextId$1++}`;\n        this._multi = false;\n    }\n    /** Whether the accordion should allow multiple expanded accordion items simultaneously. */\n    get multi() {\n        return this._multi;\n    }\n    set multi(multi) {\n        this._multi = coerceBooleanProperty(multi);\n    }\n    /** Opens all enabled accordion items in an accordion where multi is enabled. */\n    openAll() {\n        if (this._multi) {\n            this._openCloseAllActions.next(true);\n        }\n    }\n    /** Closes all enabled accordion items. */\n    closeAll() {\n        this._openCloseAllActions.next(false);\n    }\n    ngOnChanges(changes) {\n        this._stateChanges.next(changes);\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n        this._openCloseAllActions.complete();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: CdkAccordion, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.1.1\", type: CdkAccordion, selector: \"cdk-accordion, [cdkAccordion]\", inputs: { multi: \"multi\" }, providers: [{ provide: CDK_ACCORDION, useExisting: CdkAccordion }], exportAs: [\"cdkAccordion\"], usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: CdkAccordion, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-accordion, [cdkAccordion]',\n                    exportAs: 'cdkAccordion',\n                    providers: [{ provide: CDK_ACCORDION, useExisting: CdkAccordion }],\n                }]\n        }], propDecorators: { multi: [{\n                type: Input\n            }] } });\n\n/** Used to generate unique ID for each accordion item. */\nlet nextId = 0;\n/**\n * An basic directive expected to be extended and decorated as a component.  Sets up all\n * events and attributes needed to be managed by a CdkAccordion parent.\n */\nclass CdkAccordionItem {\n    /** Whether the AccordionItem is expanded. */\n    get expanded() {\n        return this._expanded;\n    }\n    set expanded(expanded) {\n        expanded = coerceBooleanProperty(expanded);\n        // Only emit events and update the internal value if the value changes.\n        if (this._expanded !== expanded) {\n            this._expanded = expanded;\n            this.expandedChange.emit(expanded);\n            if (expanded) {\n                this.opened.emit();\n                /**\n                 * In the unique selection dispatcher, the id parameter is the id of the CdkAccordionItem,\n                 * the name value is the id of the accordion.\n                 */\n                const accordionId = this.accordion ? this.accordion.id : this.id;\n                this._expansionDispatcher.notify(this.id, accordionId);\n            }\n            else {\n                this.closed.emit();\n            }\n            // Ensures that the animation will run when the value is set outside of an `@Input`.\n            // This includes cases like the open, close and toggle methods.\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /** Whether the AccordionItem is disabled. */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(disabled) {\n        this._disabled = coerceBooleanProperty(disabled);\n    }\n    constructor(accordion, _changeDetectorRef, _expansionDispatcher) {\n        this.accordion = accordion;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._expansionDispatcher = _expansionDispatcher;\n        /** Subscription to openAll/closeAll events. */\n        this._openCloseAllSubscription = Subscription.EMPTY;\n        /** Event emitted every time the AccordionItem is closed. */\n        this.closed = new EventEmitter();\n        /** Event emitted every time the AccordionItem is opened. */\n        this.opened = new EventEmitter();\n        /** Event emitted when the AccordionItem is destroyed. */\n        this.destroyed = new EventEmitter();\n        /**\n         * Emits whenever the expanded state of the accordion changes.\n         * Primarily used to facilitate two-way binding.\n         * @docs-private\n         */\n        this.expandedChange = new EventEmitter();\n        /** The unique AccordionItem id. */\n        this.id = `cdk-accordion-child-${nextId++}`;\n        this._expanded = false;\n        this._disabled = false;\n        /** Unregister function for _expansionDispatcher. */\n        this._removeUniqueSelectionListener = () => { };\n        this._removeUniqueSelectionListener = _expansionDispatcher.listen((id, accordionId) => {\n            if (this.accordion &&\n                !this.accordion.multi &&\n                this.accordion.id === accordionId &&\n                this.id !== id) {\n                this.expanded = false;\n            }\n        });\n        // When an accordion item is hosted in an accordion, subscribe to open/close events.\n        if (this.accordion) {\n            this._openCloseAllSubscription = this._subscribeToOpenCloseAllActions();\n        }\n    }\n    /** Emits an event for the accordion item being destroyed. */\n    ngOnDestroy() {\n        this.opened.complete();\n        this.closed.complete();\n        this.destroyed.emit();\n        this.destroyed.complete();\n        this._removeUniqueSelectionListener();\n        this._openCloseAllSubscription.unsubscribe();\n    }\n    /** Toggles the expanded state of the accordion item. */\n    toggle() {\n        if (!this.disabled) {\n            this.expanded = !this.expanded;\n        }\n    }\n    /** Sets the expanded state of the accordion item to false. */\n    close() {\n        if (!this.disabled) {\n            this.expanded = false;\n        }\n    }\n    /** Sets the expanded state of the accordion item to true. */\n    open() {\n        if (!this.disabled) {\n            this.expanded = true;\n        }\n    }\n    _subscribeToOpenCloseAllActions() {\n        return this.accordion._openCloseAllActions.subscribe(expanded => {\n            // Only change expanded state if item is enabled\n            if (!this.disabled) {\n                this.expanded = expanded;\n            }\n        });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: CdkAccordionItem, deps: [{ token: CDK_ACCORDION, optional: true, skipSelf: true }, { token: i0.ChangeDetectorRef }, { token: i1.UniqueSelectionDispatcher }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.1.1\", type: CdkAccordionItem, selector: \"cdk-accordion-item, [cdkAccordionItem]\", inputs: { expanded: \"expanded\", disabled: \"disabled\" }, outputs: { closed: \"closed\", opened: \"opened\", destroyed: \"destroyed\", expandedChange: \"expandedChange\" }, providers: [\n            // Provide `CDK_ACCORDION` as undefined to prevent nested accordion items from\n            // registering to the same accordion.\n            { provide: CDK_ACCORDION, useValue: undefined },\n        ], exportAs: [\"cdkAccordionItem\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: CdkAccordionItem, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-accordion-item, [cdkAccordionItem]',\n                    exportAs: 'cdkAccordionItem',\n                    providers: [\n                        // Provide `CDK_ACCORDION` as undefined to prevent nested accordion items from\n                        // registering to the same accordion.\n                        { provide: CDK_ACCORDION, useValue: undefined },\n                    ],\n                }]\n        }], ctorParameters: function () { return [{ type: CdkAccordion, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [CDK_ACCORDION]\n                }, {\n                    type: SkipSelf\n                }] }, { type: i0.ChangeDetectorRef }, { type: i1.UniqueSelectionDispatcher }]; }, propDecorators: { closed: [{\n                type: Output\n            }], opened: [{\n                type: Output\n            }], destroyed: [{\n                type: Output\n            }], expandedChange: [{\n                type: Output\n            }], expanded: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }] } });\n\nclass CdkAccordionModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: CdkAccordionModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.1.1\", ngImport: i0, type: CdkAccordionModule, declarations: [CdkAccordion, CdkAccordionItem], exports: [CdkAccordion, CdkAccordionItem] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: CdkAccordionModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: CdkAccordionModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: [CdkAccordion, CdkAccordionItem],\n                    declarations: [CdkAccordion, CdkAccordionItem],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CDK_ACCORDION, CdkAccordion, CdkAccordionItem, CdkAccordionModule };\n","import { CdkAccordionItem, CdkAccordion, CdkAccordionModule } from '@angular/cdk/accordion';\nimport * as i2 from '@angular/cdk/portal';\nimport { TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport * as i3 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Directive, Inject, Optional, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, SkipSelf, Input, Output, ContentChild, ViewChild, Host, Attribute, QueryList, ContentChildren, NgModule } from '@angular/core';\nimport { mixinTabIndex, MatCommonModule } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport * as i2$1 from '@angular/cdk/a11y';\nimport { FocusKeyManager } from '@angular/cdk/a11y';\nimport { distinctUntilChanged, startWith, filter, take } from 'rxjs/operators';\nimport { ENTER, hasModifierKey, SPACE } from '@angular/cdk/keycodes';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { Subject, Subscription, EMPTY, merge } from 'rxjs';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport * as i1 from '@angular/cdk/collections';\n\n/**\n * Token used to provide a `MatAccordion` to `MatExpansionPanel`.\n * Used primarily to avoid circular imports between `MatAccordion` and `MatExpansionPanel`.\n */\nconst MAT_ACCORDION = new InjectionToken('MAT_ACCORDION');\n\n/** Time and timing curve for expansion panel animations. */\n// Note: Keep this in sync with the Sass variable for the panel header animation.\nconst EXPANSION_PANEL_ANIMATION_TIMING = '225ms cubic-bezier(0.4,0.0,0.2,1)';\n/**\n * Animations used by the Material expansion panel.\n *\n * A bug in angular animation's `state` when ViewContainers are moved using ViewContainerRef.move()\n * causes the animation state of moved components to become `void` upon exit, and not update again\n * upon reentry into the DOM.  This can lead a to situation for the expansion panel where the state\n * of the panel is `expanded` or `collapsed` but the animation state is `void`.\n *\n * To correctly handle animating to the next state, we animate between `void` and `collapsed` which\n * are defined to have the same styles. Since angular animates from the current styles to the\n * destination state's style definition, in situations where we are moving from `void`'s styles to\n * `collapsed` this acts a noop since no style values change.\n *\n * In the case where angular's animation state is out of sync with the expansion panel's state, the\n * expansion panel being `expanded` and angular animations being `void`, the animation from the\n * `expanded`'s effective styles (though in a `void` animation state) to the collapsed state will\n * occur as expected.\n *\n * Angular Bug: https://github.com/angular/angular/issues/18847\n *\n * @docs-private\n */\nconst matExpansionAnimations = {\n    /** Animation that rotates the indicator arrow. */\n    indicatorRotate: trigger('indicatorRotate', [\n        state('collapsed, void', style({ transform: 'rotate(0deg)' })),\n        state('expanded', style({ transform: 'rotate(180deg)' })),\n        transition('expanded <=> collapsed, void => collapsed', animate(EXPANSION_PANEL_ANIMATION_TIMING)),\n    ]),\n    /** Animation that expands and collapses the panel content. */\n    bodyExpansion: trigger('bodyExpansion', [\n        state('collapsed, void', style({ height: '0px', visibility: 'hidden' })),\n        // Clear the `visibility` while open, otherwise the content will be visible when placed in\n        // a parent that's `visibility: hidden`, because `visibility` doesn't apply to descendants\n        // that have a `visibility` of their own (see #27436).\n        state('expanded', style({ height: '*', visibility: '' })),\n        transition('expanded <=> collapsed, void => collapsed', animate(EXPANSION_PANEL_ANIMATION_TIMING)),\n    ]),\n};\n\n/**\n * Token used to provide a `MatExpansionPanel` to `MatExpansionPanelContent`.\n * Used to avoid circular imports between `MatExpansionPanel` and `MatExpansionPanelContent`.\n */\nconst MAT_EXPANSION_PANEL = new InjectionToken('MAT_EXPANSION_PANEL');\n\n/**\n * Expansion panel content that will be rendered lazily\n * after the panel is opened for the first time.\n */\nclass MatExpansionPanelContent {\n    constructor(_template, _expansionPanel) {\n        this._template = _template;\n        this._expansionPanel = _expansionPanel;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatExpansionPanelContent, deps: [{ token: i0.TemplateRef }, { token: MAT_EXPANSION_PANEL, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.1.1\", type: MatExpansionPanelContent, selector: \"ng-template[matExpansionPanelContent]\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatExpansionPanelContent, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ng-template[matExpansionPanelContent]',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_EXPANSION_PANEL]\n                }, {\n                    type: Optional\n                }] }]; } });\n\n/** Counter for generating unique element ids. */\nlet uniqueId = 0;\n/**\n * Injection token that can be used to configure the default\n * options for the expansion panel component.\n */\nconst MAT_EXPANSION_PANEL_DEFAULT_OPTIONS = new InjectionToken('MAT_EXPANSION_PANEL_DEFAULT_OPTIONS');\n/**\n * This component can be used as a single element to show expandable content, or as one of\n * multiple children of an element with the MatAccordion directive attached.\n */\nclass MatExpansionPanel extends CdkAccordionItem {\n    /** Whether the toggle indicator should be hidden. */\n    get hideToggle() {\n        return this._hideToggle || (this.accordion && this.accordion.hideToggle);\n    }\n    set hideToggle(value) {\n        this._hideToggle = coerceBooleanProperty(value);\n    }\n    /** The position of the expansion indicator. */\n    get togglePosition() {\n        return this._togglePosition || (this.accordion && this.accordion.togglePosition);\n    }\n    set togglePosition(value) {\n        this._togglePosition = value;\n    }\n    constructor(accordion, _changeDetectorRef, _uniqueSelectionDispatcher, _viewContainerRef, _document, _animationMode, defaultOptions) {\n        super(accordion, _changeDetectorRef, _uniqueSelectionDispatcher);\n        this._viewContainerRef = _viewContainerRef;\n        this._animationMode = _animationMode;\n        this._hideToggle = false;\n        /** An event emitted after the body's expansion animation happens. */\n        this.afterExpand = new EventEmitter();\n        /** An event emitted after the body's collapse animation happens. */\n        this.afterCollapse = new EventEmitter();\n        /** Stream that emits for changes in `@Input` properties. */\n        this._inputChanges = new Subject();\n        /** ID for the associated header element. Used for a11y labelling. */\n        this._headerId = `mat-expansion-panel-header-${uniqueId++}`;\n        /** Stream of body animation done events. */\n        this._bodyAnimationDone = new Subject();\n        this.accordion = accordion;\n        this._document = _document;\n        // We need a Subject with distinctUntilChanged, because the `done` event\n        // fires twice on some browsers. See https://github.com/angular/angular/issues/24084\n        this._bodyAnimationDone\n            .pipe(distinctUntilChanged((x, y) => {\n            return x.fromState === y.fromState && x.toState === y.toState;\n        }))\n            .subscribe(event => {\n            if (event.fromState !== 'void') {\n                if (event.toState === 'expanded') {\n                    this.afterExpand.emit();\n                }\n                else if (event.toState === 'collapsed') {\n                    this.afterCollapse.emit();\n                }\n            }\n        });\n        if (defaultOptions) {\n            this.hideToggle = defaultOptions.hideToggle;\n        }\n    }\n    /** Determines whether the expansion panel should have spacing between it and its siblings. */\n    _hasSpacing() {\n        if (this.accordion) {\n            return this.expanded && this.accordion.displayMode === 'default';\n        }\n        return false;\n    }\n    /** Gets the expanded state string. */\n    _getExpandedState() {\n        return this.expanded ? 'expanded' : 'collapsed';\n    }\n    /** Toggles the expanded state of the expansion panel. */\n    toggle() {\n        this.expanded = !this.expanded;\n    }\n    /** Sets the expanded state of the expansion panel to false. */\n    close() {\n        this.expanded = false;\n    }\n    /** Sets the expanded state of the expansion panel to true. */\n    open() {\n        this.expanded = true;\n    }\n    ngAfterContentInit() {\n        if (this._lazyContent && this._lazyContent._expansionPanel === this) {\n            // Render the content as soon as the panel becomes open.\n            this.opened\n                .pipe(startWith(null), filter(() => this.expanded && !this._portal), take(1))\n                .subscribe(() => {\n                this._portal = new TemplatePortal(this._lazyContent._template, this._viewContainerRef);\n            });\n        }\n    }\n    ngOnChanges(changes) {\n        this._inputChanges.next(changes);\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._bodyAnimationDone.complete();\n        this._inputChanges.complete();\n    }\n    /** Checks whether the expansion panel's content contains the currently-focused element. */\n    _containsFocus() {\n        if (this._body) {\n            const focusedElement = this._document.activeElement;\n            const bodyElement = this._body.nativeElement;\n            return focusedElement === bodyElement || bodyElement.contains(focusedElement);\n        }\n        return false;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatExpansionPanel, deps: [{ token: MAT_ACCORDION, optional: true, skipSelf: true }, { token: i0.ChangeDetectorRef }, { token: i1.UniqueSelectionDispatcher }, { token: i0.ViewContainerRef }, { token: DOCUMENT }, { token: ANIMATION_MODULE_TYPE, optional: true }, { token: MAT_EXPANSION_PANEL_DEFAULT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.1.1\", type: MatExpansionPanel, selector: \"mat-expansion-panel\", inputs: { disabled: \"disabled\", expanded: \"expanded\", hideToggle: \"hideToggle\", togglePosition: \"togglePosition\" }, outputs: { opened: \"opened\", closed: \"closed\", expandedChange: \"expandedChange\", afterExpand: \"afterExpand\", afterCollapse: \"afterCollapse\" }, host: { properties: { \"class.mat-expanded\": \"expanded\", \"class._mat-animation-noopable\": \"_animationMode === \\\"NoopAnimations\\\"\", \"class.mat-expansion-panel-spacing\": \"_hasSpacing()\" }, classAttribute: \"mat-expansion-panel\" }, providers: [\n            // Provide MatAccordion as undefined to prevent nested expansion panels from registering\n            // to the same accordion.\n            { provide: MAT_ACCORDION, useValue: undefined },\n            { provide: MAT_EXPANSION_PANEL, useExisting: MatExpansionPanel },\n        ], queries: [{ propertyName: \"_lazyContent\", first: true, predicate: MatExpansionPanelContent, descendants: true }], viewQueries: [{ propertyName: \"_body\", first: true, predicate: [\"body\"], descendants: true }], exportAs: [\"matExpansionPanel\"], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: \"<ng-content select=\\\"mat-expansion-panel-header\\\"></ng-content>\\n<div class=\\\"mat-expansion-panel-content\\\"\\n     role=\\\"region\\\"\\n     [@bodyExpansion]=\\\"_getExpandedState()\\\"\\n     (@bodyExpansion.done)=\\\"_bodyAnimationDone.next($event)\\\"\\n     [attr.aria-labelledby]=\\\"_headerId\\\"\\n     [id]=\\\"id\\\"\\n     #body>\\n  <div class=\\\"mat-expansion-panel-body\\\">\\n    <ng-content></ng-content>\\n    <ng-template [cdkPortalOutlet]=\\\"_portal\\\"></ng-template>\\n  </div>\\n  <ng-content select=\\\"mat-action-row\\\"></ng-content>\\n</div>\\n\", styles: [\".mat-expansion-panel{--mat-expansion-container-shape:4px;box-sizing:content-box;display:block;margin:0;overflow:hidden;transition:margin 225ms cubic-bezier(0.4, 0, 0.2, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);position:relative;background:var(--mat-expansion-container-background-color);color:var(--mat-expansion-container-text-color);border-radius:var(--mat-expansion-container-shape)}.mat-expansion-panel:not([class*=mat-elevation-z]){box-shadow:0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12)}.mat-accordion .mat-expansion-panel:not(.mat-expanded),.mat-accordion .mat-expansion-panel:not(.mat-expansion-panel-spacing){border-radius:0}.mat-accordion .mat-expansion-panel:first-of-type{border-top-right-radius:var(--mat-expansion-container-shape);border-top-left-radius:var(--mat-expansion-container-shape)}.mat-accordion .mat-expansion-panel:last-of-type{border-bottom-right-radius:var(--mat-expansion-container-shape);border-bottom-left-radius:var(--mat-expansion-container-shape)}.cdk-high-contrast-active .mat-expansion-panel{outline:solid 1px}.mat-expansion-panel.ng-animate-disabled,.ng-animate-disabled .mat-expansion-panel,.mat-expansion-panel._mat-animation-noopable{transition:none}.mat-expansion-panel-content{display:flex;flex-direction:column;overflow:visible;font-family:var(--mat-expansion-container-text-font);font-size:var(--mat-expansion-container-text-size);font-weight:var(--mat-expansion-container-text-weight);line-height:var(--mat-expansion-container-text-line-height);letter-spacing:var(--mat-expansion-container-text-tracking)}.mat-expansion-panel-content[style*=\\\"visibility: hidden\\\"] *{visibility:hidden !important}.mat-expansion-panel-body{padding:0 24px 16px}.mat-expansion-panel-spacing{margin:16px 0}.mat-accordion>.mat-expansion-panel-spacing:first-child,.mat-accordion>*:first-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-top:0}.mat-accordion>.mat-expansion-panel-spacing:last-child,.mat-accordion>*:last-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-bottom:0}.mat-action-row{border-top-style:solid;border-top-width:1px;display:flex;flex-direction:row;justify-content:flex-end;padding:16px 8px 16px 24px;border-top-color:var(--mat-expansion-actions-divider-color)}.mat-action-row .mat-button-base,.mat-action-row .mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-action-row .mat-button-base,[dir=rtl] .mat-action-row .mat-mdc-button-base{margin-left:0;margin-right:8px}\"], dependencies: [{ kind: \"directive\", type: i2.CdkPortalOutlet, selector: \"[cdkPortalOutlet]\", inputs: [\"cdkPortalOutlet\"], outputs: [\"attached\"], exportAs: [\"cdkPortalOutlet\"] }], animations: [matExpansionAnimations.bodyExpansion], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatExpansionPanel, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-expansion-panel', exportAs: 'matExpansionPanel', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, inputs: ['disabled', 'expanded'], outputs: ['opened', 'closed', 'expandedChange'], animations: [matExpansionAnimations.bodyExpansion], providers: [\n                        // Provide MatAccordion as undefined to prevent nested expansion panels from registering\n                        // to the same accordion.\n                        { provide: MAT_ACCORDION, useValue: undefined },\n                        { provide: MAT_EXPANSION_PANEL, useExisting: MatExpansionPanel },\n                    ], host: {\n                        'class': 'mat-expansion-panel',\n                        '[class.mat-expanded]': 'expanded',\n                        '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                        '[class.mat-expansion-panel-spacing]': '_hasSpacing()',\n                    }, template: \"<ng-content select=\\\"mat-expansion-panel-header\\\"></ng-content>\\n<div class=\\\"mat-expansion-panel-content\\\"\\n     role=\\\"region\\\"\\n     [@bodyExpansion]=\\\"_getExpandedState()\\\"\\n     (@bodyExpansion.done)=\\\"_bodyAnimationDone.next($event)\\\"\\n     [attr.aria-labelledby]=\\\"_headerId\\\"\\n     [id]=\\\"id\\\"\\n     #body>\\n  <div class=\\\"mat-expansion-panel-body\\\">\\n    <ng-content></ng-content>\\n    <ng-template [cdkPortalOutlet]=\\\"_portal\\\"></ng-template>\\n  </div>\\n  <ng-content select=\\\"mat-action-row\\\"></ng-content>\\n</div>\\n\", styles: [\".mat-expansion-panel{--mat-expansion-container-shape:4px;box-sizing:content-box;display:block;margin:0;overflow:hidden;transition:margin 225ms cubic-bezier(0.4, 0, 0.2, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);position:relative;background:var(--mat-expansion-container-background-color);color:var(--mat-expansion-container-text-color);border-radius:var(--mat-expansion-container-shape)}.mat-expansion-panel:not([class*=mat-elevation-z]){box-shadow:0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12)}.mat-accordion .mat-expansion-panel:not(.mat-expanded),.mat-accordion .mat-expansion-panel:not(.mat-expansion-panel-spacing){border-radius:0}.mat-accordion .mat-expansion-panel:first-of-type{border-top-right-radius:var(--mat-expansion-container-shape);border-top-left-radius:var(--mat-expansion-container-shape)}.mat-accordion .mat-expansion-panel:last-of-type{border-bottom-right-radius:var(--mat-expansion-container-shape);border-bottom-left-radius:var(--mat-expansion-container-shape)}.cdk-high-contrast-active .mat-expansion-panel{outline:solid 1px}.mat-expansion-panel.ng-animate-disabled,.ng-animate-disabled .mat-expansion-panel,.mat-expansion-panel._mat-animation-noopable{transition:none}.mat-expansion-panel-content{display:flex;flex-direction:column;overflow:visible;font-family:var(--mat-expansion-container-text-font);font-size:var(--mat-expansion-container-text-size);font-weight:var(--mat-expansion-container-text-weight);line-height:var(--mat-expansion-container-text-line-height);letter-spacing:var(--mat-expansion-container-text-tracking)}.mat-expansion-panel-content[style*=\\\"visibility: hidden\\\"] *{visibility:hidden !important}.mat-expansion-panel-body{padding:0 24px 16px}.mat-expansion-panel-spacing{margin:16px 0}.mat-accordion>.mat-expansion-panel-spacing:first-child,.mat-accordion>*:first-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-top:0}.mat-accordion>.mat-expansion-panel-spacing:last-child,.mat-accordion>*:last-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-bottom:0}.mat-action-row{border-top-style:solid;border-top-width:1px;display:flex;flex-direction:row;justify-content:flex-end;padding:16px 8px 16px 24px;border-top-color:var(--mat-expansion-actions-divider-color)}.mat-action-row .mat-button-base,.mat-action-row .mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-action-row .mat-button-base,[dir=rtl] .mat-action-row .mat-mdc-button-base{margin-left:0;margin-right:8px}\"] }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: SkipSelf\n                }, {\n                    type: Inject,\n                    args: [MAT_ACCORDION]\n                }] }, { type: i0.ChangeDetectorRef }, { type: i1.UniqueSelectionDispatcher }, { type: i0.ViewContainerRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS]\n                }, {\n                    type: Optional\n                }] }]; }, propDecorators: { hideToggle: [{\n                type: Input\n            }], togglePosition: [{\n                type: Input\n            }], afterExpand: [{\n                type: Output\n            }], afterCollapse: [{\n                type: Output\n            }], _lazyContent: [{\n                type: ContentChild,\n                args: [MatExpansionPanelContent]\n            }], _body: [{\n                type: ViewChild,\n                args: ['body']\n            }] } });\n/**\n * Actions of a `<mat-expansion-panel>`.\n */\nclass MatExpansionPanelActionRow {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatExpansionPanelActionRow, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.1.1\", type: MatExpansionPanelActionRow, selector: \"mat-action-row\", host: { classAttribute: \"mat-action-row\" }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatExpansionPanelActionRow, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-action-row',\n                    host: {\n                        class: 'mat-action-row',\n                    },\n                }]\n        }] });\n\n// Boilerplate for applying mixins to MatExpansionPanelHeader.\n/** @docs-private */\nclass MatExpansionPanelHeaderBase {\n}\nconst _MatExpansionPanelHeaderMixinBase = mixinTabIndex(MatExpansionPanelHeaderBase);\n/**\n * Header element of a `<mat-expansion-panel>`.\n */\nclass MatExpansionPanelHeader extends _MatExpansionPanelHeaderMixinBase {\n    constructor(panel, _element, _focusMonitor, _changeDetectorRef, defaultOptions, _animationMode, tabIndex) {\n        super();\n        this.panel = panel;\n        this._element = _element;\n        this._focusMonitor = _focusMonitor;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._animationMode = _animationMode;\n        this._parentChangeSubscription = Subscription.EMPTY;\n        const accordionHideToggleChange = panel.accordion\n            ? panel.accordion._stateChanges.pipe(filter(changes => !!(changes['hideToggle'] || changes['togglePosition'])))\n            : EMPTY;\n        this.tabIndex = parseInt(tabIndex || '') || 0;\n        // Since the toggle state depends on an @Input on the panel, we\n        // need to subscribe and trigger change detection manually.\n        this._parentChangeSubscription = merge(panel.opened, panel.closed, accordionHideToggleChange, panel._inputChanges.pipe(filter(changes => {\n            return !!(changes['hideToggle'] || changes['disabled'] || changes['togglePosition']);\n        }))).subscribe(() => this._changeDetectorRef.markForCheck());\n        // Avoids focus being lost if the panel contained the focused element and was closed.\n        panel.closed\n            .pipe(filter(() => panel._containsFocus()))\n            .subscribe(() => _focusMonitor.focusVia(_element, 'program'));\n        if (defaultOptions) {\n            this.expandedHeight = defaultOptions.expandedHeight;\n            this.collapsedHeight = defaultOptions.collapsedHeight;\n        }\n    }\n    /**\n     * Whether the associated panel is disabled. Implemented as a part of `FocusableOption`.\n     * @docs-private\n     */\n    get disabled() {\n        return this.panel.disabled;\n    }\n    /** Toggles the expanded state of the panel. */\n    _toggle() {\n        if (!this.disabled) {\n            this.panel.toggle();\n        }\n    }\n    /** Gets whether the panel is expanded. */\n    _isExpanded() {\n        return this.panel.expanded;\n    }\n    /** Gets the expanded state string of the panel. */\n    _getExpandedState() {\n        return this.panel._getExpandedState();\n    }\n    /** Gets the panel id. */\n    _getPanelId() {\n        return this.panel.id;\n    }\n    /** Gets the toggle position for the header. */\n    _getTogglePosition() {\n        return this.panel.togglePosition;\n    }\n    /** Gets whether the expand indicator should be shown. */\n    _showToggle() {\n        return !this.panel.hideToggle && !this.panel.disabled;\n    }\n    /**\n     * Gets the current height of the header. Null if no custom height has been\n     * specified, and if the default height from the stylesheet should be used.\n     */\n    _getHeaderHeight() {\n        const isExpanded = this._isExpanded();\n        if (isExpanded && this.expandedHeight) {\n            return this.expandedHeight;\n        }\n        else if (!isExpanded && this.collapsedHeight) {\n            return this.collapsedHeight;\n        }\n        return null;\n    }\n    /** Handle keydown event calling to toggle() if appropriate. */\n    _keydown(event) {\n        switch (event.keyCode) {\n            // Toggle for space and enter keys.\n            case SPACE:\n            case ENTER:\n                if (!hasModifierKey(event)) {\n                    event.preventDefault();\n                    this._toggle();\n                }\n                break;\n            default:\n                if (this.panel.accordion) {\n                    this.panel.accordion._handleHeaderKeydown(event);\n                }\n                return;\n        }\n    }\n    /**\n     * Focuses the panel header. Implemented as a part of `FocusableOption`.\n     * @param origin Origin of the action that triggered the focus.\n     * @docs-private\n     */\n    focus(origin, options) {\n        if (origin) {\n            this._focusMonitor.focusVia(this._element, origin, options);\n        }\n        else {\n            this._element.nativeElement.focus(options);\n        }\n    }\n    ngAfterViewInit() {\n        this._focusMonitor.monitor(this._element).subscribe(origin => {\n            if (origin && this.panel.accordion) {\n                this.panel.accordion._handleHeaderFocus(this);\n            }\n        });\n    }\n    ngOnDestroy() {\n        this._parentChangeSubscription.unsubscribe();\n        this._focusMonitor.stopMonitoring(this._element);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatExpansionPanelHeader, deps: [{ token: MatExpansionPanel, host: true }, { token: i0.ElementRef }, { token: i2$1.FocusMonitor }, { token: i0.ChangeDetectorRef }, { token: MAT_EXPANSION_PANEL_DEFAULT_OPTIONS, optional: true }, { token: ANIMATION_MODULE_TYPE, optional: true }, { token: 'tabindex', attribute: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.1.1\", type: MatExpansionPanelHeader, selector: \"mat-expansion-panel-header\", inputs: { tabIndex: \"tabIndex\", expandedHeight: \"expandedHeight\", collapsedHeight: \"collapsedHeight\" }, host: { attributes: { \"role\": \"button\" }, listeners: { \"click\": \"_toggle()\", \"keydown\": \"_keydown($event)\" }, properties: { \"attr.id\": \"panel._headerId\", \"attr.tabindex\": \"tabIndex\", \"attr.aria-controls\": \"_getPanelId()\", \"attr.aria-expanded\": \"_isExpanded()\", \"attr.aria-disabled\": \"panel.disabled\", \"class.mat-expanded\": \"_isExpanded()\", \"class.mat-expansion-toggle-indicator-after\": \"_getTogglePosition() === 'after'\", \"class.mat-expansion-toggle-indicator-before\": \"_getTogglePosition() === 'before'\", \"class._mat-animation-noopable\": \"_animationMode === \\\"NoopAnimations\\\"\", \"style.height\": \"_getHeaderHeight()\" }, classAttribute: \"mat-expansion-panel-header mat-focus-indicator\" }, usesInheritance: true, ngImport: i0, template: \"<span class=\\\"mat-content\\\" [class.mat-content-hide-toggle]=\\\"!_showToggle()\\\">\\n  <ng-content select=\\\"mat-panel-title\\\"></ng-content>\\n  <ng-content select=\\\"mat-panel-description\\\"></ng-content>\\n  <ng-content></ng-content>\\n</span>\\n<span [@indicatorRotate]=\\\"_getExpandedState()\\\" *ngIf=\\\"_showToggle()\\\"\\n      class=\\\"mat-expansion-indicator\\\"></span>\\n\", styles: [\".mat-expansion-panel-header{display:flex;flex-direction:row;align-items:center;padding:0 24px;border-radius:inherit;transition:height 225ms cubic-bezier(0.4, 0, 0.2, 1);height:var(--mat-expansion-header-collapsed-state-height);font-family:var(--mat-expansion-header-text-font);font-size:var(--mat-expansion-header-text-size);font-weight:var(--mat-expansion-header-text-weight);line-height:var(--mat-expansion-header-text-line-height);letter-spacing:var(--mat-expansion-header-text-tracking)}.mat-expansion-panel-header.mat-expanded{height:var(--mat-expansion-header-expanded-state-height)}.mat-expansion-panel-header[aria-disabled=true]{color:var(--mat-expansion-header-disabled-state-text-color)}.mat-expansion-panel-header:not([aria-disabled=true]){cursor:pointer}.mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:not([aria-disabled=true]):hover{background:var(--mat-expansion-header-hover-state-layer-color)}@media(hover: none){.mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:not([aria-disabled=true]):hover{background:var(--mat-expansion-container-background-color)}}.mat-expansion-panel .mat-expansion-panel-header:not([aria-disabled=true]).cdk-keyboard-focused,.mat-expansion-panel .mat-expansion-panel-header:not([aria-disabled=true]).cdk-program-focused{background:var(--mat-expansion-header-focus-state-layer-color)}.mat-expansion-panel-header._mat-animation-noopable{transition:none}.mat-expansion-panel-header:focus,.mat-expansion-panel-header:hover{outline:none}.mat-expansion-panel-header.mat-expanded:focus,.mat-expansion-panel-header.mat-expanded:hover{background:inherit}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before{flex-direction:row-reverse}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 16px 0 0}[dir=rtl] .mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 0 0 16px}.mat-content{display:flex;flex:1;flex-direction:row;overflow:hidden}.mat-content.mat-content-hide-toggle{margin-right:8px}[dir=rtl] .mat-content.mat-content-hide-toggle{margin-right:0;margin-left:8px}.mat-expansion-toggle-indicator-before .mat-content.mat-content-hide-toggle{margin-left:24px;margin-right:0}[dir=rtl] .mat-expansion-toggle-indicator-before .mat-content.mat-content-hide-toggle{margin-right:24px;margin-left:0}.mat-expansion-panel-header-title{color:var(--mat-expansion-header-text-color)}.mat-expansion-panel-header-title,.mat-expansion-panel-header-description{display:flex;flex-grow:1;flex-basis:0;margin-right:16px;align-items:center}[dir=rtl] .mat-expansion-panel-header-title,[dir=rtl] .mat-expansion-panel-header-description{margin-right:0;margin-left:16px}.mat-expansion-panel-header[aria-disabled=true] .mat-expansion-panel-header-title,.mat-expansion-panel-header[aria-disabled=true] .mat-expansion-panel-header-description{color:inherit}.mat-expansion-panel-header-description{flex-grow:2;color:var(--mat-expansion-header-description-color)}.mat-expansion-indicator::after{border-style:solid;border-width:0 2px 2px 0;content:\\\"\\\";display:inline-block;padding:3px;transform:rotate(45deg);vertical-align:middle;color:var(--mat-expansion-header-indicator-color)}.cdk-high-contrast-active .mat-expansion-panel-content{border-top:1px solid;border-top-left-radius:0;border-top-right-radius:0}\"], dependencies: [{ kind: \"directive\", type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], animations: [matExpansionAnimations.indicatorRotate], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatExpansionPanelHeader, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-expansion-panel-header', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, inputs: ['tabIndex'], animations: [matExpansionAnimations.indicatorRotate], host: {\n                        'class': 'mat-expansion-panel-header mat-focus-indicator',\n                        'role': 'button',\n                        '[attr.id]': 'panel._headerId',\n                        '[attr.tabindex]': 'tabIndex',\n                        '[attr.aria-controls]': '_getPanelId()',\n                        '[attr.aria-expanded]': '_isExpanded()',\n                        '[attr.aria-disabled]': 'panel.disabled',\n                        '[class.mat-expanded]': '_isExpanded()',\n                        '[class.mat-expansion-toggle-indicator-after]': `_getTogglePosition() === 'after'`,\n                        '[class.mat-expansion-toggle-indicator-before]': `_getTogglePosition() === 'before'`,\n                        '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                        '[style.height]': '_getHeaderHeight()',\n                        '(click)': '_toggle()',\n                        '(keydown)': '_keydown($event)',\n                    }, template: \"<span class=\\\"mat-content\\\" [class.mat-content-hide-toggle]=\\\"!_showToggle()\\\">\\n  <ng-content select=\\\"mat-panel-title\\\"></ng-content>\\n  <ng-content select=\\\"mat-panel-description\\\"></ng-content>\\n  <ng-content></ng-content>\\n</span>\\n<span [@indicatorRotate]=\\\"_getExpandedState()\\\" *ngIf=\\\"_showToggle()\\\"\\n      class=\\\"mat-expansion-indicator\\\"></span>\\n\", styles: [\".mat-expansion-panel-header{display:flex;flex-direction:row;align-items:center;padding:0 24px;border-radius:inherit;transition:height 225ms cubic-bezier(0.4, 0, 0.2, 1);height:var(--mat-expansion-header-collapsed-state-height);font-family:var(--mat-expansion-header-text-font);font-size:var(--mat-expansion-header-text-size);font-weight:var(--mat-expansion-header-text-weight);line-height:var(--mat-expansion-header-text-line-height);letter-spacing:var(--mat-expansion-header-text-tracking)}.mat-expansion-panel-header.mat-expanded{height:var(--mat-expansion-header-expanded-state-height)}.mat-expansion-panel-header[aria-disabled=true]{color:var(--mat-expansion-header-disabled-state-text-color)}.mat-expansion-panel-header:not([aria-disabled=true]){cursor:pointer}.mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:not([aria-disabled=true]):hover{background:var(--mat-expansion-header-hover-state-layer-color)}@media(hover: none){.mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:not([aria-disabled=true]):hover{background:var(--mat-expansion-container-background-color)}}.mat-expansion-panel .mat-expansion-panel-header:not([aria-disabled=true]).cdk-keyboard-focused,.mat-expansion-panel .mat-expansion-panel-header:not([aria-disabled=true]).cdk-program-focused{background:var(--mat-expansion-header-focus-state-layer-color)}.mat-expansion-panel-header._mat-animation-noopable{transition:none}.mat-expansion-panel-header:focus,.mat-expansion-panel-header:hover{outline:none}.mat-expansion-panel-header.mat-expanded:focus,.mat-expansion-panel-header.mat-expanded:hover{background:inherit}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before{flex-direction:row-reverse}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 16px 0 0}[dir=rtl] .mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 0 0 16px}.mat-content{display:flex;flex:1;flex-direction:row;overflow:hidden}.mat-content.mat-content-hide-toggle{margin-right:8px}[dir=rtl] .mat-content.mat-content-hide-toggle{margin-right:0;margin-left:8px}.mat-expansion-toggle-indicator-before .mat-content.mat-content-hide-toggle{margin-left:24px;margin-right:0}[dir=rtl] .mat-expansion-toggle-indicator-before .mat-content.mat-content-hide-toggle{margin-right:24px;margin-left:0}.mat-expansion-panel-header-title{color:var(--mat-expansion-header-text-color)}.mat-expansion-panel-header-title,.mat-expansion-panel-header-description{display:flex;flex-grow:1;flex-basis:0;margin-right:16px;align-items:center}[dir=rtl] .mat-expansion-panel-header-title,[dir=rtl] .mat-expansion-panel-header-description{margin-right:0;margin-left:16px}.mat-expansion-panel-header[aria-disabled=true] .mat-expansion-panel-header-title,.mat-expansion-panel-header[aria-disabled=true] .mat-expansion-panel-header-description{color:inherit}.mat-expansion-panel-header-description{flex-grow:2;color:var(--mat-expansion-header-description-color)}.mat-expansion-indicator::after{border-style:solid;border-width:0 2px 2px 0;content:\\\"\\\";display:inline-block;padding:3px;transform:rotate(45deg);vertical-align:middle;color:var(--mat-expansion-header-indicator-color)}.cdk-high-contrast-active .mat-expansion-panel-content{border-top:1px solid;border-top-left-radius:0;border-top-right-radius:0}\"] }]\n        }], ctorParameters: function () { return [{ type: MatExpansionPanel, decorators: [{\n                    type: Host\n                }] }, { type: i0.ElementRef }, { type: i2$1.FocusMonitor }, { type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS]\n                }, {\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }, { type: undefined, decorators: [{\n                    type: Attribute,\n                    args: ['tabindex']\n                }] }]; }, propDecorators: { expandedHeight: [{\n                type: Input\n            }], collapsedHeight: [{\n                type: Input\n            }] } });\n/**\n * Description element of a `<mat-expansion-panel-header>`.\n */\nclass MatExpansionPanelDescription {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatExpansionPanelDescription, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.1.1\", type: MatExpansionPanelDescription, selector: \"mat-panel-description\", host: { classAttribute: \"mat-expansion-panel-header-description\" }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatExpansionPanelDescription, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-panel-description',\n                    host: {\n                        class: 'mat-expansion-panel-header-description',\n                    },\n                }]\n        }] });\n/**\n * Title element of a `<mat-expansion-panel-header>`.\n */\nclass MatExpansionPanelTitle {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatExpansionPanelTitle, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.1.1\", type: MatExpansionPanelTitle, selector: \"mat-panel-title\", host: { classAttribute: \"mat-expansion-panel-header-title\" }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatExpansionPanelTitle, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-panel-title',\n                    host: {\n                        class: 'mat-expansion-panel-header-title',\n                    },\n                }]\n        }] });\n\n/**\n * Directive for a Material Design Accordion.\n */\nclass MatAccordion extends CdkAccordion {\n    constructor() {\n        super(...arguments);\n        /** Headers belonging to this accordion. */\n        this._ownHeaders = new QueryList();\n        this._hideToggle = false;\n        /**\n         * Display mode used for all expansion panels in the accordion. Currently two display\n         * modes exist:\n         *  default - a gutter-like spacing is placed around any expanded panel, placing the expanded\n         *     panel at a different elevation from the rest of the accordion.\n         *  flat - no spacing is placed around expanded panels, showing all panels at the same\n         *     elevation.\n         */\n        this.displayMode = 'default';\n        /** The position of the expansion indicator. */\n        this.togglePosition = 'after';\n    }\n    /** Whether the expansion indicator should be hidden. */\n    get hideToggle() {\n        return this._hideToggle;\n    }\n    set hideToggle(show) {\n        this._hideToggle = coerceBooleanProperty(show);\n    }\n    ngAfterContentInit() {\n        this._headers.changes\n            .pipe(startWith(this._headers))\n            .subscribe((headers) => {\n            this._ownHeaders.reset(headers.filter(header => header.panel.accordion === this));\n            this._ownHeaders.notifyOnChanges();\n        });\n        this._keyManager = new FocusKeyManager(this._ownHeaders).withWrap().withHomeAndEnd();\n    }\n    /** Handles keyboard events coming in from the panel headers. */\n    _handleHeaderKeydown(event) {\n        this._keyManager.onKeydown(event);\n    }\n    _handleHeaderFocus(header) {\n        this._keyManager.updateActiveItem(header);\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._keyManager?.destroy();\n        this._ownHeaders.destroy();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatAccordion, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.1.1\", type: MatAccordion, selector: \"mat-accordion\", inputs: { multi: \"multi\", hideToggle: \"hideToggle\", displayMode: \"displayMode\", togglePosition: \"togglePosition\" }, host: { properties: { \"class.mat-accordion-multi\": \"this.multi\" }, classAttribute: \"mat-accordion\" }, providers: [\n            {\n                provide: MAT_ACCORDION,\n                useExisting: MatAccordion,\n            },\n        ], queries: [{ propertyName: \"_headers\", predicate: MatExpansionPanelHeader, descendants: true }], exportAs: [\"matAccordion\"], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatAccordion, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-accordion',\n                    exportAs: 'matAccordion',\n                    inputs: ['multi'],\n                    providers: [\n                        {\n                            provide: MAT_ACCORDION,\n                            useExisting: MatAccordion,\n                        },\n                    ],\n                    host: {\n                        class: 'mat-accordion',\n                        // Class binding which is only used by the test harness as there is no other\n                        // way for the harness to detect if multiple panel support is enabled.\n                        '[class.mat-accordion-multi]': 'this.multi',\n                    },\n                }]\n        }], propDecorators: { _headers: [{\n                type: ContentChildren,\n                args: [MatExpansionPanelHeader, { descendants: true }]\n            }], hideToggle: [{\n                type: Input\n            }], displayMode: [{\n                type: Input\n            }], togglePosition: [{\n                type: Input\n            }] } });\n\nclass MatExpansionModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatExpansionModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.1.1\", ngImport: i0, type: MatExpansionModule, declarations: [MatAccordion,\n            MatExpansionPanel,\n            MatExpansionPanelActionRow,\n            MatExpansionPanelHeader,\n            MatExpansionPanelTitle,\n            MatExpansionPanelDescription,\n            MatExpansionPanelContent], imports: [CommonModule, MatCommonModule, CdkAccordionModule, PortalModule], exports: [MatAccordion,\n            MatExpansionPanel,\n            MatExpansionPanelActionRow,\n            MatExpansionPanelHeader,\n            MatExpansionPanelTitle,\n            MatExpansionPanelDescription,\n            MatExpansionPanelContent] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatExpansionModule, imports: [CommonModule, MatCommonModule, CdkAccordionModule, PortalModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatExpansionModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, MatCommonModule, CdkAccordionModule, PortalModule],\n                    exports: [\n                        MatAccordion,\n                        MatExpansionPanel,\n                        MatExpansionPanelActionRow,\n                        MatExpansionPanelHeader,\n                        MatExpansionPanelTitle,\n                        MatExpansionPanelDescription,\n                        MatExpansionPanelContent,\n                    ],\n                    declarations: [\n                        MatAccordion,\n                        MatExpansionPanel,\n                        MatExpansionPanelActionRow,\n                        MatExpansionPanelHeader,\n                        MatExpansionPanelTitle,\n                        MatExpansionPanelDescription,\n                        MatExpansionPanelContent,\n                    ],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { EXPANSION_PANEL_ANIMATION_TIMING, MAT_ACCORDION, MAT_EXPANSION_PANEL, MAT_EXPANSION_PANEL_DEFAULT_OPTIONS, MatAccordion, MatExpansionModule, MatExpansionPanel, MatExpansionPanelActionRow, MatExpansionPanelContent, MatExpansionPanelDescription, MatExpansionPanelHeader, MatExpansionPanelTitle, matExpansionAnimations };\n"],"names":["Actions","ofType","createEffect","switchMap","mergeMap","catchError","take","PaygateService","paygateActions","PaygateEffects","constructor","actions$","api","ReqPaySubs$","pipe","ReqPaySubs","payload","postPaySubs","transaction","console","log","ReqPaySubsSuccess","error","message","ReqPaySubsFail","_","i0","ɵɵinject","i1","i2","_2","factory","ɵfac","HttpClient","paygateAPI","http","baseHeaders","password","post","headers","providedIn","SUPPORT_ROUTE","Router","BehaviorSubject","Loader","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","ɵɵpureFunction2","_c0","ctx_r0","skuduOfficeCoordinates","lat","lng","ɵɵpureFunction0","_c1","_c2","ContactUsComponent","loader","router","apiLoaded","ngOnInit","importLibrary","then","Map","next","catch","e","handleBack","navigate","ɵɵdirectiveInject","selectors","decls","vars","consts","template","ContactUsComponent_Template","rf","ctx","ɵɵlistener","ContactUsComponent_Template_img_click_2_listener","ɵɵtext","ɵɵtemplate","ContactUsComponent_div_34_Template","ɵɵpipeBind1","TUTORIAL_TABLE_DATA","ɵɵtextInterpolate1","item_r1","title","ɵɵtextInterpolate","value","DetailedTutorialComponent","items","DetailedTutorialComponent_Template","DetailedTutorialComponent_Template_img_click_2_listener","DetailedTutorialComponent_div_37_Template","FAQComponent","FAQComponent_Template","FAQComponent_Template_img_click_2_listener","KnowYourCounterPartyComponent","KnowYourCounterPartyComponent_Template","KnowYourCounterPartyComponent_Template_img_click_2_listener","MatLegacyDialogRef","MatDialogRef","PROFILE_ROUTE","NotVerifiedModalComponent","dialogRef","handleClose","close","handleRouteToProfile","queryParams","tabIndex","NotVerifiedModalComponent_Template","NotVerifiedModalComponent_Template_img_click_2_listener","NotVerifiedModalComponent_Template_button_click_13_listener","NotVerifiedModalComponent_Template_button_click_15_listener","MAT_LEGACY_DIALOG_DATA","MAT_DIALOG_DATA","MatSnackBar","Purchases","Capacitor","select","Store","transformSingleUsersForVerificationHelper","snackBarConfigs","actions","fromRoot","fromApp","SubscriptionTypeModalComponent_div_1_Template_img_click_1_listener","ɵɵrestoreView","_r5","ctx_r4","ɵɵnextContext","ɵɵresetView","data","verificationSubscription","source","ɵɵsanitizeUrl","SubscriptionTypeModalComponent_div_2_div_1_Template_button_click_7_listener","_r10","ctx_r9","isWeb","handleNativePurchase","id","SubscriptionTypeModalComponent_div_2_div_1_Template_button_click_15_listener","ctx_r11","ctx_r6","product","promotionalText","description","period","isLoading","price","product_monthly","SubscriptionTypeModalComponent_div_2_div_1_Template","SubscriptionTypeModalComponent_div_2_ng_template_2_Template","ɵɵtemplateRefExtractor","ctx_r1","_r7","SubscriptionTypeModalComponent_ng_template_3_Template_button_click_15_listener","_r16","ctx_r15","handleEmail","SubscriptionTypeModalComponent_ng_template_3_mat_progress_spinner_16_Template","SubscriptionTypeModalComponent_ng_template_3_ng_template_17_Template","ctx_r3","isEmailLoading","_r13","SubscriptionTypeModalComponent","purchases","snackbar","store","isSuccess","getPlatform","authSelectors","getUser","subscribe","user","getOfferings","offerings","productName","all","identifier","annualOffering","annual","monthlyOffering","monthly","open","errorConfig","purchasePeriod","verificationId","currentDate","Date","purchasePackage","expiryDate","setFullYear","getFullYear","getTime","verificationHelper","userCancelled","setMonth","getMonth","authActions","ReqUpdateUserVerificationStatusSuccess","successConfig","ReqUpdateUserVerificationStatusFail","dispatch","ReqUpdateUserVerificationStatus","userVerifications","showSnackBar","appActions","ReqEmailVerificationFormSuccess","ReqEmailVerificationFormFail","ReqEmailVerificationForm","i3","i4","i5","SubscriptionTypeModalComponent_Template","SubscriptionTypeModalComponent_div_1_Template","SubscriptionTypeModalComponent_div_2_Template","SubscriptionTypeModalComponent_ng_template_3_Template","_r2","MatLegacyDialog","MatDialog","Dictionary","GRAINSA_VERIFICATION_ID","GRAINSA_VERIFICATION_TEXT","promotion","VerificationCardComponent","dialog","handleVerificationModal","key","isGrainSAVerified","panelClass","autoFocus","inputs","VerificationCardComponent_Template","VerificationCardComponent_Template_div_click_0_listener","VerificationCardComponent_div_1_Template","baseVerifications","promotionVerifications","verificationTypes","VERIFICATION_SUBSCRIPTIONS","DOCUMENT_VIEWER_ROUTE","verificationSubscription_r11","verificationSubscription_r12","VerificationComponent_ng_container_6_div_15_a_6_Template","VerificationComponent_ng_container_6_div_15_Template_a_click_7_listener","_r15","ctx_r14","handleRouteToDocumentViewer","VerificationComponent_ng_container_6_div_15_Template_a_click_10_listener","ctx_r16","VerificationComponent_ng_container_6_div_15_Template_a_click_13_listener","ctx_r17","ctx_r7","platform","ɵɵelementContainerStart","VerificationComponent_ng_container_6_div_6_Template","VerificationComponent_ng_container_6_div_7_Template","VerificationComponent_ng_container_6_div_9_Template","VerificationComponent_ng_container_6_div_13_Template","VerificationComponent_ng_container_6_div_15_Template","VerificationComponent_ng_container_6_Template_button_click_22_listener","_r19","ctx_r18","handleRequestByEmail","VerificationComponent_ng_container_6_mat_progress_spinner_23_Template","VerificationComponent_ng_container_6_ng_template_24_Template","ɵɵelementContainerEnd","baseVerificationSubscriptions","promotionVerificationSubscriptions","isActionLoading","_r9","VerificationComponent_ng_template_7_div_11_Template","ctx_r2","userVerification","name","verificationDate","toLocaleDateString","VerificationComponent","verificationSubscriptions","isUserVerified","Object","fromEntries","entries","filter","includes","verification","grainSA","isVerified","VerificationComponent_Template","VerificationComponent_Template_img_click_2_listener","VerificationComponent_ng_container_6_Template","VerificationComponent_ng_template_7_Template","_r1","SupportComponent","RouterModule","AngularFireAuthGuard","redirectUnauthorizedTo","SIGNIN_ROUTE","redirectUnauthorizedToLogin","routes","path","children","canActivate","authGuardPipe","component","SupportRoutingModule","_3","forChild","imports","exports","HOME_ROUTE","LANDING_ROUTE","SUPPORT_CARDS_DATA","Location","ɵɵpropertyInterpolate","card_r1","linksTo","sourceAlt","SupportComponent_div_6_ng_template_2_Template_div_click_0_listener","_r8","$implicit","handleNavigate","routesTo","SupportComponent_div_6_a_1_Template","SupportComponent_div_6_ng_template_2_Template","SupportComponent_div_6_Template_ng_template_click_2_listener","restoredCtx","_r11","ctx_r10","_r3","location","cards","handleNavigateToHome","route","fromSupport","SupportComponent_Template","SupportComponent_Template_img_click_2_listener","SupportComponent_Template_img_click_4_listener","SupportComponent_div_6_Template","CommonModule","MatRippleModule","MatExpansionModule","MatLegacyProgressSpinnerModule","MatProgressSpinnerModule","EffectsModule","GoogleMapsModule","NgxGpAutocompleteModule","SupportModule","forFeature","declarations","EffectsFeatureModule","InjectionToken","Directive","Input","EventEmitter","Optional","Inject","SkipSelf","Output","NgModule","coerceBooleanProperty","Subject","Subscription","nextId$1","CDK_ACCORDION","CdkAccordion","_stateChanges","_openCloseAllActions","_multi","multi","openAll","closeAll","ngOnChanges","changes","ngOnDestroy","complete","CdkAccordion_Factory","t","ɵdir","ɵɵdefineDirective","type","exportAs","features","ɵɵProvidersFeature","provide","useExisting","ɵɵNgOnChangesFeature","ngDevMode","ɵsetClassMetadata","args","selector","providers","nextId","CdkAccordionItem","expanded","_expanded","expandedChange","emit","opened","accordionId","accordion","_expansionDispatcher","notify","closed","_changeDetectorRef","markForCheck","disabled","_disabled","_openCloseAllSubscription","EMPTY","destroyed","_removeUniqueSelectionListener","listen","_subscribeToOpenCloseAllActions","unsubscribe","toggle","CdkAccordionItem_Factory","ChangeDetectorRef","UniqueSelectionDispatcher","outputs","useValue","undefined","decorators","CdkAccordionModule","CdkAccordionModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","TemplatePortal","PortalModule","DOCUMENT","Component","ViewEncapsulation","ChangeDetectionStrategy","ContentChild","ViewChild","Host","Attribute","QueryList","ContentChildren","mixinTabIndex","MatCommonModule","i2$1","FocusKeyManager","distinctUntilChanged","startWith","ENTER","hasModifierKey","SPACE","ANIMATION_MODULE_TYPE","merge","trigger","state","style","transition","animate","MatExpansionPanel_ng_template_5_Template","MatExpansionPanelHeader_span_4_Template","_getExpandedState","_c3","_c4","MAT_ACCORDION","EXPANSION_PANEL_ANIMATION_TIMING","matExpansionAnimations","indicatorRotate","transform","bodyExpansion","height","visibility","MAT_EXPANSION_PANEL","MatExpansionPanelContent","_template","_expansionPanel","MatExpansionPanelContent_Factory","TemplateRef","uniqueId","MAT_EXPANSION_PANEL_DEFAULT_OPTIONS","MatExpansionPanel","hideToggle","_hideToggle","togglePosition","_togglePosition","_uniqueSelectionDispatcher","_viewContainerRef","_document","_animationMode","defaultOptions","afterExpand","afterCollapse","_inputChanges","_headerId","_bodyAnimationDone","x","y","fromState","toState","event","_hasSpacing","displayMode","ngAfterContentInit","_lazyContent","_portal","_containsFocus","_body","focusedElement","activeElement","bodyElement","nativeElement","contains","MatExpansionPanel_Factory","ViewContainerRef","ɵcmp","ɵɵdefineComponent","contentQueries","MatExpansionPanel_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","viewQuery","MatExpansionPanel_Query","ɵɵviewQuery","hostAttrs","hostVars","hostBindings","MatExpansionPanel_HostBindings","ɵɵclassProp","ɵɵInheritDefinitionFeature","ngContentSelectors","MatExpansionPanel_Template","ɵɵprojectionDef","ɵɵprojection","MatExpansionPanel_Template_div_animation_bodyExpansion_done_1_listener","$event","ɵɵattribute","dependencies","CdkPortalOutlet","styles","encapsulation","animation","changeDetection","None","OnPush","animations","host","MatExpansionPanelActionRow","MatExpansionPanelActionRow_Factory","class","MatExpansionPanelHeaderBase","_MatExpansionPanelHeaderMixinBase","MatExpansionPanelHeader","panel","_element","_focusMonitor","_parentChangeSubscription","accordionHideToggleChange","parseInt","focusVia","expandedHeight","collapsedHeight","_toggle","_isExpanded","_getPanelId","_getTogglePosition","_showToggle","_getHeaderHeight","isExpanded","_keydown","keyCode","preventDefault","_handleHeaderKeydown","focus","origin","options","ngAfterViewInit","monitor","_handleHeaderFocus","stopMonitoring","MatExpansionPanelHeader_Factory","ElementRef","FocusMonitor","ɵɵinjectAttribute","MatExpansionPanelHeader_HostBindings","MatExpansionPanelHeader_click_HostBindingHandler","MatExpansionPanelHeader_keydown_HostBindingHandler","ɵɵstyleProp","MatExpansionPanelHeader_Template","NgIf","MatExpansionPanelDescription","MatExpansionPanelDescription_Factory","MatExpansionPanelTitle","MatExpansionPanelTitle_Factory","MatAccordion","arguments","_ownHeaders","show","_headers","reset","header","notifyOnChanges","_keyManager","withWrap","withHomeAndEnd","onKeydown","updateActiveItem","destroy","ɵMatAccordion_BaseFactory","MatAccordion_Factory","ɵɵgetInheritedFactory","MatAccordion_ContentQueries","MatAccordion_HostBindings","descendants","MatExpansionModule_Factory"],"sourceRoot":"webpack:///","x_google_ignoreList":[22,23]}